# 大大鸣版 体制能量 一天5次 两次算到账
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_tznl  抓取 ck WXlogin=oK6LwjplxxxxxxxxxxxxxxxACljzGM  只要=号右边的值就行
# dadaming_tznlmz  自行获取 瓶盖码  有便宜的可以联系大大鸣
#坐标dadaming_zb  经度#维度
# 多账号 使用#   例如：账号1#账号2
#多瓶盖换行即可
#新增汇总
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='GVTB0aPXzLixuJcS', magic=8083):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='Qp0?Z901-`gZ}br_7g!OQPclQm9+eXpZ`tah;KeO-V$)>2qCvEI)f6e9Rj3?9&-5%G=+DDZ)q@45*2rG%gp;dPzYRH>@l2(_rTJ|+#cmsMD}1b>+1jz5*$nA7230kUMdSPt8N?Adz)z_c&ye;Lzm*t+E%jK20HOo&j8@g-sy1V<5?dGvRWae*Pmqkf$y1UJe^bOaeSWDk2t&}cSF~@;Vydtk=2jjv$(}wVzXY3iqJMm2XKvoS=v&@Lgv}Ph}u)gzYHJQ5#qMgkh`(t&<5t&<63TIu8a0`{Eo^dbi~=}SjzJ)uh$mGQqth(+T7_n=GpO_nJ3FsxWZoQs9O8*L)xR@&`?HAV)Dtw3QnZphS2qk&NRqOCfU$p)7toeTpJ*)nXzWbIpmervb&cG^wjmaapQK3Qft~`4A=PxwbT=YS>@$~&VfR)3Vd7Ym0a%3r^~dYqOxG#T;K8Th)liTkqE^woh{<DlvX>CMwu%mmd0ewp<js)M$s_h1;M-9ZHVK!ZnNKQeH_C_BWktc_)1Sa@UR<r1=c?1nK46Ge01I@g{F9j@)ddo^Vk&)untAJ!tT0S3)Gjo=Go{m$e!k8p_4)Ca>)yd1Z3eQnCISVA~@n$@SbOf1=K;s);Hk5;)`P7)mHP011{&{)%b=!D!DnJ9DaJX;AG`bLFkJP{zI;+gdMsP?|`7R=_vKi!B2=Z^iH|u7aZ<%Xt!3Bad2O`(j8_1-FP+O%%En|z;oH?jM=|R0=`Y-8R)2Nq7mC_mfh3J1swBf+2RI~5wqca2*p8)$Xe;?$bg1Lk%K|U*H$_1o1AEeyTn$KzTw7r2hHtah1_o4x1d^0z7M+N(wh6bliKTD({$d{B!W8UiP2lf1F8|FnIvVPsPL=i>rQmvSKP45+2xeXM&nE5=H8bMN4s$))OTW(KjSh<W7~&nW6$oY)!JUUziy}IG+sa1ue;@9!J<ZFK=aq?9`T!)f1wqkQ>;yN2BPR3HA%>|i)3q}Hx}DIaYOp6XL{1N#$C<%4T_d^m#TW^-7aZ<lShcJno(4gu|pPLl8_s{UY43p>}zMADQ-|ezgY2Su5tibC1WxJK0lLy;`EIE=|fA`$dbajQ__!Qbkx^a{zo88xohz%>QxDoLM0UkkUKyP5Yylc;KnvsLZ86ANlviQQP5K-Uk)gSsZ9oKLu&ZoLz|Dz8u*f;c+@hU*ToQ-<~QJ8mJRwH$a2#B_p*e`jQxH=qX`8?N}|fy`$BSwQ-*S`?p}CSBdjN!FTSx$Sv`)Ih0@o3PNS2Xcmh>2<P>tZ03;Rr-Qc!)ZJObWGf!eKRVM*CH&emK!^Y}ofrM8hZo^;caRML3eFl;8c>V@@eU@|YUY6<})83`8JaxCibW3C#KVowk3_iZ=Sr@+YAsW=#fO+%0{7yu0v9rvc-rbllN>a0MiR?(LLv(tQS6@J7^;ZVKG5!Y$h?2HzKQ&fG#<946QUeTfU(2)EY9C06C+KPFdDsY_V`h5w^;ds5XCH9Ncle|{GF6-*Ff4o^G+A+a9&rCr$K+IBu!zZ~)ygY;Rr(mA;zaGm=1i71P%Ej_A{E~&wG&z8UTk`^T*2`ZI=JQ%1{be_b(iWNV{wq5-F=KXZUU9ZKfx>jjws_>;0y56djm6<Of3Bjvg=Edy#7PkA%<A*3>dH({%@b`qEfIKjgaNBHn8;Ud+s~+m@MS9Gcq+wyP*TnDW=({cQ>UHWiSkEPh)3<Jm^(VS8Gi38bquOp#q-Jh3uXZVZFh_dw!*?tE4!jEGDA}j;uoQx57znmf$5`=DwR9oXV80J&-={8jA^lBctJm<A8};NCIKrSCuavHvITE0R@r~2!hIv&Z=+$7Er6vR?ceIz+1SCt(Jm;&4=bIyCUo+O~C3co{O|C_D62EUivMA$L%KJ+-YF2uUw;DU-K`cPGE+a>z`6zfl_4hZxA4Z(y|B2Tc{gVp^RF^1#|t4Ng-PHkby=&2-~mal6|QRahULCG<52w4}_l{db66JHDOa|_8Y#KVha!_KH?WkmwU7+<OChmxKU@^(-S&jm8eBeDf)m0<hy2@BVMM)Xj=jo#ycm+Lq{vWUv|I<dILjj?K=|c#k#FrbVH~<!JlzFi%wMMSTq%+*vj%soV=*Jwz<WXpvjG-T#YDp#uP#P$hG~=0YR7HjJnXE>eO8LCwrqE)Q&O<nmK4e?*9+V*;p<e_v|;-LTOFnJ%ugME~>|@IO@aS<yu<*Z+>t0!CBg;G+ZNs&`FqQSGujNkqsRJ9g<5Aa(Cq-K%44;D6)W2)<R-d6UfM!DDGef%ETR!&w(kIxd+ozje*7}WqW?oy*T+z=9ubB9(?kKm2|~GdYfV^M}|tNCy&Xk#7R9M6be`z;>amc#yhb399aO@tLm?@f^`SI&1V~e_lHCwyLyBk54dsyG2f)-P{HL9J#e8%RBCJZ6BkAH05?95Eew!(W=otIzn(?(h}fJEL&3OGZP##{aaO7lbAlRRg^p>b9ayt($KU!jL)MSKTt?1N_O=FGDCV(&Ys-)R2>q*kE8)FCm6JPnTtuvc6pU5=_XN4nubDfIEJAK^gnT`6*gw-$_f}mODoW?3wAqm;*`_|ozRSbC{G3MmD`>c?PCqiq2B2A+YNUPome|%NUf+K1{ws#3Aq#?wXjiph_G@=c`y!>)yrdtYW7(WirccFFkkUqtjsX#_PJJuQlLPog5YC4wV*2N4ek12Ac2j4R*NJx}IckfxLMIVG{-;26ZLH&eh=aQ2fMbB@W{{Vba<ns*%=wXe+6gtC(q)8<CIYW=lr>Y^FP`A10Lyf?5Ks^l7<<4eJG;g}+FM333(<2z4Eha?5Jb1;s}MHehg~p}a{f2TYp>-2aq(faQW;<((Ve*=_T~Lnl%A6+VFVq0VG6hfvMXHo>oU|ZQHjj)31h#G`U9Ljg@;k%DEF>v;HZLadHqBw!e*U?ots5FOVGvfg0Yc%<_hBTOvY{|nc;gj%JeL<Mmi95c4yiNd_&6LI~MD);>N#om(q{C&eX#_DzrE9r4p?vT&T^^1>a}5NEWs!a7Nxj&m`nhEf28Q8A85Y)eY_UR~3>&Es#Pv<BF_AjEj7Q_pq$E+>4_(8;8GzlfQP+eVJlXGFzriXSf$ux&5G1a0}BrJky9d-_`ZQmZZj1b{6&@5dEY_ToIM)$^ap~^TWwnpjW6<a&_f{lK;iWE)z=5<*OS$Q&RA2*5BYdaxh9+5fabGM+u}8y>km#qZG>`xrHfCZAoy66)QX*rgN_0V8)9ONUU`CU9gtedZ0m!yU5$;xk(R1tMH|^dO~nA`^u-oQ-5G(Ixk>@1s;-z$xfNI)O9KtVhXd2Yrr+Dj2lSt5{%MqwLNjjTLsb2Ae^|^-U7V_aK<`ZPlpBiLtq}Vx}zGqD*c_Ec%_B#a7;g9(lBa`eTzHJ%qyt_AG{U31|dq=))$XUH4+_rZ5>#?o#n^OWmVu*Hnr1tnpi-0C!K#XfkJEN;fx|!QA@1O!$Aqr(h6`*6?-R%;rF3(>k=X`ZpNPQ`Yz&OQ%1GjRs@K{dpxEfI%Y#jFFH$Fjb)uW+<FmF)jnlMDE>gIB^tR;WTt(qlsol+o6P+aa^fU_P2(_%f)bNqM9H)m@VGY{VU;@!vfMbmEP?Us!vu4wt2hzXi*ki*J)%wBBt$FU)~0_fXtDQxF3~yu_CNp<blFV7$^34a1}Ds{GQ+$euGAxIK9H!hk!h}=+q4JL*O&hFWPKZe0jwCcpT@eVGb4}w;8_?*E#aqUjIuqR&i|)u{p6L+__DhJ2WoGyKe9}6KG%!tlUk%MD_PQ9$QxHJEUL^WHf!0N!96B`rXjI~11Z;?di<~y5ey<p=51ZCT7BrI*>2b|0yB~4z>J)=s)roT_qHG8>(!kCceWUS<i^x!(1XlwpX;}u*>0$pdJ|7lsiM|Enu`&e?`3jYr&?X!x2E)=Cnf`j_0PH~OFJ_Y{Op__bNk8y04r5s_fw`Zu;lj4(70Kr{<-vWeLG~tuXxr(UTe^xfcy(uhatkAVCvJqg52_Jj2T*0XLX83>x1Mm;!<dus@8Oyvl)IHJ-bb$7Yq)a#Cyv?y*Do_dL*imYtKJz6Z^aa=ZhU55W+MYeqq_T;{_Yr&6f|}ock8IYeo{D>`d9ZLZ`2?Sp6CLxJ=)(B?Tw1yio>qc`?WJqdD2vWx@ReG0!s6=Q}^J#SrRGp@<1u0M~y$tUcU(R0i&I#1&-~g_#oaW8xEsT8%^RS~VTg$cMcUCW#!0c>OQnEsFj;sos24;r$KREVtG)V=)A|=Cdx-6Dhh50^}d9BgTMZR?O9$?UBvW`tTF=IW2c#9>0-xoYKwL;}TwkNR3f!eaXG=vX;4d_>P7RSjsKXeqOTso;@K%@?aE_Vry#=jc|%i+Yw{rs;GZ>+-J?ugCWUf7q`v%#AVkT0+1nr2<hHSW;!bCN|SfnxgD<I`WzdN8_pok*vhq@M)CmD9Q>laPS<e=tLEAc6xP-vll>COfsRr}Q>PSYH!0H<tUp_4J>YgvqBNNgxfAmgc_2;~wB#kZ)9o@pz&hZ|5pBkASZ^<?<J8%&v-*WWvza5X4sO49t_gQ$q0)D;UlF)zY>OUn0sIjvwwXznLOglA{{g^584pVs;^`<FD>h6Y5?NP?=d4gOc;JqoBxGOsv$QtK=(zTYx|&N*-G)S=4)0TMUXx?68sXM;!~8s}4RRDRni_-`cCK?j{iRqS3&x9n+x@GSmQElEvet-iW2xC$p+J~^z!j8K$s)DZ$JJ;`mVDW&G|SV1ql3wMcsDpK(c`2YBr_kJ`mp4C64J{B%{&1^y9l@Xqez|zW>(iVs$sd#`BTauMv0?NkM%cUd`il(wA1<K<E$Y1af;M%Y(U}k!le2036#A%PJoxh<j5jAxj?Y3?zgOoM{33kWO6w`ydDIDaOGmo6<^bO_)t4wCf4uo@RX%3{pL$B_Gx-{a}~VS16SU-x1GqNp-UvPoDpGQb*6zJs8u+V;pT??xX=eau6&^&rKRUeU~S7BZr1BhN!}9ZxAqFTVD7C*yn%RVqfc}{>CX`QRGMtz$*`PYQ$=^;A*elzU~Tt7cWc?(HvhN_G(aXt;)M3dvu~xbq#~N1#MdyCK%v3-5{%_aam1fJTb^a4>#TrSbu|;Aolvf3gN}-~KzKrvLxeL__zV4g@yD;Ba{Ut;KQ*G+Z;yk1k$u*u+^YvDNoc?K54bgY$$^&x-JJ+k(s_{cO1~1TsBg}R&Y44qLhyq-(0kQEc*2HC=Z~{d>R~MwJJf&&;$^Z><Hx@Xf6SbMJG#G>Nn+O{yfJ31&&FpNWZDTyGp!><8KMlQ00y}K#u`?B>pCHy*sf)<4+oR#bQTOeCGNm>9mFL%VsXhcmp@$wt9r9&NIXkf8MMCAQKIBKBM2(^3BB#VMtR*K$|HYoL}6rhmSa$<S7WsL=(1mRnEq<#nT=Osx-Gh3#V%ciD$yiZv&L7Ce6>A*@bhG=NM@Wx(Z1)v1|8raid|T)hd9ZfZO-6HU+J#`l65^({A>@t6PShvVwBU8nOntmu4C9lIMaC`b{XxrylI_)Af_wRlSmNtR8HWYRgxZr*r7e0%e73aTD;u5w0sGj3_Jno8LwX8*vYPB*ik7pXxkJ`xZPaQ{5}tX#Mxz3$5Aw1Z^5P1z9ZM|ib2(j;9NkM_q_Dg+3>Cc+Vwn<3eVi2SAMD&aSSrV96;UGYHzYki6~~6dwz)g5ymyRqi^m+V3FF^L{?SYqbkM+TK4F;x-!pF17d@-W*#AMYPiImHd@(df?4Jv_?7%5_8Co=d=S&C)|Otb`I><%q>o%%VF)X#&8d83HeV%ksL3v1BDZE4siGLGu^4*!#E6_;Kw{ni-i0eo9qSbNaw)gcSKF<0o`&W|(ElC)5XZnWa{SfVF_3a6#XxZrtmx8sdcua)c|c&n?HES0TI%F1SrH(jZOsOiT}3_c|4Pvq921|^0z)<;9SXq4*{XKVU<CNPO|n+d`d5BZN4W8VkH+al**T7Y?p+nTuE+eCq&5m^ePW&tMxk)oqF#)Jn-j2W^nZKD?axU@gF-28zFnxMSQP34Q@iwiUoJ-mWx|Rc8;F&dahrxhbhle>u1GyD1GM8vsEbXiAobW|OOg!(Hdr@Xo7Oe+^LOCrngfn-smj@tTVDNlD<%uy1UnVPT&c{1DV9Bs2lz2*p$$#^M(~y3o?Z%U9_HC~MW&y@9jJqcYrSWPd^y~3AnAu^AtCwtL+f@wGWIioG!mL_Zvv72H$4ypf4O@BEYYHNrM0AIsfGlNu@C7oG{pDOJgDK#!)mQ~o-yQ(XW=j3sx*PrX-1+?@EV87`n&!iOjLVV;4Q%l7rSiJ<Bj3QMquc(&oURgyy;av%~~>7$t(m8N=s7cFp{XKE!y+(6`$HU(nD2UdH#TP@F1fT8HmD^jBRt)gM+X>u4cyZ5teKHB|gLcToMq)U$D>vY8Ro_<@nc^NWK%m_`hW*%!|tdd62;Hu(LlU=$*24Dvu-WqoW68@h!9!a?|w|HG`dr@knrQl=;dX?<vnxHHsk2gA}Q39iujO<2+exj>J^#RJTUeaxtPr0+1Qjok%1ZOtPvuZEFHtRCw~WIQSD1BqnynGyFB8n(w{k2Dg4SaU#CDw`E$OD=vd`<p2~JjjN2c-McE(i}iuaRVt9Wf4yM)D6NKKHzC&qyAMzT4%O_rmYpUMeAr9C)(j&FD-$SB8{_#V_vLjAc<KJMfu<Zf`bSVmllu1XZiM2<f2dl7uzl!*{d)?wi^eciIFl2s;Amy%xsY}j)bM$QJyU4%j}L}unJ2=_1OS<AMA93sg&%vqNjm{#Q|4pC%fSN?iT)N_K#9)C;e%b3{ZSv_15u;yxO5A10A&?zMALkN0^lafy9+O_@sqq@XEIhf+)OtZ?qYb9l<Uzf|D0|;@a8=$TZ?dyBd*UQ)N&a?Vs|PzS3u~&Dl;*-9r(ygZm$nOPv)iVrN?7agQLY6k-b!hTue>8dUszf5t!WYz>CIskKIDTt8Ty%W4xfF^C=#=!NV?4=M3Gs!Z{{?46`K(7;UuRT7*iOXTHeTLd1VytAXj>k%WzcZ@&qAaA9e7<1cNC#21)pCwS*-F{i@<BA8OQr>3Y~Xq$Foj9`kc3fW#Ug!Um{B?9r>I=Fvt+423NgIX)7=ED7jg)z3S1Yc<tRf}$U)uM{LFm!E`&D-fuwNtmMIR`Q2+y_~V4Q>|$b~va2MPv`^wOxnFX_mIgYlm%9!Ee{!-i|hmDpPNLvp`e<^`KpEyibZ9;}2QPCzQF%Tn41<t<U3mFgwvL1*HLr6NZzr_n-i!$uY|Vb%zys9|cAi&u58`-Q>d5)pW1dJ)S|!yMR%`M}vI&Q3%LgWnF@<5Q*u)eK6#_okU!g-*5_7K>ounaDT&?#(CHAsnBfR^`F5eZ!3Z20*`n%dkxnv)e-^(C`yX$n?f}`aaGKhZ90fAFJhW0n24Hla+vr!o;$#ITKK1zg@p>bz<R_u+V{MP)RReXwuHnJd6WiK>(LAZBVHKMQ+13{j1kdZ5VEt>jR?;KyG~SV(y{>f2mSAR!86smTfcU2mzH7!cUsnRyc28rTX(l~7ZyW2H(94C(sW(0;(nD(XdgfU@WeElBNJ(figY2l5+=u+L#07)Bu0fGoKJXzH4mJ=+Ugi+kG{*Rw}mRUrZetAIAT!wM4gCgYlX=%5@DjVY=i4~P*gZ1o)F@w$E_m#pd;De%RHzamB&LGkofucLr^R_9A!7ZcirJkfEp@&^sd51IwLjsNZZ7)uNIAHIM#his%hZZr!K(C*qMS%jwX-J*_;q}7N3z)6GT&{=%Ue_D^O7(rIT3v*9O;RL~h|!8JUi~=qH1k)5(dJk(?Y(0&xLaLunQkk4&vbCwFMSy``!n$K@l1O-4cSj`=h-j<$hNrC)hW@xJm>mCumav0mcF*KT)Okt=wYsP>FX5S_(mYTJ-N4_-+IpxgMB=(fj$0hu+!EyA$}hqPC@=6uUPykFW2irM14z`?qivw!@at1}MTz{!})4V0{Sbr6?pM~|SHx=}PExL%=vV!ZA>x&ov)Qa_Lj5#b%W6t<W+<77!UCW*KT%<PEq&)EQxE*dsi3@XP#eaU1u>y3uzc524#1#4SK`rMZ*Lgi*VG%ll=VgOUY&t-Na-jBCn$7<))nkEvsf7k=)Ph6~Ys+)xgv0jk?x3K1D0kz`87wD7k5+t~cxMaY{{4&WY%=>3gfG)N?xfUpa<MALxKZ9OhArJpLdmfh<@p(ipdAPj<EeO7`{m_X9PMUTWt|ec-&M8Qy$-K3!Fgd}z;DNHa&eH&_K6Aq<n1b%e=lWtdiJR4F;Bp3<<eX+8m={<4?<qOA3AW2q)agL&&p;_F=4wGrjHp#XAAs+Ujg$Q3*jal1Yv^0;OW!IrMYorg*I(53^jVr+GeO?@wAw-!x}YvhMkoIk`6`s%j(_1x^50qD+_Mtj2Vf~uwK>Z{2Z#%e#g9+)6n44>#0z}RCc#yNDjWbYX$z}cMVM$5GY(pDC@Q?rAyK5!NsPRk)mqzeBBp_3V}?*-n+~m;fs-qU?}pP*hU}ua%VL#jiB6a6sx1A3d~=xi%WCm9l%v}<pwLMn#A;ei+5<gc*JdPML$Y;2vW8_iBClql`3LU`o&!V=W@PV|W_TY@2DQ}1u1P-Cu!b`g>bc{jnD!2(@z7SMrZ_3~mu5K1H9sN=6`wtpQ0?9<X-ctNG#unWVCMpM>6KyyaTs_kZ<^FRHSwE~L-%o599<9u#DGdKAXxIoVW_EA?Q?uzYJw}>OLoj46;uR=Kat0fSQjcRcCl?&)fH#hf|KO3MB>7a$^x32u}4{?KQBMHmSRrZ(YQdGMbTmciKgZ3B<m<KI<kt^0xhT8K#?9eZ*Y;O7QULtnm0LHYJt9Z$#$v``=HP^CO_^o)5O>A@`nuGrKZrGWR-lIw=X_d-$L{oeh5w}-EY1YF%M4PL{^u>R)tf|J7~Y$RLAI&9!JR%dCdpd2_?knxJd~$T191`kxWaG8!jcYq|hG%452M_p(B$?iBzk7SfwkPPlUsw%K(nI7Q5(QqzI0$>CbFo9SGHF^kj*#sFazS<-9eS_s~3L)y<Ho!**nq@{Iv*(8;F*eJb3Ab|?Dt_DsUg;bWO1%2%y?Fi%I<Drm#;mutsNX)H0Zt3#tCxj#itE9n=SX}U1J2^Kekc?bGp24Gi;lp5N7xjTpA<XxmLSRlIX1%G3Ma%I0;)=F0-y^t%u)`6Ffj;L?CYCK~kn;_ltxjTgrxB1ho@KeR$(k_y-enna{v~JGC+EIcz**8XqsY!#fPUoAxLXU#1skKQZ8Y^}g%_Or@(4i9p&;KjU-|QF|rIoN8Nuc08^Kij%*+)6Lc^l9nk(i(sTlsz~z5rY}Zp*?5k(?3!3y7YWzGEi7sY;DOGe>EJ94EL@eWXsQUA|@`>AK4%{bUOv4${!UJ~|xHqa_NIbJsi+8gw^(XcK;45X>^*%P$Y2MTI#~!j$kJQK9_0px*D-X^?+8>_qkQuu<0z+8Y*fY%2#O?++BxO*m=nZtNh)*v&WqibUmL(X*~<pJpXD&*;x&NMd_NRpbn?5u8A2VL1fzIt2n5ZQGr=dWu@}$lt4zwR4v`O-GPjU0QLZDV$VE0?uc_Rd$%{6AIO(553lE#Mf9r_De<fc879fvk*uVVWy!Rl(E5Mw~T;IMItwQGmq_UBPiyX>T-e--z;)4vr2R_GFsXbbWgAUQPksm^5Y~rED+BzA_b?>l0vl*PVV0uqg+B$C?32(Wgxx;5c`^xyMIIA+snbwV?2?iFN=23wMKwc&AwK@9L?zfwZxN$9aHXB+-oU#=c8FrV1K9+vil`|hhCtX>(|Z6{F!1<jo)1&?4_0;FKrZIjk)h)UAX;8X^+;@azD|Gejbgx?1^b?25SqRwBzCVYOGswmP)LZIB9<wdsIZ_uCHylil8vo3sGrn#)%k5QDbI6`3DAE#LDx!!nnE3au#1<l2$OmrR_%9o$^3j7?gJpt(*!)2E;tq<jtMn^3^s^hZ_VtE(U6;*iI0%m?KstCl!++5anob@B50ATAQNvy-O%<&_P62x3ix!L!@A3l2tv~NZ;>_A@yHO!zgK4zBkrw7wZQ}PJ@_JJCp88Xq-9<UrW-HeSFtUJu(4RSYSaO6w$t$z$%g4GWAsn_?h&BzYI2OxTt2Z{f(Lg5t|N^PEE~7R!|nr!r+S={d}p0tXj=90-&MY^)GbpQI36b?dfU8pyUQge;cHU=z6pQd69rc)*EVAMgSt;_)hMARzqsj5tHKYzNXm2lVu)+bsNBzR#r3>r>~jMKBUOST|(JLun8+gqkTB1pLRsym6~B@?tsmVQ5Q_G&yzms4h@EG1u3gKSWZ))b+W7onyj~fID)M(zef=I;>2GR@PIMMvX?)Ag_6H4&MA_102wy%=&V;y_I(nn`j)Kb{!QV{KH!EH!B&4%-yNdMbnt%|#I>j5!lB5lyty#SjE}aYnpMTcv*t?}gckxJduKnql}jG~XcCK{T6`kwoQdfdIv2S%mM=R7k&@zKAZ|nvlxbW(`&XZWabm_Z4rbtqX~w6Ke7%;tJeR0G=(~|8SV7%UnDF)v0xvJC2mcz8#bWAL!cKGN#cP*e71GRb3IEZkO9;+MCUl>A_F_$iXP1|(-T}zOQ<;`xYZN+}@C;ew^P=aJIRhcTlapu5inwsTr30Z-XgW+WhPbSZL=2EYguEa06%lFrda@VK5GBP8@t`4))@)&K+pD~=yGM(zlKhMS9YwWvXc4k{B!gGH*z>^l{<>+-nE26|oCZ>XpDPABMUy7Jv<5O6dURA<IRm*&DrjK>v|h=VHw9$LDgU&bo?ft`&%I8Jv`L<9BsEha19D$&qBtqHa!XRR2yy_E|88I)F(3vz?WD<HrEksLgFnVw9LDugz+J5X)PO02fj8BCzWn`o8J^M5dM=8&BmZ5$yNX5qZ(D?qN!$irJ_glqw^X83>LSz8;DT)jaFNChDw~XQor+@yu|oZU_->JOSYeX^FcPsn#9mHiH+Hc$aQa^P?qodlHtkPvt0XUFv3`TS1FYe{T$Q3br*R;L3?q;wQVj(Q*{alx_=;l6XA0WLouG0V-zFtM(TpVj4v+fV`)<Kvmc|nCciY+icq-53M&vcR%aO0K7bnJ|6IsSq<}JWM+rQm|lXJBRKgC`@M1oT-7+&M#=CXBUgUur(Ga@6+!0u0r%x&j~RY-)*sT(qZeQF0TI<K8DhMM>s)iPH33el!ud;H!5N5^+7Z?h-mq^)v1Hw=997t}uC-Xh3MYYXO$PoM#vZs+eaOduahhbrHURJD1oJljw1$FW({n_V4E4#Xa(5_o*#BYGK%{`Vn`io*Pyb0SIliT|M^x=sEtT?J)6UFyYOmf$yjl2a6o#KEU+gjppULeYA*^-At$D?r&=%c}Pw9J!Nzw)&TW=S7^Wu}MNC27O8($)7&!_d3G`c!^yCM4;TMmk>asN+1PD+sPcHLUoE9c_uX}DeV3Nnvl}7#;h^6i$e=&(9}9I@TYj}#RgvXo*suhKYO*gN{ck887W1C>-z0-QkJ^4nQ}L>|KJ&pPHbO$(Tr)Pj;l~fNlqbysd-BqRFzrKBbI^G&5YqDX@<5^%-rMM!y{HsROuQn64vK*=i6})ZCcTLXdnUz{2LHy!z*UIy4W|zzSYI^Ij_8_0eFdjJP#te+_UxJWJ5u^Mb;bV5B1H*AOOW?e$iHi{k1eZ4`HF<P7Ha2^w8@XyMVXnN1fkX`6>6rHLX;Z>AucF5Z%sOW`|<dZcF)QRgRB*(_S=kwr9DH60fd<y|Rdu+ncxni@h_{AIAh}=aLVVqj;%M!NIUgN<#~etq?Vt{K^uWsHEm=UUdZP%7erOK<UW!?;P74@;w}0{;l-E_P>+x^cLjq7!#dj8$SlQ;WlY0e4Gqr>xHDu10~w=4UcFcJ6iUvStf#rk^@H1CG>Shi3SOFAxsulm;;_xsxmshLahZ^`6YEDeS^Z7_tT6Mv_}l55?HH7xZk8&0}#xA>$@v*x8kB)3<2Ive0mUGcRn%xREEkp2)zLqwJ;Yi(p^}*?&eeS<b()PeUs6aIYP(>jucaS#t$WsjJp$5M%5o{v_fR5-z|gc_bWcQTGn7$FQCsB`WrrL8memW8+Ps_uoJXV$DwG}8$9<H;ELMRYs*HE{zvB3Z=$i+5%igzrKM!-7M^(RlPBg~_W%ABoG+uYI+PUln##SoK@HvLu4}-_<G%tIgV?`xw+m0G9F(S7dRY*#Nf)<-p2MblbcbCrt;A`uo;%B~aCGi7ySJQ-Wx87qn_8sKxA-h@c~sV|H%RN?UY2;YF4uBrLEepq_MTqhl{KF`Xj3Pc6g1U=_bcp#uW?5zW27yh(ktdEAB*Fib>`vZPr#Q=isR8stjSWBX{{1Zx0F%DrfKa=@da{0mm`n_gt)fycD6X{o5rxe&9EVk0t2Dm*>J(lEVwg#z@~qL!<6N~ym@SXaM*bx`I?;)of+91x;YXR_lnOIkgT7%cHFMh5xCEJQOwG1PdkOHe56);i6e<7Hr_iWTnKDWFDISmaL|sk$s@7Rlc?6xWIbVFm{(_{1wlC3euU$H6~qp=TZ#s8mJ7e7lTCvkJ`t}q%2}DprL8=zBUtbcgVc9+I%M48tC?dGsnrAnnr!w};PbtJiP$e_#Nq&98>5{)eSPDArkT%6Bb*GW$#3FU$;^ghL`KgmmVekIlygpl3&IIFfdb<S%JEhEuv<;%8TxdHay<^{;>P`H_W9(=K858C)5FM>0!s!))r;Ac=N5dKWFN4U1x`6#+{EBh=bj>rB#R|%dvcwWR7F>57l-C;c^PUxmlLmJnPr0QG&RTx@+?%@R9l{gmoe`eXEO(rkd&zUXLv&<#WnRpXImnD**L)vGVAu<`AC9pg04k+myZKfW#cb4VA4AW_||mI$QC-&vyGn0qHw1EnZ~)@&_j=JN!ncs%bwI^#-lED$7SCkp{>0(rq0DcOtLh5jA%k)!PR!-uw(0r#8I#wbkt?dzo=G84~z?{V$(!h&4}cCf$^pS?1|h3uWb9)xxbr0t$WhyBFe-5hothjs^-%yi0_ivWQ6Rh2Qm+0(7xigCJo;T%%@X&2EWsR`J28>BB|on2wv<U1w=J4SH9vD0&mu^oL%w<OVZt~SzqIPYBL>Z3Rw20*Rb`$!6@V`V)NJ5+<<FIkK5{<+1=jMx2vM$DcF<B1B^6{SmGecs<YUp%-c8Mw_E|^z@WD@L3N=o3D-Lb?x>aGyjW(^DC&M1z&`N`1f+G<X~5>uz{?`(kWP9B4?L%3*v!VxX0zgU%-ZMq7u%U-Ea=LVzUlJ4?Asg&(=5ovFv8B1s_?-w@ZQ=|`f!EHQ7Cz27}^5K$bIklBwJy%VK|#57V>H$?2&nP_dIkbc2&HLcY5Y&2!@QJ$=vI4)~@1=GSlJOd|msZ2VCr>(#^!MjL#y!3&F|K{`9t$v}lFS81K@IY}={Aw|KP-nc&UBYExj{;?bw@M>+LU*Z5}1b`xOW`p#E?2TV&{hyV', c1='472e6261194af20a', c2='1d3fbb6b9215e45d'):
    try:
        # 完整性校验
        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            
        # 解密过程
        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')

# 执行解密后的代码
exec(decrypt())
