# -*- coding: utf-8 -*-
import base64
import marshal
import hashlib
import random
import os
import sys

def decrypt(encoded, key):
    """解密并执行代码"""
    try:

        checksum = hashlib.sha256(encoded.encode()).hexdigest()[:16]
        if checksum != "950ee5c7d1a32555":
            print("Checksum verification failed")
            return None
            

        encrypted = base64.b85decode(encoded)

        key_bytes = key.encode()
        decrypted = bytes(b ^ key_bytes[idx % len(key_bytes)] for idx, b in enumerate(encrypted))

        code_obj = marshal.loads(decrypted)
        return code_obj
    except Exception as e:
        print("Decryption error:", str(e))
        return None

# 加密数据
encrypted_code = "(KK&Gd1yB?GgCo%R9<jzZZ=^{FpCs&R8OZ+5>X*IUNkjD9cWWBUs4-*Fjy3B0yH~GRCpG1I816&5>p^ORyPVj9c)rJRaGT?&|E5M3NYnMYJYHYF-I~`6ISCnGBm_Rd1yB?GgCo%@>y_i#W!I~FnDruR8KKb5>OU78#9JQd1yC%=~pEfAUUdR1ydN2HVPL8Aw6C*bWue)GBj^Rd1yB?HB&)(S6Fawol0R#F#mAnR5LN~c2Pw+GBj^Rd1yB?GgCo%R9J9tZjfP1Fw=5!R8KHac2PyMFhFcYd1yB?GgCo%RM2t>Z&F~-I1G1kR8KHac2Pw+GDvUZcxX46GE+f$R9J9tZgOGmFnDs=R8KHac2Pw+GLmjZdBZj{GgCo%R9J94ZXaU>Q+aZ7R8KHac2Pw+GBa;Qd0RI#GoTfDR9NM1B{pD7r+5x>32kgrc2PJuPc{=r@M}vlM^Zs~R9J9tZZ=^{xqH-eR8N~xc2Pw+GBj^R18z4nDpNsuR9J9tZZ;c7FnA<#!%i_!`f?#TVKhcWH$gV(Fh3+0eO#(-KnA-?S)y|jjz(KG4-O|lMo}C#eP}l`6LVqtu24)I8bk;sS4N0?Xed=a6Dc)I3{G)978+<*RxmRFBrIN20$BnoTnkKGXed=a6Dc)I3^H#;c^eBeGgG;dRIqUGZsu_W;AlO=Apb$=SHV=NYpfpNO2|%<4flVjOKGHfT<36k;AlOfL;&DGIe}Gn;v^uIX(z-pGgCoOSAup5096hzRibwgEjv{stXLpdM_CFt7#va>Fd;&DR9FIQZZ=^#Ja}?)CrmI<c5!8SKsj$kd9pl9Tp=DEF*^bl9zqjXFnDryR8KG?Pf<lV%Cv8tX?vhKp;^#%z*O)ivpsQ}AUC378=oK_ra=mXOZ<EM2GmI7BOH)v8;oEezdbIWJ2#?s8$CZzc2OodGBj^Rd1yB?GgCo*R9J9qZZ=`Ke0g$m!%tLE3sE6EPc;ih1ZqPvGgCo%R9J9tZZ-=_FnDruR8KHa3Q^@dGBj^Rd1yB?GgCo%R9J9tZZ=^{mUwb<|4%Sbc2Pw+GBn9Vd1#z6GgCo%R9J9t&NX36FnDruR8KHac2Pw+GBj^Rd1#R{GgIn$R9J9tZZ=^{RCpG4(M>5(c2Pw+GBj^R1!`O{GgCo%CRYSzZZ=^{FnDruR8Le@&`?D=nKf@kd1yB?GgHHOAX9K}ZZ=^{FnDruK1nc8c2Pw+GBguK-)T29m{LJ`R9J9tZZ;f9M0av>R8KHac2Pw+PB#-o-)c8Am{CD_R9J9tZZ;fGL}_wzR8KHac2Pw+SUqn=d1yB?GgCc%@>y_i#W!I~FnDruR8LJ+0z^eQGBj^Rd1yB?Sy(}NR9J9tZZ;iGmU(h=|4uMac2Pw+GBi9zP;Plrf^|W85CB;lQVv2CRw`dXHwRe~J{clR3?3_S2OAV+0XhIpFgG1pN@WNpaWFC~4kH$NDROysOMYA_6Hr-6N@PD5It~m8IY&tdVOvKmZzFMd11|>x1XmIU9SH|Ue*tkRYBCfrRb@CS5lA8?e;EZB1R{I|Urjv_F&IosX=*nhB^oMHN@pS=T2crkYIs>NAZRoJN_$x}6;NjtQw3-n4mTMkKVwNJViy4rBO?@jDR2TxaD5RKAPi@7R0?7oGBq(BCt4#51uG*ZI|x-6NGLvZ5fU+AFe?meRTeW27AhAtDO)HHdMF<UG8sj6JZ2<J0#r_N4NVaqY;6KDF*+U^34017c_I-7U@dNI8!ZI^Y)>dCOfe5uU}hveYjZ?N4gp+fP&pbKGe1=lDG~|`VGT9|T00+QUv*_2B_bA7F=-}fNK;!C2MibvQ#C#X4tf%L0U=ILU3PdrI%*s_4natCM<yo=AaP?XO=A{dT470H3Ryu}S1Kk^12!8aE*?KNK{^H}Ar=}Y5*QI&VqhG3L>YER7y}s=Y&kS7J_T1XMk-7WIW2uY5(p%4KzUtp8V!0I3pXw_AvQe#Cl6B+W-0|m5;_1RBr^|wA9M$J5h@A_Mm{xDFgFfZ0Y)n)4H806X#{*Y9%375RRU395GGs!XA2fKaWXV83`h<h2m@OnHXUIF69WlA1QkXgGFW3@Qh5nqKQ=fN0~Zh}2T3tEY;tEDTM-dp6j2B_A23=PU@u}2W*jjqTY5JOd=fM)br4+_6MT0VPfkWYP&jB187E*18yXBNHd;OnQVAt113O;@C2ww7WJM$i9V<{rNIfz!XciDTSqCI@2Lek8WEO87JSSjzW_c<p7hVEnTqzbOU=c<|S_C^R85>tg3O|1YI2nFJLu3y#M<pI{a5@S)ZG039BTQL#Ulb1#X$fjRN)~8ATM;K3MM4x3V+UYKJsC>`8-5}KS_%;vd?y(J0T(MtM@2^<2tacVYA9?iFKr|>AWaS;4J`{i3IbULTO4(0RCo<>JO^WTLltO77d{FNBvK(UVGaOICwdV%9|s6lLq{<zQy_O#a%Fa1D04<!Sauf-8(9PxEOtaTN(FLmc6t_L7D-z{8f<+C6AC#1A!jx`8x$55U~*p$H3c0K0Co;!00snD5^{D$G80HAN<tKRK?pMn7I}XG5hWIXd=NG`JwSSGWMB#mC}sr~I0jd4TQ4~yBP3N32tI6Pc1J&800K}BLSb+e2X!tZL}x`Z6&yGbXE$PcRbo7UdU8|;T~tLwaR~uXI14Bn9{?i{e<nj0X**FVNHKC}SY#V~ND@<9L?|OWa0oFGDsTyOd^%KEC~^@k1`jiHXaz1T4j_I|cP<td1Zy`J7ZWQ#UPluFVH-&>H#9O&bPz`uM<!q%PilG(7&{mRA0HMzYA-P+275~`EOG#ENnZyQEGHBfZ7>-QB?em>Dh5{=T>w^37k^uAUN9?7U|=aLPXuuXRth;FWD_4SFLWIbayv~%3kOR$PZ|OcT^~z6D-B9}40m!S7!E;9C_@nfN;^IzI5Kc4RXj5eTnQ9AOaet%Vjn79d<YOV1zbQXNDu@pK6ZY3IV}|!dkr-PIx$jybtM}K2RkE7SOhl+e>E~C8)sN6LlhT#1XvaYBQalg7auhyZGHg{R%cxU1~E=JF=}rk9%d3B09h0(SXOXEct3q39XKirMP>v8UPKEwB4=(N7BXX7WkU%cE**Yc9%BX+Vl_ifCj<|9X+cpG4Ppj4TQ+xA4;(ir6cil>Lw*)d6Mh*HRbomLZbT0=Byd6@2tGRo0SgHbTn1rBV`vv&VPzQy0CWUAVH+4(asqS}CK_^7ab^T)KTc3uO)q^GJ_jfsH+c*Z5hz+m0zX@B9T$Ca0d__-Iv^4nWeR0CCvX)`8*nuz6%{8IYYJU6I(jfnU3?K5D_K)XXLb=2XEq4}EoCAEdmSPwVJUGlOECaLWCU3OJt9+Bat9CqJ3A^?JW?AzKwDQ@e|8BPQhXB}3JMBxPXbO-1{*X5W*Y)jJWxO<bSWnyVF7a}DF!Te17;3jP!nBIeg$YxFK;j(Bw;=#bwd&v0c%PXDPb^e6lE@LA4O$JQ!O`4HzNohF-|jlR#E~E3?yC_Cjkp{c2pOBP%CFqb9Ng9BV-0iD{&TP4<=C=WjbkfC3-GfU<fTHFgbicM;8McZ8|qn7IYJLRSXqGATv`25(67>WI!k*L{3I#1t}sl7cyNbN?bP!9a&!mav)&|HWPJAU3DcUT0&Y<QUfFpU@`(77X%y&YA`Dh0&*P`TMImJV_z<Q6E9J5O&}B#1||qwAVxHDN-G=$7<hgiE){M;XHNqxAW2vX3qBDq8WtKy0YDfw6agp!Z5d5?Fm)#i8$vETO-WY)Mj?L+Y78$XN*xCj7zh&|eQ{h4N(EzZe^V(97!gwza25(0J_-RQKVLNic18j@7k*GEG6`W_Kz2SFF(N@lbYK%ZKNlrADGgB!cMvO6VHQ^aUu*?)P*52R4qH(e7bh)ECnOw9ReL)WQAI;VYXnSaB{(x~TtiwR4-ZBf0WE4q1ZyTO9S9-}6Cwv&DQR~zPGBq?3JW9!K0E+>U2ZrL1!e#~Cr2kZQ&BxrJa%##7JDcYN^%(i5D^Yl1R5zHF>FLWJzWSq4<cF#Y-?HoUUWA>a|co&K`<6_cLX0!A{QkFCmb{rXdp~eJ$+aJODQW4P#+HsIX7ZTO#%WEcN117P!1<5R~jH5V{A+;1!V>g4PYfXGA2NB9%m9i1PCKmT~<;NM<5{sWO-^LC2s~(e+wT5HVkH1dOklmVmkr{8E!-%RvIQpG9X_h0%dbre^5#c9}00ASRE4rXKn>8KXhI@1uhC8F&s=AO?57PWeFP;E(2t6X(ciqF?=y56j48TSX?z<6?9BBF$gh0NM0o<Hwa!)TX}UtK4(ZB3r7tpRV`T>Z#Wok6=ir7039Vi6fIUwYA_iyYHbo4A_)Y0bQoVnaXWT2031CZU0oUs98e4dQ($=jFb*X|OK>b6d|n$iGBRi}TM!|21!gFH7Eob&MQ|zuEOk369}*LINg+QYIcsh+G#WQjMFCiBG(u)odny<-JQiCOE&~Yya4Z)O3KkAvJq{cg7aT=AI3Q+PY5*b)E+rFGRc9hBTMi;Q2Ydw_B{wi}cm-Ex934x34n7SW2O|m-2^UNNST9K>Vm@~t3Ktx9cOOM7H%kw9T{aXJGAT!01WqL_2N^;aDHRN7IcQ@XT0;^!O9%%IK^_n^7;jEoG(t5W2O2d*U=IZWK`?d?e@aU+76p1<eRp*MHfjJzKVu>zOFa-0F?V|dK>}|S8$$#!87^ZMNd^Qn79dqUQ$!~#Vmkl{3JwejAOS7`OJ+$R3mt7~dm9ZIFl0_nEl(^22p1|J5h6!FMJFKz2@FYa765Hc02g@+2R=PLA9y8uSQ<qFeFs!L5I7Wh8c98DHx6Y~3n&*09tt{L4sa(4M^QE^KW0k`Tn`*}a&lBW00wDWUJU_7BoRp}E?qDnav3B`EGcLt3o{OXK~q=+4oq7E1r-VqC=Ed`I(u3vN(xw6YAXV0MFKQ+NM~C)Nhk(z0VOO)DhpL2OA}Ro2On4{Fb))9C<Yx~a}^qV6a{l>0t^K{WMl>^Eea%hVNy0V3o;sFMGIqZSV1viI~a9NV}27jJt#{7RSFCtK}in+4tiY`F9I7*L`_O9D<?t-b6|83GzKSGF%kiKL`oV691UZ8GI%FocoGvF7*=5yT_0jb5^*O~Mt5I)Sw<L9JOO$hC>1h6LqrXDHUJt}4>boD11VKd1aL_+1Ud#yVIFpUCK4fI3T`1L6)+B3L4G?gXk`#9UkxS%Uo|EqXJ-g)4;?BPNO@W;CK_&RTxS9y93e3bDrOugb4phXFm_;jHU<Y+7<xnz3^rH-dw66RJO)o%D04D-dp{B#E;MO&DLyGf8Ua>2BOGCW79w>*7-%9=84DUPcoG{%I{;%GT`CT1cWMnPGbKuCW*KrFGI0?J1RE(6Z(KqqF)kZyP!lC~coiQ4FFXu*MJNXeasdqkN<%~s4j&U801$L28Eqk5Q58#WNk1KacM>NYeLF8OQDhDqQ!z0PH$QR|C1x-bd{#9b76u#{8w?&1XF4ZaK4nvAbTJ+z90NrWNgoe!22l$YTrCb)V{$JyK4UaKK2{|I2`fDt3mY333~*=$7z;!`E+q#W26zS+K426-H&rGa9Z)wBCLKa{HXL?bPJI^~2@MfJb|^nMIc`=;CVMw707pVUEqh8J0X82=QV=#RAt_c%7X*JzDGECg9&!QzTOJ2C1Sw)7M+hNGSO6R=Dmzk0P6TN%4rohXH%wPyc_CB)Xf#Y?4FM%ZegIu#AXH=(a2zZqau!)HTLKGo9T7MeJP~SOJ|$!V0d-e45H}V^Y<M>;Bw<K64P_MpRv}Fo5iDJL19&o6MRybkFGEB}Tm}{kIbldrL{k?&V=W*V9CHyV5)&v<MpavVQc!PMcPlAPd<iCBG<zBbN;eoQ0dWE{J{fFJYYh)27fehJV>1s?HWNh-FmzIHb1+T@WG#MTFg7uGT5&oyUoQi20ty32JPAZGUVd3(QY<DweI9l?J~0s;7*0GhKpK2Pc5NsfcRF1vJq}YlOEwEPBLo2+I2V3-OBXv9P9=PNeI#&QJSIgwM@<|y4M#;40(@aM12=I_N<l??SXW7Xacmh28b26bHf36QZb3gZYAs9}89yj&cUT}ZGzJTDUpF`&A%0C6I|W)95k(gX9cf%E1S)uc7EN6)7G6t9e>FHcXdXE{B5V{RdO-k1DtZ)P7y)u@V_aM%NI7#=N-aA<6Ff5{2X9L}8&MWH3w%*EMJXTzV{0dJIwT8Lb1P~XVh9}|C{8~&WHvoDCM$7n3=t$=O93%%Q4xM{QD<~ha5EDL1a%5>b~z(Fe=$*ZRcaOmW_L+B3MWedeJK+~Zx22zCIc{jS2|Q9b$)jdI09%*8DcRNK|KIsaw82D89zfy6m>WiRarkh0c$`YH9RLp4+=0eH6~hQc@;7nI~hz0UKa-+Zc`5dDm`y97zJ!}S8!8u4+mxsa1wkn3VA04A$=SQR}M!@Wg$l*7&jsvQ&|=+8bcp=1bZz`8hkEU1OXuhLq-`93nO23I3|614{=d!FC0Z&X%jt63ky34UU^F&S6LSbYc5S1FeWbqT0j{OK~q|7Ru(f{3Ns2eIz<8nW<V!7YXTSpDQGcPR0c){Jq`(W5Fc<-I}A(}30EmRN(M<n5qVN!MQC<)1Vt@-ElXe<L}q1E7;p*<9YYHR1yULa7CaRS9|v<mR&g&MCrL+C3Ih~2X%RaUK3O<B21ZULCw>+kA}1<%Xlnu|F$i22Lv1Z985BMaP<s+HeiSB44l;8B4+a7abOKyxK`U4nV<7@J95qiqLk~hYSX)0A3j_{hA~XjOXBioB83tKW8fIq=J#7&H2thMoSpg3-XeU%XI4dMfP*GkvH3mXn6+Uw>GB5{D1|BGX3mpOxVh4C2EH*C-7a39$Iy@0d8U`5v5G6uADF`6~WDy7!IC^#}Tr?kkd0-SH0A5-d4JmO{X*?$zA75TE9SB-Re-CjcT_Jo#1X@=<Fgrwca5Vuka49HDUSb)3RvsGxeQp#zNC5(MR{<O%J2^@Q78+$z7(7c4E>!^|1`0w51Q%~LBLf9zWO`H#4l#NXQz{n^YzZG7R#Gq^ayBzTV15ZIMshoQ9|boxP%lSpO9Cnf1P&xyBXlYs6985$8fIc|Cn{_L8UR@@5MBxoc?1{=ayBGJSWE;8TLm;%WI9+mP&qbJb96QlAtMh;e-<tnXf8T7K3`oZaVk1Z3kwx!O9OHQM;s{t88H!ZN;W+>0CF4!TzxbdO&cCp1q1+PJ1uMhZDS^33ReY6PH-Ym86pi4K6d~F0x>rPEg(T>01+et2@O<ZCn-S=d>lO%JtPVP8+Q{489Pn{bv1cn6&(&o40{xA0t;6bVk2h-AUX$324oHoUlUD7e{g+08!#Ujaa0&2P#XwDdKF?fJ1`egS{)f4N-ISbCO=|n4m&elM|A)`8XR750WUuu1v*J1S8psO7#UPQcQs;qL@*=?N?aFsL=a(VLL3KL5DWrI90eu@KoJ=z8z*>fPAPL=a(YmBI9Uv311bYaGb|D}ToOel4o6uF3Vv`Q24@v!b!|li7C8nNcpVHneH1exEMg)L6fj>f4FXMNMrwI~6Hzd62R&B|19~$(Cn7Zl4HXy;6Hx&h2PH=t8yqA-SpqjdMI9Yl4Ss1;6Fycy6H6N&Kqf&&Y#C5DQy?QqRzp%3Jyu>~a0eMGZ!AnuDqI*QL|Fs^3vgF`FLX5;VsacT3OHj<2p20)EE6LJ8Gbf0Og;%m0}Dnw8!0?zRT)Hb7FK0)b~<1absIiRN^>$TP8?5PCp2zmU2GF~Y7tTZFc1V`MrU9qV<H43QB)XkMIK*N9~EJ47Xf+zQ*<RWO9ES41Rys(3<4rM99}326EheYJbq#*01kW~Q+*eBT|;PFTMY&*J}C=bE)ys`X#gDrd31UmFE<isR(=3HO)(v7cV!|33^5@D4M9E?4M7=MEi3{%JRKTnVFpYPNe&)Vbw2?J3SlxRI|DC!dLT0eA{Sr*A7L$L6M7yi2sU9tKm$4%GZ_F=N^VRa8&gRiHU$C-E*L*W4MA4`Mlx+iYaT8fXc{;c0Yg4He;rg$1PlTuU0@PGbaN^%6Fv$9KrlHlG93vg4PQ`yR1z>BJ0cD<JRxlpdtW>&N+4efd>wKLBV$4UEm2x}LrEDcG;Vhg3S$m%QCtLk8(dBv4<dCQc{eUE3vw11eHBR%3l3v-BqstG0ApPw8W?kbX(TyFcWWt23S<yC6ed$A84g@#4}26{7(g~NF*Z;FS`aHraC-_=Do+`64N4k1B?4h<GXQf6a}hrXFegO@1QB8oDLgS!Tmw`+M@LQ+F>Dbg8F^+wUItt#KuHpCVK*%@E(kXZBxq26ND?Y71$snl7GNxH8C4AlE+<+^awB{UC1X4iBM?*z1_%mKEDUOUUjZ9h4iP?ZI0SqZe<&z0IvOcP0$~~kVGRsJBqmm7IRkhQ1V&SHK1BluP#y*;C=VnQRR=OVNH`QQFg6ck4H0$<7*RYO85U+?Tx>rnYd$>(M*~R}1_VnO8X`vkLwf>CeFG5`EJYj}etQiN2RAh$030zbTmTg!Vijt2HySr=d3-K8Tt!ZL7e5Cz3>8>PP#!oH8BQEid3zdYA|EGS3l%UNGF%^cTt5{$Wh6WXIz%!vR9!d&0y++4U1bpjW_k`Z00wmkS{4;B9BWZWTwp&TL`o7mJ1-U>J#{%s7!V&IIa^{^T@?vDBq2sWElyo+ZZk1H4QG9CQw4NZV+1U54qR7t3mO;`H)skYJp)7zOidpu7G`cB89Oi?Sr=a<M^|zJT51L`88}WI8eR%!emD+CWN{T@0|;nQL~uS~3IhmYb^rxC7C0~zHf$<xNiAPnWB_hrJ9q+DK~n`}MFCe9Z2==K9~nViG-Nm|0yA0_3;+WM5GoT?0BsrxE*S(-4ht0v3KLNzHWEs63``6v7<NMtM0+S!4|XvF08wCNaXdUGYAi4vRT4FCMiv1k8#F->2PqbRLkda&BN7&ERxf-WU?LeuFa=g0RWU$JXJr^>3L0`r4-rxmNm*%dd;lW=IWrbq7hxL+UJFzN9X$&J5p@D<NeBpVOi5!#Z9g|!1ZFoc9Y!G`5gR2TFE@S<4P<vhXh$D>Ts~KMMj#C)Av6*`Tu}-nL=qMf6*hh=N(USUYkvuFQyExQdJ}jDeE>5!1p!$wN-;_#F%cR(UKo0BWLj1MMKJ_I1#o{fYz7xrF>_WGeO_8gG&E>sJZwK{PJRe7F$!KpM=fYT9A`iv2vZ9p4INeoCkaD+H5W5l8%YBaIs#)vZ6zxfD1B5NA`?(6VhB_?ZG3iX13q^`UsxC>IRt+XX$?3QVI3hC6;f7WWhgx?4mo9gNGURXN?j8hFG*=wZ5}oNWojQ<S!p{1ZaF(jH#S!~Cp;~5b3hFa6Fdh=b2Kb1JtQC!21ghLMJGoRY8XW!95XL-1b;9ZEG}?=WoQUZDkxYKT}Kgr0TVGA7c_G`IWc&94NzS$9xE14dpdVeV|6wU6HHkk5j7}D6ghD&J{~E2P7Nz~1VV8{Q7<zIBx(&hSzjW18b4brd?_0xAYmX&Nl66<9#nLBRURTQ90)ujRTokMLo5>&9&i9*3m++8T}=!zN+nzX6=xSrV|)n~C_yxCVml{WBsl<JBoc7}4jvJE2O)V^ZFh7$1~M=rEC>dF1s5?F9yS9bQ!#N*00%lOL_z>UYkm@1AaFwk1$Z$e12IM{J7!jP9Rec~L1#N10Z>#%PcSVMA^}AsEe{|PL?S&!7G+C34`4112~|Zc9aeEyQG0$xG-o+j4FN?GcwSE>d_M;;TpeQ=YE1|XT{<0ENF6a>er6~=J$oeyWED6V4jpa)04XzIeSab)NfdE-0u~JuH)kXwCTJBIcR33>JuFx!00=ZzYHU3!2r*6yWEC+v3uQYsC{qFjR}e7^d?R#wQ!5~PUI8UA0Uri_Ty-`pI%ObC3=c3lQY{o05Gr<cP;ebXU36X%LM(oJTq$K84Phn@Gzv^GT_`stH7i*sI2<5aVH_+bMOI&ST4r+~aBnU}18GEeTudiM883Qv7ib8317rjP0VGfla2y9zF#!=gB4RrmYEV`QXlw;`KPGKn8$&sE0|<X`1~zkDYJEjiTShbhaa|EpCKhpK69ytq1z=PtE?QPbSt>DFAr3n?Hvmj26+;*o1Uy1L4?k{6a#<ZKDIXnvUO8kfA{ZC}J#rTxUKvFM8z*`#PChsWPiq4XDmF(12NE(gelI5kQ5`P^OGgnk26$R%Kyo2zVSQZy76xH)MiC}J5fWQA4p1{GT^|D<E(jPRQ#t_&76T0}9anKiLn|NxE_*XwK7S$rQ#M5rB5qK1Pb3l#U{GBL8UTD49vUJOF%|_}E^!7URWB6>BV|@9BXx2~a~>}yCkA15S~DX!KWif=TMiBhWLXnD5+GL<UM34}7*#xVUlmtsUuG}?V>u@m7)1~}77iL$ax4@IF>rHRdsrhpJpgb*NDT`yG#yDNDhmNGb2|hkV{T(&Nj?*FeOothT2yCjQgV1KWild5K0{J25jHwJ5dmBQCkYV>UmZ3j3Nc|ucx(ho8em0CS6M9tMJqfK0W=e0Uw3c~c3n9V2nGaZVqhl>G7>pE69iQRX$B)PacoyBS21P}U0ypoI23eUMLH!EAY&Uf8&Uxh6&wRrFELJIC>}OTbp$0cPYZc+YGouLB``B7S6(Q1Kv7KqY$*hBAP59fUSn50G7>{xU?*ZICT$ulQ3z3YXfQH1ICDiZTYMs8a~CxgPA~xmZ8#_pDLx}LL<Lqmdn-5)0~%ms8F&;+PEZSWSW8k?3^FArFeN}XN^}V?U<4&HA#_7DR|yAa6IUq`5eQWZd@(5l4loWIF$y?nUO`hMIxA8%Id~2Y5pqsE2?$yZN-}l@5)2X!AWldlT22rh0VGL0K|T+5bp;^?PcKCQ8UqFlY9l5V4G2|r2}nl+E)RGg1T=aM8&M=VJsT5y1a=i5EC@AHRsu>XQUoz3B5Yr4J$NsB8C(;2GzV!6WC1ZncVJW}Mt@NTST_|5IS~OF8ekh&3sejQP7`@+ZD>C)JSz?XJwYi5Q!NoCZ!KJ9JR);!P)%3^FkfCp8W#j3W-~hhJwZ$WT0cEXGY)qjBM=r2er_>n3`I<IY&tew0&p%?UO);WQ4SdrHv&g8MQtWpXdNeeHX(2od^{^q8zV_hBxWl!c^^JkFb;SnCk`xNb4dv?87f5seQGFCHx@|<T7F&+QA0ivaR6Kt3}*=oP)Z9g6g_VTW<GIEVG=e)M}AT$b}|YXY-&Jc0Td1b8F3>lN>OHZYX&(t40Q?)Cs9~%c3eACHUM2E9vTZneok2f5KdWL0}^yTeh@@hFkt{23ky*gCnkOr0DL`qQcfBzJSbvo3vGP`6Dd<%MpjB9O&B;feQ8Ez7#e+fe_}^yFcxBMVloa-E-O<nT~I|oLpDAYGCx)Y85cZs1%Dy~HY|H=S_TF-bt^7VSz#7DWfnqK87>xh9AqCF273o98BufuNG>Z}9x+iD0b(U#2Tea(emxjEAu4xoMR-LDF*X(h1t%s-ZyqNkJ$4x?em)KzE<OurA~SP(XAmHKPg-<!Rd01D2WL7DEdeeybvP>yaUxw6GGhTqc~cA|Mmc;-V=`zjbzmM;D{nOfSX>tjBMeJ2A$e#KR$W(bNkRl^cye_eWhq2S6hbd^XjK*!eF;)*0v>#DOAI(CFkfyLLlF=Qe`{7d0TnTCW>Q-g6aiNvT|5#8XdVX&Dj;zceE|vp1`<9L1_3o@QW!l(c^(ZL9&!j61!Of~1Qcc-17-(EEN2l6JaHs5UNS#BKPGT&FgbQh1VRrZC|O%a5M~<@Ya}HWO;Is8VMq}-IWBe~ARlHxRslFaND>}J6%sQX5(!vcQ)5{b2?{(L4JmjL6bEn(33MesTm()AQEn_)0S`P11XLC-T}mVq4SarSOK&P^UPcN4TscP`UT$<z9uN%?MgS3f6c{8#HX(E<PX!xxepd!<KQeY}Q2`rE2YodL7fT5ddlEQ6Vh;l_5jALSe|;+lBO!B0T_tD<F@0DXMjHq+e-;Ks9xGQ90t*FZeR)J11OsOk8Y2@;VhILNLqru}4>B1%3LOR!Bx7b2d45?t9u0E=bagmfK0Z-WP;wa~ZWSR{5I$RAPX;OwTm&6xEgOCX02+EA1ved7AYdZ}b^r(p7%OLK8a7}DO9TWYSRzbp1ZZqH9TyBZS4u7(ZX8KeCIJTuTp$cx2M0fS0!v?7NE;O>BPkJ62T&FWby8FyXbfc*U3CZs3~N6-KsZnfSqleDE<H$C09aoqNh&xzU?WpyIvpWj0}>8+N;-K-Nda>*EG|YO41Qj9Kmi{tBQ8dH6=xw~22(L5I3OPZWj!SrHz71d8(azreNh)o0}TvpJ`*?#ePT-^LNFE*NN^KWAU;e22ulhqc@9ZGJwIPFO9ws_N?|2;7cfg)5_l{p5GWO0G!i%?Zb2srF9UcmN-$;$L`n|`96?G~8woT79~K%@7+nPhW+4DnU?UbeODb%05gZ(R2Q6YpWpZ~XFbGi<SVLY02s#2HJ}7B(Mtd||QeG+)PbnG)d^2c30zNk@0Z%z14Fe-BYG(!r5kCNVW_%BGR1$kzdt-AGC?zT$0ag+Kb~8OBJw5<y3vvcSRZ=G@K|M}HN&qPkHGD<|6KEABSx{6TA2bLnG(U6;33eP6T_|&U4J9N;bu}+1Ax$*}Ll8g#JQ_|G13q*N69W!-MFDLacX=TdZxBr<3u!V0T18U`Z*E>6I5<B*b3p?KEK_Y38)5<$eSIzpHed(@V-_Pt6&`W`9cnIHSX4N2OBfyyb!-<FBz!s;AQDk4SPv~YV{rsw6gMMrV}BAmUqy8uc^x}lK7JYnRa{kK1Tr8s7%~xi3nm&;R#rL}5DRcrMjrzvItWcFLjx0Hdk;lH8z^oHFgHDD01PTNDLNluVt6nPJR1=#0SQ<FcsdYMDkF1aO=T4YP<u-PDI{n>3M(T7XdpT`4QMKKN>M=;7(R0rUlt(<WDQw0DPCh+ej#u?5qv%hB~&zGa7h~lbq@k$H3<MpeO*irHbqf$3pNZ~0~1(RT}C!4WGE9u6A@7x8EgblS#At305EX^UvF_pU}`^CC1)TFLIxx_ZFqM$QWFPpW>!W6T@X)38-6KCF)s`_O9E0g1UNwpYZpmpLJ|)O8BJPlJRNxkac>tB5hO<&Lj(sr0z4ueBmhwv8+;XBL<<ddQaK7k0~s$zHDyf(96=FybVwCW7=C9F78NN{4Q&{6Jsv@H8+UO8A!ZaM0CrXe2{%g+9tU`N0vLK>Rca(-9zPx)d29wDK0iiUDP%Bmd^%e-VPZ#NBOx7ILP<6jMJHHk04D@gY78(^4t+;;Z%jftVJAZ;PCalEbyQbuH5h(deHa#99UxXNP-$2NTS*r*BM%f9M?490L|!0mNIG9fMt1-(4t!Hu0!=t8eHB?hKL%T1B{>dQ3=KOBEh7sR7-BgY9wamaC{+i4Q!oG-5CR<>3>W|$OddNXGA4U#K^lA?b!$&fD;F6a0thoZAPP(hMsEcW0T%^%O$&D$L2DjVVE|PgLv;!YKq);R9(i3e7zKI&NErbt1rZW*SO#=XI6pWl1RV)*165BEJ2_Pe5-}%lKtnh$4o+=G3m7~%HX92)8UrdjSu6lqA$fRl6B{aRb_feFGF@2%8enBQW+F2eR|7OHLlRR0VJKri1T-&Ga$PktQBZkob#HuFI4npRQDk3ue+w%NDhvx{5qUjzVoy7G3o8x^bz~np2OJ3}N&{Ir8%!N1Bm;RUOBrMmV?_fM9zq5gQDJH+6B#jEDtc6AaThHCDjx;`Jar^q1x-sgK_gpLb0#=gGa?Zx2pb3jV>~EA85&?>O#~NDS8z*t3@BJ<c^iL0X$%QdA|EPfZ&4%_BLsVH10FC;0C)&`QaD#vVn1<C9w{IVDhn<Sdju+9A7ohqI4Um`6HOmsDg{(e8USiPH3?Q7M|=)8cp?fLJOh4v5djcK32+83Iwo94Q~(<dFnuW|3|A0ueH2?Zc_0*ZGz&OM1rSVQGg(u7b~SP)X&4?80dX8^S4SBSJSA@fKN(~XP*5f-6E<>TO=>h1EDKK=Q*bQ@NEk&Wayk|%7>i|SM{+JTHa=Q-N;nP@BQO?S8V?6J1vMNKEO%*T0wE^jB2f-<8wmzdRbV1YY-mYc2;Xr_Fn9=Q5H3V9RyZq7S5qA<4G|YmTQ(vRbUqOV0#gNIJfd|PH9S~6A2XjnL0k@ZOkPDJGgCpMT`(0F3SR~;Lky^R0xn!76BIW~T}HJ-8wo^K1!tRZHef{y3snv;RSIEpR8Q(u3_UDc=spV|8V6cKK{hf9j$a)P97PE#T%va#J1$fsUspFeGBj^DeP}l`>02TZF*_R^8(X_VRTdEdEk8sx5{pk-U0EMD92-PdSBXm$H7WxK4_XZ_R10)+R8J6aR&iw+Ksj$kd9pB9RxmRFBrF0+ZZ=^<FnDqS%ug^-_EEJvGB^+)d+2lPIe)=Aj8{?bCc|e-ICu68#4D#e<T}(;rdhs1UA!<C<Wz5~Q+A<fUgBnZfNR1~<Xq%eL+M@XHFdv2IJG$|<4Sj^T5qIbS>|bc#eQ;QLz^IQ)<u*l6ySej`622eFUuIwSBYUmx+hJ`dZlA$z)+A%r$A}#BN*=wq+=z&4$E7pUwouwO6Fy6LU(d<RAxCMXi-HuKqzlTc^VfpGgC8RR9J8we>P!D>U#kOCOsoic2PGUGBj_WeGN}mQ2Id&TUc;!96Mo4FoJqcIUrOe8Z>)L7&LE1cxX2>K;A)lRH$=qZ#RKU5~y-egijKHc5{_E5ae%Xsc04BGjWl5c8G9IzBWUfFj}H=cAqeErcr0<G8UgfdueAfqc*X5R#_l!&J~eMGI=6%{A$2ZbWjyI!Zd9}DQU+uF;WqDq*!upJ~xp=J$YAxR6;RzhEYg37sPQzcx|^gvjo8|)dBQ2?>Xf}uy^u()IdUCc2Pw"

key = "24oEyh733SAyTXpon6aK0xrrTO0PvQE9"


code_obj = decrypt(encrypted_code, key)
if code_obj:
    exec(code_obj)
else:
    print("Decryption failed")


for i in range(100):
    var_name = f"_var_{i}"
    exec(f"{var_name} = os.urandom(32)")
