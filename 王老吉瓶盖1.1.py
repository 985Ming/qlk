# 大大鸣版 王老吉红包 自动扫码领红包 不知道为啥要手动领取红包
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_wlj  抓取 Authorization值 Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJvN2JfajVEQkItdmtxZzl4eUJsQU9lUndjV1QwIiw... (完整令牌)
# dadaming_wljmz  自行获取 瓶盖码 
#坐标dadaming_zb  维度#经度
# 多账号 使用#   例如：账号1#账号2
#多瓶盖换行即可
#
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='lTIEG5OYtHsmqdsC', magic=9092):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='XtH92CdI}#ZtCq&!&N1?jDawn6ude?K~N>vHTobK@(15OY^P@-f#5u)2@%y0d2AIE?Jk}sDG`wq`h>TP=t<Xo5krraXZ6Rg>{&%OaPkZ(Yxy#7FV8q~w>Qj27Ip?dp1*jdt${$FvZuU+#x^+0M!51!wm);{<g#`$te~8zGbo3Yvjf?nzn|HnU!z2;hA5uY+DGJ$^KtDZ?<~j-%6-cz^T1w^eTQIX?ZjHa#B>VR4}0R|G-0f|A6BZxYIRVu*2+xY;**Swi`2Bpu^d>|=vAFHzi;k!j#S0<n_MQnp}Y0>soxf8%{Q^=h_uXj^QTs=?%xzft)tAdD6P>H$I8NJyF=u(zm`=8$cB*E*G$Z6=;!>w_0Z~UiMAnJmy0FY7?|8r><>H;`f@S7*2rG4^oO;lFSZM(sF={e@58RbY+&`c>zAvsz}~OC@xjX61jn<e&(z7brts1MrAg!AB71hi(bXHky;x6G@1MzdtloZpx?jA8iH$jUJVp<1=gRSrKUTk<DmPSQNi1>~?tj*bJ++{$4*4-$C&GGuo0B*>cve@qM-HrF+#7c8@ymYH;qS(X$*yi(^|GQUwB%{QD%X^;8c5O)?Nc`IxZM`!?^CtllsF#SZ?MjAwB*FLM3&1sun>Y-@5rtYcF)#E=p@7)DvT0Y^7*F#)Vs8rPUm3}nt0+Hh7acgU)Z`<O_t2xKkUmmr@p!Xvuh~7-LGm`x<1Hkpo($iTu1f2zn9FIiMS$M@Dn!eU)bIT=*o!Z%IKWj@`Lu6bl5h=bFZv;id9k2nhTF_=xgBiFLBcdMJj&0%~(e7KW)7>udTa)TJWuyzbEAG*u`!Rw^7LCps|>k_k4lw>Y4M5>(~8|mNyaBC#v*Ux!2~SUy)Df5SY&Dhr-}cWZ^bO3)QUz^Z3qOORT=^-7nS{-*3CdlmuN|={G<Rlq@#IJ`;?$ytkaZV6)2EY^Lg^pVNy-#kd1z$K;&+vtde*CeU#W#H@pD#DG1*KVCnyS`73OD8jBcI{PMpk2xMn4ZNBH4r{pbYMb0R90Yc|yU417Oh@Oq;q6J!pItXBmeZf33HFxeYTRj*k65h2g*6Fu_XD#RqUJk8_q0kMT(5iDd#$?vBY_s*YPLXrcIofRL-t=~?1WU<%c~oPc-1lPmlN8T)ua86ty~3%Yzdt55oT-3;UW6C)`QIIt8NH{)DndFK}IMpM%c|I#b`cQqKbfTHZ4@e^_=5422w3SCO;heRbanu0B$P9nf#c3ts+R84Wegz%UGP|i_-~TsB_S>J{4|XM(dHjJWX2PE+ZxN9gIz0*#e6PAFpUI)%@e#_<`V)$z=VNXl!3mr=5Xesf)qnOGqkia}B<G0C+I<ol_y^wG+TgGX|Wa({m_w!41g?`M}oIE%<$J<S8w<O|t8!At3t6E!xF)-_tz(;F;rPWX9-I*6~Lb1v5;j6eG&GugO25@cJkQVJ7KN#oDpR<ObIx0t)*UnEI`!;ys)iy^T~h4y*GJlMF3j!Im*j$a(opMQ@pLmT^n2#Ch0V%%U&P&pF%X5A(#+JNm<n{F#&h)-uY3qGYAjrMq};MZiqu=PnfKp`Mlr<9dQ+mY~2a0*^J^(P_RZ=hsF4!f3SI@VDC#F!vpLM?&)PWlkpi^;N`QLAADXf&a?NU7jkvW9Af(g12N{;z_j3Z&ne#DWtNqNN-|R2PGb-r(>7BIdXyN%ZT7~0d8dL$kxF$+Dm27;w-WT3TNwElt|&Z5#O#yc*d4_h}N-31@n(L;98)|aRaXEQY-6qqh~CcBu)-LmYU_F9hwy}w-Om$lBjk&Gc3L|AHRZV&LGmDF%+qvGytzde6czz0$%eZG)t~q3(i25sRjED2!3t72C}%cS9W${=68)Gkt4n}sUWW1Jz8?0iV)}2BOe>mM%4YFBCv!-onG(Penw?dJ5zl!A)uW}@~EmcMkQ9cwM%-8UV(kroCycGvHG(uK@F6sOqz|E>)+C@r2_)&F*%RDA03ig<}>U#jFwq+UPMg{?EZ4rkKG1|HW@<^R5V?HBk-tB#x+yRy6Gt#NlrF>QF7hKNq64c22~F{*6mj=K!&7ek6#=^A6e%sC`#?1rTwn!CZ}9fu{fo#Vj=Hj$K4Mffz_AV`}`$-q5qKpNeL;@G$qmpJcFJSYRqx(wGae5EFZ6R@bCBs%w~Eu#T;QqCi-q;h#Cftw#NTw4jGI4$iP%@P07udLpnq!W<}ab_ioa$b+AZ1vs3-Ur1P3AUmY`oFfv%IU0W4x)^sn5%Ze_!Op17g##nXnx0M)ql40LNq3Sc}akkH*69R^^q^vg|uYPp5M5aIKUXiRYqPYMEP-Q@1$*iQ15dNMoud0`TCb`H`MaTv9`MPGfM8Aw`k$$dvHPfZ$a;VFG=zJ(G!H40$%Jz%Ng)*Gu!$#6#|Fu1hl7aqJCv%T4;F<*QCa)l<`Dkkd8!Cwb>k#&_itr(^kB1=JWK(=evJI2$pM>fI*hW~ePM4@Z8v{{WZ}G`u&V@vz>1){V;NZI*Nv043x+6M_clP5$UjyArm!A_IJsM`KqKorz<&vrjON_+NyP*OE1Sn{-VE4*C3m2uK^YGo!qTRr`=!jOAc-t)siEl$KnwiYb_OwFcF)TqWA3Vl01kKq1xGIYmHWxGemP2%PF|j$sjtS-6hrezW4J!xGUZ0i0jZBsmZI{2i`<(z0|5sw)&Et%7ZB-x(n576q@Z9AX5!0Qn&fH}?;k6p*Z#}+XCBlW&$BW<_!SSP~xS|?C*PyYmz74ubOO<BFP${6ck!8k|kHwR$pXexvB4owhOV@;M8&wlS8$-t*32Y6qu_2`e<I5USH*ui#2%RU*Ar0?pm3-~`8p*8-{dZ^Mt!Ev{2zyeGieIaXot~LgqM?#&VKT}uA@Q8>J2^D1>A-Uh8{}E=1r!E&L-snK*V&%I`k7UHM^jC6h-NxW!}Y{@fXQ%UC$I3eQ)93qBZq}c81`JWLirY~vDpd926`3!DJyKl+oM6vU_03>CLeFbidDfS@W?4sCQ3Nz-42hNJg<sr`Q!3*18%LriT#$xHtK{S#3r(mA&&j?UrH9RD?J{b3Wrr=?sj>l)kwSd1Xxz|hqR7WitXc&+=lSZ*@iWH=hb!4GvL~d!kqanS=r0GfDu)c^{X#bRjFKNDFvpeP?Ba?9xq)$PP1sn>>y<?=Kq<M4xl4Suh?gDXpDubDcbV7Jumk#MF=>2j^uC4h0_!W=*zgFH1#*K%15C>N`ynuEDVyf9iDro5Q1WUxG^?-V=Z5(8{D0gPZuS$4kK%w6>s~xd%cYeOE+{Z)mf6tVSc33UX>K7&Y(~sMOEvwYX#;g&oZ9nZdpjw%eT{xmaAobx{h`MhP<d<_ntTAnyefiJ)Pq}%=1cW-<_J0^v*K9MU;``xO`EzW`hT2wN0S|1i%O%JbW?KqU6}QtG}1zu|-W-%-dJ~2EeI%XjlTFL<wJ_L<v#|Q3qi47P<R>*~|oP1x&e8m~)XiPx8IC7ySK5&~t4ivs+YR0a+YD%qA@6R-38}pn<9Gc))a0CFgM%#JXLlmPz(ukOynC9DvD;=OGV5X*qHR)Kun@LLuI#WUW}?tUH)Xe<m>KDlm!8pE>%rv`Y{`CfbMXmDMRPAlMrpALw<PYAj$nM{C$P_at1-fJ~MDeN=4?*8IXmmb(xeVDrCxj(b6sSEJ1DqWNE~ByfFjr1c7PN2eXyD-XwD2@O+I`A|lYM(B)_zE0}g>Zse{BG<3QQqOCLjKkO5i@jv)VfLQ%D?}|E37F4wp#PtegOEOwpG>eBU_PSo8FBkU58|3H?V?PcI9tVLa8zizc5r@8`)FEC8{d%5Jhdp*)$(rNQ~G6GV&}m4hr=B)x(k&*bFQ3qy#L;d+IDW?=dX3{OD|}HLp@WEOob%?K@`(R<I`^>UMs4OEVhFo7fbSVyqMk0n(JKuzTJrRQXO)I(QLye{efdX0ccia3~rlbVv{gqX7y^`%}{D#_{UbtF@$t;H$D#m<E5~!3jvIQg9D$sps0(1)PtQOwU84q5@WwoB8{!JZn-_4gc7}xgwWpd5!9+LB_ia-G>5N~kl%~0=7L~s1Z5lS{n&W+p50@_=uD0FKc1c{Y-`n!5OPB(;7w{2klRChEtvBJNoQth9ZJ(kh;=Kww35ByiO1f7p}FM!P2swgjATDw!DJ<Uyx%xAvMA)qV`9D)m3NL)bFO&8NyVixT?~R32A<Me+^H*sFim>#ejzztJ4WTg+;*&(q4MWm6|R3TGosFhUs{FwAT8QYbmUO~3TPb5r6cIqRLg<e@gbGon6Uvh?!pGpgayX|gvzKV_U2{tuE9BhmmL_TP)Hbb5tzem)Q-omoE2yHe*pl#G9<Llpe%CZW<sSZqpq#e(#3b2Mh;fU%;8QZ^)s68qM=L_w9pNZO2!XOs8_uoqB$1q;A=EuOgHYuziYiV9dW82S2hlP>$9VoH+pP~(JhC9ml)_-I4_v~wd;9jb+R>?s-le8JMVy`B_oYB3;~2_icehN@*h5_S`)gt+$45a*@VZadELwjbpsGrh;y48+&6D_hgo5(_;W||O(tcY=wko5_!0W40hU81OFC}iyzw&Q7lj3!XpLCzz9)*EOk?m#piK=~Avqo!JPy3Yr8>8xMovJVOh!>dZ-;<C{e7{rkV8UT@#w>0{rq@sneV~DybfZTX+Hdg*uU{%N`U$uBirE=31=c{1}MzPy8Mi$3_2lrE1-6~SonCJ@RfSvp#T!$R)x<cgO^$u(zkf-0Unl<`zDbOyED;p(lv0MDtA?SS@IcHNM)RTY9F#Q|NPj2n|zuhW5S%BN~d1z?A)i$<$R*Z_L+Zlf5rhpH%0}2CHimtB07zvAh~m92UEy#DJ43^>Ja?vibH{iAV{)f!DH%a{<eXk>qB=H&<Xw>eE;P@GtE2gi6<nRVgc@lcNE(N3H;MeVh22Qz`1koXINE8Whqk8p4Auy8KpH+pu|>2)m+JHczIkXH?N2jKq<qj%={<ubfP{Dmb+JxJ(*39SBroaK2p%24%CTQk0+j~4B3Tw=j(g)T$NZsAK$g@OT8DOAFhPDA8!e*X_O2@yaSs>wb4iHr}T~z!X-f01%u+XVb+WNv{WC5H46v_tN-fTw!R9YGC+?gyq9y~t+JgcWmcsYWvRW2++t@k5cVvVjFMxbsnx~FDyyDwc1}D1&zesKYje7yG~!fei=AtZ<9y?39Be94yLv{LtcwLKtb<R8mX$t({EbM7f}>yAV`5D2d6^EeurIEE-@3}=C%9j0S)kT0xUmg_jZc<})19cJb?5lg>27%;0jV>`JdAGukU+G$*F&uFG}{&-z`f4B>QH7Jt`n_yV0_GvSfOA_&J9@bSy%8K@C8<UXr09XX*?@TkYWX&m&vPSY>Rsqv<{?j=1-Du9F&zNp!vNul)6C;Ukt!orXzXbrWyhWF?6JuMob+%U^giD@%!JtpU{SWbfWaVSCfFR5H~M%**sn2`UXC4vY4R$pJF5n&WMzxLxL-FM~?u~V-YBf$HMn>@>?{GCugw7@rxgPelbPPh`YN(v`j&MLl03%jY3r@C~0uiJ%ArHJ{JDSv{Jgcg2(LfXE^32YNrz<QCB+z-fXK?=wU?m5`m{abAnnD-E<8LFMl0_z&e_Yc(z$_Yk{Jolb_TFe=txV@h!uBO7n_F8@letI+32dXGVvbXH28QmS4@t5x(GfG6@F`$Ae|#Z<u2`&|``W<8eh(4SU7)FJb95z_hc~7)WSoo|$03Vd&eZtK-9Ns10o`Hp{1c^O)CH8#H|z_8`^#z5&FvEEHUUFQwbv&A_s=nKJRB3DKQ*z)w4xx^~#z()54vX3hM=t(gn{sSK6c%}U;NTee_$uR`WDz~3heVdonENaAHKX+bNPQT8YdO_;k<zVa_U5>K4!&OjSy_!R!+&~eB5d#$u{=o9>GeT{e8l=%^^A4ezA!@*`2fUDmXpj+*NS+cxb_qTPIE}zt9xYy1rf3yyi!#!FZbxBJThC#VR*{@l5w5qhM$fs#EMM=3x$U2{Au{gh(M6^q%2%%0%;Wp<p`M_4NSa*~us{eJPsj1el0-Fv%!W-e=T304Ik~<<}Up1v8aAYn?KOYh1rFB8k#*i36d+-@8Rng|I-biWk$7xruf>MECZPMdpolO9Smb19}9Orr{O!{RC-Z6rjbxbJb0uWd3$1U514n)`)*}-@H%$<YX)AQ_YZ!ouz-gdX0i$~S1iz<z8(U7RTdQylIL4_dCj>j9HR#N;0_hA5bm)jf(7ds0}c|;JL<AL9Ol3xe|)$`F91d%&ja0RC+0Q4p+^f5GEl5RzbW*)ZrzEj<=V(rdB=$1}48KgUB=3027n`z8=mIAwAh3UcT5B^$Y3$|i7>xkFtpxqMBN%Nw|b3ordkAwz3p1reo&+7*TgMsNSZ@$8M^H!N?#B(W#*Q3r#-iFncC&G%Q3bL)a+n)kyqu}s0-!4{rJXk`KBg4bIsk0@L)3|+Y3+%C9(-()G30v@I#H9mQBMkovOB?wqkY(ZDR==>UaB^0tV{c3t$lH1dmV-ay*rAXIH1c&>$v?>QegOj%REs{*_>W9&uvSEZo8_^3eT#lhejJ;6w{jAtL^w)4ORvon63=TS?0ROybp32c7=u0HXWLz|XA50>6?1l)6T%P1i*8Y=o^`MMII7uwnXO$zjeA{G6un*YOtg@-Rq{-$;+i^sK%U|m&NP6SUhMaz;}O^807`utc($F<YEZd?=9(yG&QJ{I)uGN|=#d1RobfGJM9YbzxsjyoOwfj@bt{-x>jJN|e}q1D^OAv15S@wZXI&D%R@!uLe1+<S>4eNsPAcqi^pA=UVi5tfSyFo|iaT5JL7?U%k>QIoRR+{u=()F#2$2VJWV<DJq6S`#=8264XC#%Dp=sRAAjB;6qLo=6FPc!jZ-9cAj*(<T_Qo(wRmuCoZ$t3VWb@2>6ANTu5HY@Awu<R5cYHT&B_W=1X+^n+UA*Cpp4|*zP5~adF!~bqj21?2g?D&y_TJUukkb}2t#);SzHHb}Vqk1eYsOJBqU>-;-WCMxqMMN$5{ribdKree9;o9E0^B4rOv4duVMhfXc4?r6;@t~2sk8J;u#>+*5{<Am*Um}{rAqo$=qMrD)AY5-aLgJ!DK}-zsP#J1Tfv{A3pj=)F+L0vL^O#SWTs_c;7Je<x@$(0x%X{KHY+NgSPjxI79_43oDmoG&Tar&w)0<!daSXbt{<_^66IS%0U~c_j0W1TNp54vOkcoMT-p)+H!$Tni0>j&e6p;d<GK@6;%CEak*DoYWu+7u4&Wg6J}L$kR-AKssM)j7d!WUGwF66GL?ea{y|Iq!svSldNYz`mV3MBpNO`zk+kt8J{UaJvwZ~a&jfSQ_0o^CjR3lqDS08SMT6L-&W0;J5UoUe{qzd2ZWFY;29f8zLjaK`R98Nm#VhtVJmapzsHb!obevT`e*}mN0^@C5a40_iOZO}RzdP2|@IEL&L-+F9ooJy1??I2R}yuphn8qY@nhk?;mY>iW(j5cnl%+Q5Jso>Ca%rtupL$GF(&6$Ru!AaK*HE>tySL1si+5@;;1nnCv1aXRzuf~{#FNA2sKAB5`X+be8ho3o~k={2{nOLZ+q&=kvj}!IC<^%oKGE(oe(t;A2Nv>N=!IT~_Ws;|-Q_+*Euh+2hUw8Me?zlG>RcwWirdv|zAm4jdr;CeOuvlkp&|}?{T$O(>{w?8?Agd<CKpTsiG}1SBuP&~95Ldi3qHgp*u_S^)lW<wBfEj=U`2Ukd<nk)9aF4vMWhM%#+cl|q<mOyEW}$>};NLHt<{rr78k1-RIk{L4+*nlCW1aWK`K+}bG7)Q6*l7XZP`aM7Sk<k%q6I2w|3voJ--+0pk}?)OY|<=U9X$<^i}9eaJSV$*8EFBLWR4u4pGzhvJNgGKm*kbthCPuFwed@x5VMN+@N9##m0N!fr7gXfCS5boBUF+<<DQBzF?1M(4VnTe{*xdieo<xm^`aAwK!GU-?H8a}Veq{9$fg}t3bb=~yA9iOkoQX&><V1~xSbDx7LDWDNuQ3&LH>d7Ad9yBxwZ*gcp-vY!Q5=l<~4_kC*e+Q(@%F{5NxJ%)%tSD(4%e^BcY|+JXf(HcsoHFJIF6*c$z>Lb>d|OyXV3)S%UjzlW;*yx|G&q`buQ$b_#B~qOQeL?BiYHHZQ8-%fK4i;?cy8ImRu&1>|Y*(&ggn_$i}ozU>P&o#u5rHT&$Nc84|NSO+w&^~sgk%Q&$_BG@rXPwm>BOFfra;)1JjaGdlJUEh;no<fwriIouD-55<rQ|VR_lF<&!0pg4iFU5qUjucxLva14}U%D|F8J$;`J?U|;o?Lp&n!gp&0fIqzLf<`t4cIQ8Kx5t4(C!UBqCzm<TMhe1u!-6QEg`M=tQQLrI{^HYKt+Yv+yzcBO6#x@a$T|&q|Qd5;#^G-Mh&i~6uHT1bOd>g6yw=Lv$O<O=`CP2F9vvr7p!swv``ZGYhGY$9dxG7Tk-~U*^FM29c;4?(D3dEeV${rfGb$tfmqY---_tUb9kkTznd)9k57ZGZR>=-$a>LADR~8288T!-8i=qHPfQgL<{S}O{8EB4pBCWy;YC~kUS2BTAm4i3Ql&ZimKK>iBI-ukq9;yqz<C{Pa(FU7x`$0|D1ZwX>pF}i_PWi(tVSa1yTO0X{AK`p*2j`1g}=AG>QMUlf9?tXMpAG)F7Zt;JqV`e86A<D(G|3gOUt5Nc06BF`<^+%IVlO`!v2UhD509LPs0fiOQ9!-yhEUxCf;{%3`^C39sOAS0J7?E5~4mlW%7W&JGoJ_b@n^}d|)9%25Fu2tcqx~n}%_@wELQ`i{*dk?kMFhOJ0zpd>jNG3bRb*;U$mN>v78iOM}{*<eA-kd!ft~_y6irn6-QolESzOwWf2;Z_&j7iy`6wSR{<yp+dsh-Ii~>l=|NaW(Hu!2U4y#;6TrZ*Um$YD2vOm7+{n73w<g=;-bbBdkOsFVNSc}(Px~4<}MzvJ`FW%#4e@Rn#oo0pz*C+`L2LHwN>v_B=o^SR~>;d+W-p0MNB)^T}VgF_pu-!RJj*LQ+pr)D(&!Ec|Qt+TZLKxLm7N#SRy%cP0sbHO-`-!epL@hFUs)0AVfMzsSHblin7b<m^W1&Os>Ozu_qZ%0xN(F(&SrsT_5$HY3$aAQ$)lSTQjZ_V|hfgz+?`SPCsU2Kd72HUna8gI`*g3Zf!o`uhC6I+z_$><(gpL&UsO_ANelSCgH!8UfhBox9?|pj%uem8E6E=uCn8U=*NHEVx-EDe4XZ3L{=n}Jo+mANd>giUK*%a#9lfbTL+~3rTIUK8+PMN;fGXeJ!XH&4$J{sltm-`|8O;-DS-u~Fc<tmGA*?8o&fYYNi3qs=FI4A+e&;T+b8c>4?3+M!l1b^Aa>l;W)%WDIe|fLEYL@Sn;$z;+rpzWegsBpEo8sekqs7+Ka7z^ymcVJSS__R$K&}mK~Ye)iH?wcD|S=FJSQc`7s#9fu&mLv5_qJnP*Fl)etX=g2oC*9V{*d*g}Zbsp&xSz{#jN+1SUU(08poHNnGQD)8rCln)&&Xl1}l)eZCgr6#nflRzs{HgnPVdELJy+l9qim_dKq$0c-6+wG(PL4~xin$d5{sjezSzl@@L-Sw3vo!b}0CAWt{e1s$mOTc2rEDmRqqf01Dr{Qbf{e(I&(TEJCs5$~(<O@^o>UP{=^%u74Gq{)FLC)RH{Y57LHDbLP&>BX)Ca*z00(%ec48JjO_pev<7T0TYt<Qt1`QD+?AppB%VHeV2TDf&`j4=pzJzrMo1E*=?Y1pZ66oijUp9^~P*8`4d}(R#deMOj*!<vew5xCYzigTXWj;8m{_=5we8J`+fY!z^<A3!roI;i(}_Q5s#FhM$Tb)l=aum;@A-x%!s;!&h)65FWI)C(mR8C!mF@X5Zsx2Aj%*aJr=-YJ<1#n4`OYU;eV=KXX-^ZG#i(oVhs45`%oI(Kza27<`QBWY+?kmAqkMgAxUMW@MD1wRpU#4{bA`gGPcHjx)Dtk+~0|Y2M&G>~0n>w5p|T8~v_-RM{Gcwq0|_WA-D3L>ae%-R-(O4=EXoRXOx`;`$AUH>9pDE#-Xp#UGs_>(XvHmfDqk1~pq+X?_n4GS}D@pBK{ENjF(EAQ_~B9=;ba_k<GT<)VRog_bIFa18;Rs`6XeaEBtftwSTatA2|oAO~t>v#kfyO9DX#lZau%mU$APib!y4iOW_boaHSysZJWXJS!lVIWc4mw3T?sk#+?p*#v~;w==$kJo2Cdr7S+7AR1S`EDM|R5RxMVsI+i5n+itVX*2eK#49ZxPnc~|bm!6ePZK^N#ui#>^)@WdbnfHNU3<u<tQR1w;*P-el|G&e<_$sTBD&v$0_}>LVMi@~_1_rmS9eb*X2!%5t#NLtVyxp5r>7<?a$&0)OI`#7#kTt=zBSm3Q;$3%=4+5%fAo4o@t}_)LIDY2-0tNyX{U9xpfa-U^US0^gR<kOd26|1;d&)CCJhLGsI}Y>&SvCRZ35K2gXu6>L%}DBs)N}g*JgpQjz)h2fuxmQhX3IzaBT$&R>$N=iSXxN`g@*USkR9`FrJ89s<C_9tVpe!qj0SUCTNOiYr`zSZQOsS%H$@<f9w7*_e6|ZWLR=!_EZzP^`3I|DTP-7x3(E3UD`^m?g*aMN)?qaJW|7EKYDJzc%a$t9S2ev8U!@&jFP#haoB3>N$=%51G&mmK9e9RXz|&ssB!DqGdnwm`P?3qV4ly3&Hs6>#amaye}&!qW4^2b5x5`6k*PR<mARmZ>zJD6I-71SXYaUT&6F#PifV78uL_o1mWK+2%8cFH#E2^_mjO@!%q%0irtru{Nq^*Hhg}+S%icuwTtjr<CcTuvxQ7BtM5FvT!#5_%>)_If7%Qsf{{}RWs-&9ZsOj1Rz=GZ0;x353zIkn!8d&awO9s%Q?r@6Cpd?o*fCW<WB*&B(^HTq%B}Kucfs~ZVwvHZtuPJN=bL;(;Q0)hb)PmbU{Z!T=;NrWwq7cqsL^~s9-sXusk!{g#W)((W(=k7w{))eKm->Os%ZZYk22+DfZ#2xSL}9)>RbEfyO@MUc#-XJ41~<Rq3gl+OGoaRNiHZkDV12TRNVPfg+iICKb9Ir*00^{pU}J1-rXuMEdr8=KcBStT8H{c0o}DG$pQI&_L=EhE6BMmeNdy5#ClJH$IGWJ!ei49rT0LKv5wp27GjXYHJFU(7;4GtVEt>z5p7MSWyQl*;5d!b8yW*G{Bak?5j^+&!J$RmbrExMu_?j?V|JAFNqruHguj-SN>OTfc+WpBk#0tYdCcLwco7hKhDyEQxnDFio!(~Vicu^+nqoNAVS--0!(y>h!Nj)7)*}`%BD($BXTynS<YXCggCh9283sOUUn6jv~z7*sqg3QD5)4pkmQ&Z#Xyu`6=c6Gn9hQngk5vPXTm*tf!`hhazVy_fE2_%_Afv%d;!n(YWIKbSqna_k>tK-dJn5{8ag=w-U+E=Nt&t0>8BPe0%H4A|~l1#fo;fB~C#L7FM6o<w*1Z^Y2Dk6`|v*<(c>GX2X*jr0+!dH_a;r;8XL5WRbdfir&0MY!TlE06e`mjYN?jgWT4GZS|HIjLAS;*@em@lff3;C!~0WdK6%8kbKb*K<H>{8r_(P8<#_v3%yCjhjI<zkL*$)#H>*Tj1il!t}q6!IV3I!oH)w7uo{#I^pV7oKIORC$^m(oY!-G<f+I|L7(EX<~^LnVhqGW5TXcjrRl|SVNzpyZScjxSY8!SYx?UPSK-N(nLV%P~+N;l`XHmig=z#IAfUyi9Rp8aX3-8AD;ziJ$p%AJjCleOVpgOry#<UnQO^$(NE$%6#{}-^lB2YrQB_1{&iUZw#b*KT#+pV9;dfG?cGLF#j+&Jjt#r;-Y3Hz@ewBd;rr!numMbjRE+y4zsh*8PkN&DT!B+4cq|z>f&a9wS%4fX`ChndZz`}dX&9<8F&tr@txh?@Ywhm17J5dvR$3-!D_?R)MaU^1Y*ZGh*tcwyh(gKq%JmteKtG2#I<VgqYnf!&zzqC2c1YVza%{nz>>xf6O;M~Sc6@UvruqiGWS_%WH&0|G+k(Mzrc~>vPc}=l(6|?}8|^)=VrImZR_O%xr!-)?v-H9Ix_F$SLzk;v@jj%2R;=-~ly1dckb&89J|2ypO_KNTY6uV!QC*g{L^B<3JeLG{3b@ik^y#7vI9TrGDTv@q4s}@-w!7hUt#(%j`Du{C_Ixiytd_6>lxe0dN0e$9E2awkQH-{`z3UW~62Uwx5m#eqQ1d+W0j|ogxO&5(ZKf2a!Yy<IL@h$54<!sE1L*hRM<sw+L5>@uH(S^+wr?oT1{sx7nc`u<zgF3;I!DolC*`CQ{f5eUlESvO2|^V$?1_W2+-gt2;&kYM4G$sEQ(>Lh=bZK|=v#3SHkDD^&z-GSJ;DK;ZG>Qig;{1**BN%x^qCgk$Ae7k<xWzg2`)}KXn=0>i<UA=-R$_rOfFg{lbgzC8A$xZN;HP+AaXi&*&B941xa9})Oes1$op~e!MFzyeVfaNXW1lcrbf<3moLO?BJDWC*xV(0yt<<`U8luGf{UDb)ruSHYIz=4WqWBE$OT@xJk|(4$Rz@R6CC-eN32w)y~<q+@MThUu@&Dd@bjN}kHqk&{jU^lj=`~k1QaajOWRWjSs533ULR>2M-=u8i4WvjVJG{4HMN#d25=IaKrkgZ>KaT$ul{nD0U3&-yEP$32Dd;ya5dte!q6xAf^&l{pfm!kJ%o=c5Uc3$VR_;t=^A27x9Xy`fg`Tu;j=PoC%fkKk98Br0iuDqE??03S&O)z!L<GLKL=NyU6YH%Te3!X=^oDcHx{CYzxr?!emIR-Dc9M*eA1$h&f*%A^E-3hF;xi~7C^gui`qFtmfD6Zd{CeTgc$A?VuP>Q`lUz|9rauwJWsS&B+!;83q*(I2FKxiSRsS57+Iu`D9c`7`l&ZLW}Z4ZtIC@iXiIxTP||8d_VyG#9giNs{x6I~)e^)+#5-!pFJ#)W9Cpmp!Lejw^ZZSRs0C!?43rG&Zbx<Zt=5lNRC~c<W|l7Qsr#r<ZU1jPs%(e9?k%ij*sX^aP0d*5%g26@5z0+jFnYN51>_Q$OnPI%&(iI=+AoJAM(WJXoo!(mNh!x+rd@c0Y`1O<H@Xt(L?S_J?3}~vsKvhp@l|2kpW_M&p-+cj%9>iNCGo3g>)yI9k$oX^6RBjzyTc<c%T!9%ljp3kV3r)r{!JEb?Np*mD%woJsc$K=>|0{%v_*}^(QCMn;dj!`&dLYbR^ZsWt?G&6r#8z`-}h08^wciW?H5V9_&vjs_k;@3(5>`==DEm7kh8?xw=Z=P0VndD9$uuncJ|bK_n~$1)jjg5(^gFgNlJpd^pUbCG(?l7ZLP+9y10}y<qPsc-;?#m>9J_|Nv(#&7dAF%^nvmg=U0Kq#jKwcmoxRK#Aoq#F4wl8YEY5Zw7{OQ@{hL0mzT<xvW`;Lv&-RR-+z`GZ`LS?#)Oh!bjecLET??M;^V=dk4VzMXNvQ>B<Ag&Pui?S)HMjz>+ANeG)DHi=Qqs3+IP&(7f3Aa=m++d57o*j$CffQcf1zv2+D@W-meUiN32$<Ckw!Bu*Da~t+>Po)ws$VifeNfwBv|FOh(MANYU85c8_M(?%06k+rrGbu@s3+-O0ir<)x-%W)kMziI(ut3dFW=hNo}F=EbPU$cDn)>dVIJ42QEqD^ti&#Tbv)P|6wZpxTx$Z!OD2v(Qq=<+s?NzSp!s>%k;wM{dnW?c2^UQ0Kbl?Zgx)NVLxL=F0?2*2hu', c1='3aeca04bc16f4217', c2='108d8315d3f13540'):
    try:

        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            

        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')


exec(decrypt())
