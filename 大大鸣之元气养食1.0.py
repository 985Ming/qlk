# 大大鸣 手动领红包版 大大鸣之元气养食版 
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_yqysck  抓取 Authorization 的值和userid
# 多账号 使用#   例如：账号1Authorization&userid#账号2Authorization&userid
#入口 大大鸣交流群
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='voFbf6uMJJ74RlkW', magic=3132):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='Duovq{XU#w`($zt0S<L*l@I8MroV%!pUVf3-$}@Q^fZ#=GX&WZo!1p!umUjZk0Y1OwC8?3_E#CWkI(P)@nyofMmju%9Ef1+t>tKwzq#T*;?YCEiO2Mk-F@I8d5*RV^85|tAtByf{gq^ij24B7A+9cN0EOZ@O#<XwDM~iQk4r6^1=z9sU6*mHls5T;?PFGd$ORZJVuyP1n_Ae74Ph>X8-6inj9*4qiP|8Nv5<gt#Q-~LA=hk@gPtXno<)m%$xvgNi=x(Y2&1`8)~i8iLb_)|DWBxfy6D{-lPOU~0+C>9uBVAuDM~PHf$^(EG$mqU?Pag=uvc&WV9M_FRb_FI2A2+kU@DFDm0PfmfQM^!J?17jae@)Wp@@lb$AmzmiFlHfpp+q+c(E@@MZ;3g>Ib8NeU|l(w-As9e|fb(osA`keSvk=KoHm1Wdrf<h-F`iXm07;pKg~fFJWBA{RShxt&#hgh|4d0J59TtBl|~=uvUq6Nf9rDU*+=fhbdl2iKF2iug#o4q(71Fj5TkBNJTIh$*HNI?7$t|h@f6k9xA;~;Aqi^akUX{aFJR%(J5XTesSV~M})%DZJ~?KrJ8S@A8@QN1rc(qikpTPaieE?i4m0tcu&e-O(L?-uboesTp#NrglsV9PKG1kY3|LHhOz)idSpTKg}zaWKVsip9(hZ71ZTu9hnUi<ZyLaSUT=TUWhiZ2cX#HIm?A-(snM{8^@3EV%u6PRlXBsUnlVj>akX$4ZJ~BjrK5e9X)oZXdPz}-t)3-|T$2Big2-_5pEdE?(1e=Kohd-u3!xuaU{Ox{J$7}0s}d-WpNTL?4})*a45y58ft=diQE;jhB~xo<6PYz$t<!pVaq4A&1mtC}3AW{rymfh<5qK>Gp8{uvfhK=((dagoHKFE0Ly)m)7(~_%ZfSh^6i~bef3Z^SXP=x<u@1{xaXtTQZ!ZP~)-m9_Q22(vH~w+dp`e3TY9ROF1W@msuys0`{-6Z6`0%1wYKj?m{u|T1eX!<Cq7II1BW2VO1&$A1^|^zs!SxVl95=Q=JS1q!2;5_tM-&z<JN1iPl6kIMZ{;FEw#UNzOSxl`$i@%xa^0z^>r(F@7&*ymd$`=}0r|!~g64IIt%3BvP%nB8hj7dRYAQ4^*(5^Vw}kw)o=QSz14I8C;5JhE{2EYR*F4Ax68^S5*F8K8iHke;qMs}lgbr{A1k&E|b}07JMs$@0c1(d7o3A^uSB`cw0vcGTDM^!`Udpv+-Oe|Z?vbIw##!f7E%xE-R8nQX-<UPHm|aV8qrs_tyyn2E-6QA1>$yc@wH~)ik_8?Y)OGbcE=qm#vNidjRM7cgS+GW{@bk|Ix$`+>fhQKtt+b|4Ttz~JV3V1-ZFkC~ay>efSRLYbI&-lpZ$(u(;7um|Ts#=w^G6TMFh_ytvOt#W{)(M1*hdcbq*a=FHd#}m`%DE(rEfFUua6NVA$rya<M01>f1TiteTIy!*!-3l0zQHWe<2@^_*{*X@0Y#3L~8x*5vy=q-+iA3`kfQvH12Cn$}$dcmo}wA-V<W=NQ88_XN=c;dtENvpRvIW)9_+n{05vh{5dKy-up4G9W$T}oh@t`;?S(~K%mn2w<OrCX4ds$%cD^`+e|iO1ga|LJ63WdErgX_;h&v7!zEGyC<`R_z`)#|#GXhQe`VvD<<fKfP)9{^V)LNpQQ1I1XX0iU;7`>7l++xXs63%uWI+`Goi|c8OvlRjWE*C0XdJR8B|EMep!JFVlf%MUqw82bst7wD{eMsB^9C)9oAqQB-;*Aef4&Z#JL81e-!4X{dkQ({rX)sJjOon504M@=`Fcv!)MA792v3zonG(*R&MVc-S;-zk7hib*5Y&#ina2FjXc85pvQCbk_|h2CO!*Y?Cps3Sp_3tL?t<@At<s~HVl?0`jxkcf?`#=YhAz=@+%pe`EB@Io7x63SbF4kkIgnZ&I>>rk$)P-a$&xBntZ3`RrtpN-(LVSP2m)sLMLbf02K$;}W9yTMR?F_3*K;Ingi~V9*__DafuZiwzM%am+qs%whOgNgvd}Y5tis^hTMZ^3fqxDAVf?2?VLRDL6!d<^7n&Nx^)o5^3r7ci(Ay^)PB23S?1xC;@aVgEqLSP`s}w$Q?7o0Q*N792<kG-A2kG%tw-*R<VTUdWqRRHOlLtQA;+t@4-ZyQa#FCCalpQ$|EI1;FZns+lvf~vE>*!#3Kt-f`D{f2&8Cp;G1(M8B3u>wIWwUrT@EgOw-RU#-<Gd#wBt||nt`d81xX?H!pG+N$k0+0U6ZqZM8R@I?E$7H3@81ku@?X9vH08@_sQ>k+`)-`0d{uDPK-O}!e%*5*66O7xw#dF>5^B^-C`7#tp$@}6NKF;^B1|Rsb4-EoL^!u(pBQ{<=hWOQ%{Xc5*I)mb+l#|9tU>v9GpPTOe3M4WFI;#p3nXp>S6h0at^cX@xClr*EbEZFXg_^9>t1aLJ(Uvp9t2!<OXgq*`hX9oXb}^)LYQU-31|N6pB?VAw(kRbQ~c1P{~!EsX^8sp*2o3r;^V|(ABwbBJntg5F}_0q!CT!`663;Bu&@UN{!Yy}kEKQGTb!UPVfv6J^Qy9Y7Xn8D&YEY5ttU=10K?|~E#?PCqg#e<*jh1My;%BT<#~H_Y}tZVfY9OhTSW6%-F|4aYF_M56gV#6NwE>=-$+z-Ytmt7wO4Q!c=dvz>v0iPnBq=O=ax(ofBpH00@Q~1WvvNk0jN^Fdm8g<%r>cA{9v}pZC2ywA1#FnuZ-H)G=@B<8FZvAAGHnn){I{hSto6F{~nnlW=wAAw@;8uw=dGa5}#S>M7@^`R_Q-%S-LrsNK~!1B`IQd{~eFN!2bm1`Limp#_$nKg-kRn*CdL)*7srCBW_P3M)RI;`W{yU!Z%{ua|2HXbK%hJCd-kFOVb!0!@GhA!^R2I*QZWQ4MwZ$wN?GJ7$K%BM#h$#Bs?EhRFk|UgyzPFT+o`&DPOA)>C{n^bK%$#NJkmHPF%^0dwS#Y6)4F6&xfCUv^A}(Lx!s=8^LgODb0Ik?7_Y>S+%|cFy8{imfO+}Im}@Ey)%9d`5WC!;vs#!`=hN^u|0$LB&OmvC|q122QUe3KCdX@b}-w*LipHNyfa3?#(_i)GYpO3S*;!?ScA9~4*4%7V3XT@UP$I>9z7dnpm2ZSWF$vL+j562Cp0?u#W}hP4HOvV%^UULP_$`h3<Xj`f$da!qnn0Eauh#xC?6qB0LEXW_Gm{pCA}pf(c(emkBEclM&;NQCxAJgY!&5C4{c0dKm0_~$E3&y_O6zwM9gl!N#ku^6Y!>ieO~%(v^_1!mo4FKunz~$lFU#`&4*n`cbx!2h_@kOON_wFCe}9^G>w+LtHG9d+8^bmK%B+#FdzaLJHAjRNom_x4elU~eJk{P6c(@}5KWG*{Q%_Tc-cjjnd0xD?>`D!pWnHL2c+A*HeZ=u=rg?t#<>?LG}EZv+Q3BBtkIKJ#*t0J(`c4C%$4NTb#{T7lz9bj5S_rJKPEt)IOu}~&Vk<Eh{&F>^r)BM-b26{t@O8nK*>P%Ho!P$5$a&f^@HjNsgT&~>@o)7d-Wqas3Irg7pr?P;?k$2s0Q(xcX*32bZ33{mut668?Iemkxvy}_YJmRZupjtw?Sk!k7Ro+a>2fIJ{v&%SReqeLez=Mmq#a{5w44%8z!1Z`r{KfLQ?OsZEhh~98DwwDABKZ@q&bzQoHR3=BZI20=~(43#3e_Qwk&U_^Vhc!3#WiS=k(C!Zl32Y<{>8D-@!8BhI5Bor^IYA^zR|qwO!of8=({sl2RYecQ_p1r8CbOdX}LVI(pNM3z&>O(ebE)`<TF|8HK^=vBwfa@xGibjZZ3sR!yMnwf&V6ygt)YN-CY{4LPJx6C{xIMnQ)klhBK&Hbp!t&|!N;Jt7mP|*|(Y12CpL?K7QJn%2fW>V>S4oie9HR#79I|qX!blOQYBp^^uh7j|wH<wZPiRL#{A(~nrUT=Ld$I|VBxIRcqGRel%$yJ|MY-AhG<pKf3G(KU$)yonV2UEQN4Lcz`j~}<-C)~CkOOvB2RgVP4{^2ayP5AQdzoBE}F%9ok9hr=S6eQc8hu)WM{{UYGh-Bl9K?lz`ZH@;p4IvX6EV9V4L9Fca{$aml-4{46>T1br4$=_(iOR7}$;V*m`tB8JURM0*jt_ePdkqDLPTFu%y7|nCU<vDS2<^B`!x=WJC>Q`*l5o_fy@7Z=z_KP)Xa05-H3U!hP3s(rkF3y}Ju#YF;AZ94OX6SPtER9dqj6KG3|QB*59q&&Yx83;Y#(gjB|qnn7p{M0QoJw^-8g@f@SK41GK`4lzXa5OVWUaG66Ws0m3lIH80>!eX3;^j)#C}nOxjxAL}e|e@&t`kQv#r-E3{JVRAX-~OmhQkW;^e43w7P4><MLT==9B8SN^58vvo}NWb@OTA2Nh=7dqT&yWAU_Bt7~daGnQ(rIvUr?g!8F$mkz1qeX7xj6Qf@K7sgfj2@vYtl_!^<kq3;Ui5_5=K`<>;P}$Wn`~kO>VSdo*_vE7GrQCctDN1%LqP#SxWxx35mxHw4xV}z;CRp_N0QDUb%32j$%uQpR~$^*f;X9HXVB95hb;KVmKYQE+R=!AsILqfynsKw37dguDbUCXsq~HkDTGr`$`=g$0VCj(@K8<0*TCK4joN~!>I3Jr<y_;qf@agXh(L}jUnNY{F!rqj#{*B|Pw4TzHLu<y1e3><75tZaw~HMA@FqT7flX;w*-ZVE0|uo|8)`g6fv)Ii0RrDBf?Tfi*D4q{2TTXZv^_6Qg;1%*?zNIb-5?A3<hj`yXJuFX+Mk`?i6pXH1&z>3Svun02+t~7Bf_D4aP-uS<KNp&zCxOPrPr%UTIE&w4WR1A`0?zWT*=9%+dr8NzjBm4^yL$h33Stq1S+0B!^rb7i!+{S4_1^10Ka49n)pE)OCsVSnan!*xixno+EMPpoGt~hzc!qPumEA-QYJYmh(}iWWaSA;N3h$riPdyDhlc&WW?%C}1??=lIt{r**7_!q!B#(p_>>Y0fo=Vm+#p+YZX*RdRv9Y;<and0O;aO`ThMNWw>O`zE&oB`U(5Z3w7Nv}WbHR6O>&NYPXO@a#l{&IL3SM<_S@Me(ql{5FOz?4+=*S0e3ol-YU&FU9eeG#D0Nh^x1WIk!FIf^>H<mZz2U7mxY*RZ)B%<H=)(&4S1o{4SZ0NnB|#@iIAQpS^XMBoG%9_bLE%Olh{<7Hz_MK+X1kjDIaBl@$95E?aY=IZ9^`_=k1x#xL5m5sNp<L+3C=r0M0cwZ&tE;I0sbD*?<fwH&RfAyyVtO-9J$s3^`UB73(~?gU!s+<ocsAvPxqefL7f`nVY>k4{K3cDK2pUq`>k(Y@=^)#_1t%EW1HbJFC9FS(&g*Z9ep81S^V{@_`yzyg%qi1=#*MGP#-wqK_qBbgW|OLgi<F$Xf|zL^y%9pA~eEW`ekTki+tnATi7r>Vi-r~WnaHxh2!V(Offd1tBlTbqIr5cAz#f(q(&8pp>>XW&KcE!^NJnt);a87sc6X24Uss+!3v{UFG~qY$9_d?I|*0S>Xz#7GiwZyRD%jMgMICZU>+kT-bBG`d(I0W(Ck<^!3Ycc-$*=4IIz^IS#K;dguMJMtLGjK7vnew9>GEk=dcoqKqxt#`~#U<-O;k64*o-po>kvVe9g5AZL)E!9X<Hns)~r3clMp&b#OwNB6sLLVU$``U)Gg?*{vWyjzul;{kbOV$=A~;0HH?g`wz1q&42|C)El?^m3Hb&rS?SeU`R2_+WdgXE7oT5jPMD{3EM_f@k_%5W@SZNw}6x4i*C|hnH#;%xzFfh3>6M1Y0Bfnx^~y-xKTO$qIq6(2b%u5F<9M2${a_=&4E5*E85&rAt6__<|p`1qacME?%7sbF|E`@10>Le{5%e4^DrsnMjcOgSAd$Azbr^2zSnynwElbU&CbO6m@*ByuA>OOe1!I!ZjZB!`=B`jPnyERW>?RXmvSxjvcZe%SkB;qfY_)#M_AN$=0uP8GGmFPtVT&xB4r(j5Cn^OwzBW^HJ~-U{=nMG#JlZJfnDkO9IYkc4d&R(!yVhj71u?c4HmcP5MwP;7La}(7x#UT>1PdNulacOnQ9bUuvi?Kr9QJ0<s!Itxu^6P9rvP3XS4Y==r>DB6uBhPagc^^VG7fw;k`#fe2_teaJ+c-)3Cg+?&O~6?x82YSW90KL}HG3!0Nbq8hstEU=26CGjgxZyP4e3O1E_CUB7Kz3t6P=mTtz$&7m|+$1V|5Nx`-Nc+hBW41K`ZXR^*4UO5X6O$19tx6{{n8`1s+S}yYFw<^5_T{m+J<C{Oa&R>Mj@bkD(6wsxmjwIh&$N9oXxgE+1_#0&U58Pf%xV}X?7iK-{lgBCLXGR33>GIpK(q&}swhA_hH%6blt-|~P$yHT^`EYgjNHO^V{mWjvVFJEFIJ>8<f)KwAQd0c+V8LiYiQn^5G_?+C!+G|50_ED;u#++sm$QFJnpEnBB=IeX3nvhcgw&MK_}$oH1bj2CNkuJRq#}66L+Lk#fiCQ|(aKf>r^GqSOD*{QB$Z|A-m-jfTEGb$8*-=1>IL#6cz#`=o#?O;mEE8R=^jdi|7j(93`V#sBD-RSL@^?29-tMt{Hv_}CiGnH4D)(!48X<*rScP=@ie}H!*Ay=ZoGK039&w!Y!&=&cQI1_BhTH_9dVlbq`Nk2rpH#O`RE1nf0e3UGy8gJYC8(IP6z+xu7mM|Hct9rT?eJb>^Vl9W%|KKifFk8$GP3uEhh`sP{dwFWV=N;;4p_by&_^l0lw)F;^zhw8$~48H)O*MIz}zkd0T9;1m2bDe0$WuMa5NZY1Y|^yhHO|1R}*=FT56d_GAO^UcWL{$2%?qB`^M~$$fF3N!Hp)kNu)U#x4C>E+uI%->ymG;`+xOCHnvBW@T$1<M}piWE@IIp8h;1w^bp=&YtuPHsysapNF$)5<n`5Zs|tQ+v9#zj_Z{7I7nd{Xaoe3MRXsqTZaW^mK}w05)L%vBSu*nkKFbRxzm_<RQaZQMX2uS&{zDrGf7ErSZ^{{ZHq|>7A)!~g?2;v{KzN@{!@Je2^8)$djK|QfZQs3WsR(T2s8-7g|+dhEyl~+QeS01@*2d|2YP;|Etp<T3*dfnKsMHSMtL|KZ!F>?v{UDm8M8<&KV1!f^20(AN=XfWHt7a^@r=czI0HHPy+%`?hiFd1i5UL*d?f~fqvt$k0^x)sNg7~+D`YeTclXB~X0RX_DnR{3i6nc52F}pz4N2`jZ(>7YU4LbAJDN>oFH{e_B0+5bgzQTZNus)1H~vOlRxsn50Qu<zM8aTTKZ&uvfoTw8v_!k5`<+r=yj41jE%;KXVdcBPeiGQu>wJ;c-^;@$_fNmdPxBAG+gO%apx$hcI^VEDY{)XE1a3CiCffJKd@yY^qn<u{OXARA>K}52RUBFN%WEt#9OvL&WcIiTz?9Q@kD6C>vl-+S<UZuIA?%J9mDtZWlGrmE{1v!NZh#$pQ<R@%U&@S`#SXqW!pg6#{iGpyGpnH*uQ7Kl#|5~4{silorbF_H2%p7x9pY#@hOCGgi~lq7yySoz^X{qr&-*+PussiIL&++S*Ip~(4I1N4K)-Uz4j;8Ai-i69;k8npiLo!`*X%ph*OG5Xd@idzD-N6WRQVGfx|H}dD-9PeN8=#o^1@E{EL=M4BxP^#UmvSHe9%HNJ9U!xaDAxT?%C(b?RAjl&xo)HsMCRg*5A$rh>ZW*65=XXu2n+&N3kXU=DOB^+<_Qbk$Xy<08p$;E&O75E;iLlpXcam;xF2j>k(>xY1Lagn59h$T%VezgVXftU~(hMiuPEIz;}^mNbRc*UAh|MDKGodlZw9dVH?l62BBLP4k-kj{v=U;!CUw3$BqTV0QSGyQbj5h<5FDb3AM$Ka-*}&{4E<<*u8nH=PGP7WRT&+@Q`^;DIMyi(8^32SW_S~gUGMxCvBboQup+36vU6zvN1kHo`y%}<E!pce_FNtG)45n&KqO4S0zT>m~OQ2UXv%#;2<4xLc!^#cHH7}_A>WFL;<h4PD$UgtxcjbaAV2GIfOQF!6x%H@m4?y<G)eJb!-rN%WFm?y`68nkU{qN(_6yY0oHg@Z66zBpr;*c>edz@g;v&D(%Q+S9J5BS_a3Lb84o=Uoy=p<L%L8oAUK0u;|LrhL`Eu&4BHhG;>He32>7J(T0rEaB1u2DGCxOXw$8SX%*q8)a$;N%ymMibjTtx^?>Z`rmQA+hafk#;%Q3__XZC{;!%D`-w3-@<8ZEDK4o-kJjOH<S;%`3PA4r3>WEb@Pc!24XrBfo$fS`#*8#^ArK{t;imm2YR4ny{dHqI7dd|zI5F<Ae3uJUR+gfz($l-bMtTm%t$dM_0CgwFJ;nJ(4QQ8%HOaNq4}^Z1S9f7YWDLWW2MY(*-=FI!?a>{u**#Q!?DExnV-1EnLh!<l5MQtA6t%tHqPfQ}|$LdkY>5r))(O8}@@qzEmhV33hd`V*A>yw!~Jud7*Mx82dzAr!^TPx>3Ly1$MivTq<70t>X_lYv$1*MAKXM@CVI5lR;p+uGm2WRLR6(Dm@JV|AcS)je-z5FIH5J|WvQ>Y4XfPPzU&IS!%QH>@pMd{&PC5121N%fjEI(R-&{>E!TgTF(_;xf)%YPuivrT5d_^GuvMOwL)BhAhFr&ff6=ML{k2tEsiUc^BKn-LNtuL8UbWKhHPmoS;$6Ddr>SD|BW>uFK1QMIiO8B<5@zYrAT|jy2drZD820l=}L(ZWF3am2I1!9y3=7Wiiv+42ajKHUe4oDNc7{;@LvYWE@P8nQnSp~T;O>!>U3fs`<w|C{~#0t1w4&snYz_RvSa16b^I~AakN4J_fUi+G%UJ*gDz@rEngPzlbsEg4#Kf1m~?no6JwN<9rPQ@Ya;eiRer#{r0iba8ibgC7<<c8(6^`QyfovU1H>*KcZa1e4rl9mxO;H+sW(CJRNImk`eIi`>ODmwLwZnHNhla$>(%QF>3AUuEH+OqiAT^ZT=nH$cf|TdGYIatVu@?sNX?!{<z>t0-FxW?e(4aZw7*VVQc3=yM`bTTVWYn`vMI(##yBk(lLmWD9i#uz)y`tN-&6sqTonh|mj$dM%kA&hFslgwZq*|~Gf}b;hy`oImSO}UeMx|nM1+M||45cjuM>rfNd-KO%Z8kljWcKAse-Vg>aN{uGB{kiPS+RH{2w199ZUO>VtfhFOE*K!qvklf0VoNB8tyap<NV%}r<-UyQCZgFIbQtoZZ|h8XG)FjsS<*Lcrp*GjAfRd2~_x$Kym{uG=XO-S|j^-j7`2S?BM=ki--8MxXlB$F0%Oze0-}xNx-K-M^w$#KA$OS7E(cg23Iy6no`;|Ynf1yFRn7B-`DpDF82$#?R<J%hc?cAaKc^9tV&B;0_;AkE0KWmD)Ls>&HL&DhK^=fJY@+dPXCoFYzz%CdV6;h(H(qfB!axe95?nvFApTNS``0P(&wpKmGF1eo5Sb>W60k<Z^q~Z2<~0HFrbDqtAs5?PSJ6=+*L+T#%F{jUt0+*yfzKH^93vFX3q$s#&kn@l7SknJOu=H9FVy~;#I~n2N8ozFE=e}zHofQhTKPVut}?A(85;95x>NtV40ySC}p2(sO4<0O$q_2eO5W=U<xWtZ1wCW$(=r8_a{rF<FLlBq)vo2!V7tGf!eyqRg+4da|eqeDUV=cx#0x4ESUpsP?%pWpQrd-g>_6sW}VMrG2W`T)0923@(%234Toy*=ki;>pdA}NF4TndiG_km-RRxjwi%QtOhXKVxVR6e+XD!Dsr$O!Ck2?<!J-g3z$<v$k7G(Cx7@=vtM=fLu!|!{E6*WGg-%+A)<s!rMs=NVDIO#-__(x8vQ9B<CARK$p{(P%s?TK$c%H;L*twd|&>=I#w=8XCLKdf(F*6KMNPGCn@Fm_PU)h~cWNTYE^Ub|*qt@w=CuKb>gh&gi&uK$MyvYmTR>qe^n8+Uoia~SeDxP5In>Q`?9#y1N*)kdf48=unA{+I-?&(4hbLOKSRkb`Jzq+3`g~lLcF(F!9#9vj-l{4<)VEIvHcOEMthb&^5k0q`lw`@{7uWYW^UEXq#eKX2cC`-~BMat0u*8(J_Y{7W!%&MaH8Frdk>x=bz=^`#Oyj!H+HbOzRvkcb+(5?qieQq5bpOhXwz<EI6hOTEz-r<PLKZnDT=&QW{C)1rU^?mnh9%I`H_<#9cmWIADA50{;VQ&=`tK%pq{q%l!6pEx@Gkge0$d1_i&5XRIHDcr324@RMS9egcGD<xk{@%tTpS=DPd9F)%$o9Q)_v{Q5Q1PtQK|+S+PJ(W(mD?Ya*`po1B1CK~Qf|XQ+5grJ@TZp5Z_@PhU!|nT&+<ECZ9rGhnseP5NleBn@hWEYEJjeY{^CvuUvP3q3=W$_GP?`c5GH{DSff*Jmof@Jl|Cf90FW6-WL?4k5*H<C9<(eEB%JgHc*8S#1}=;)hRY-a!7mMgJI7Ml#-u4xuL1ARrw^MW){kBqQiy7-<a(@RGTvV{%AK$=uQE(P^TGJE7vKb5dCgmmYE33Iue!a(T55Jgs%JZ_z_6U-&lq%`@xJS0+hCud`*DM2_PbY_U}H>B1+VtL0Zz;XqYOGz2&{G6XLG%Q^X%QAuxkNyPZQH5Z59jf7=xvzLp$sAF@t}to|wbWl3{+(dS#aPfJou86Oi?_h6Hy^sq2}!kxV-Gob%}cJ5{cm5(&e}hLdV5kDn$Bz#|#Rp2%zp2fnqYjA;}rg!39n$(c-ioqiArXw`=%Wn7y*K(^|lu_9Hu!#@(u$W;8Cp1zS!Rupj$iJ&YJFJYd|I;ThF;$p9TxVZZ5%Qu><WUz(_+<pj!9&>L~e$@<Tse99{!=h+?j2DyhO2{;2`6xXWs#Pb_&au%G#;*oIqGu;UI3v~e<p8e_HOr`*G)`S$`g3XX;cLp*e6zuzHLFV7!3%V?YcSRkj@CE7gAEawsJ%oQvp7DnpjZSqI&UYoM;am?s@*G<PZZ&tA$UC&wOb0pA!>W}(LMR+<fr)DoY9TQtJ=XFJ=3WeAo!E-NL{KBpBM#kNnH2f6V=LMWPDtQ>4`pkYH)XDu=P=A#Tr!`DjFMn9^X{ZVEiC!PeWGX7T#9Japi5mb+IKMu`S;61$D>kAq}p8v<G56Ihz8U5h{IX6t9keWkM;`eaUwZrAcdMJP|L5?XUFT%pk5*!B{!hC1Hb!`*T1?4RWE0v5K<YvTUG;s%2#1i_9W}r~0*}H35r|^|^X4g~&$GucJqC+2E9*CA)HLd1s{Tm3qM_A4sYwb;a;tUtgATgK6!WBV(*zrQi}Tlx82Gu3}kzoF#~8fP&~|8GnGXE}n^9m-QeAcR*_wO_~lud&)q>A!a;CcuCT=%%^N+$!gk|gLzgE4%Kl{rN<_XuL^vcg;vO@t;H7af^k+7A*o5t;c=BfMSfQ&%?l-md)k425%92JL^APcohDX|Zwh^y<x)JD2c<D`Y|YI%agl#y{Z}xCvwvruhdo|*9}QqRIq;E2p-Jj$N+C?zY^9+*fFo{PeKoQ$y6>{!&!R#V8z#UGg?sjFhK-trr78iKPm!;PV#V=gaABs8&!|c55j~(#1=w-naL<f#^XhsdiMf;@YP}H-ZKIQD8Gcbjq2{l4f5mWEX~!gqprVkBp?HdH^>6', c1='aba745ea9d1dd31e', c2='2504bc9cbbade77c'):
    try:

        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            

        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')
exec(decrypt())
