#
# 大大鸣 github 版   https://github.com/985Ming/qlk 点颗小星星检测版，不点到不了账的后果自负
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_lanseck  抓取 Authorization 的值和userID
# 多账号 使用#   例如：账号1Authorization&userID1#账号2Authorization&userID2
#入口
# ❗❗重要通知 ❗❗
#不点到不了账的后果自负
#不点到不了账的后果自负
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
# -*- coding: utf-8 -*-
import base64
import marshal
import hashlib
import random
import os
import sys

def decrypt(encoded, key):
    """解密并执行代码"""
    try:
        # 验证校验和
        checksum = hashlib.sha256(encoded.encode()).hexdigest()[:16]
        if checksum != "450faf8e58e2944b":
            print("Checksum verification failed")
            return None
            
        # 解码Base64
        encrypted = base64.b85decode(encoded)
        # 解密异或
        key_bytes = key.encode()
        decrypted = bytes(b ^ key_bytes[idx % len(key_bytes)] for idx, b in enumerate(encrypted))
        # 反序列化
        code_obj = marshal.loads(decrypted)
        return code_obj
    except Exception as e:
        print("Decryption error:", str(e))
        return None

# 加密数据
encrypted_code = "xn^Q>PkDB9NM>$MG*xd{WJG9bYNH-nIYIqG1vxEqHfA_;D|r%iBxf{FP*V$82u3n%4p1ChRYEX91v@NuK4k}XD}57iE?^2vuvax+07C3(Fjsn7TuEp`1U~O_T4u>}PkDB9NM>$Ml2UJ2&qZiyYEXDuIYDbe1vnaVb76~fPkDAal41%kKr*#k4<Qk=Y$6>lOfv)_V>wB3T4rK%PkDB9PG)XSH&bs|mpEu?YS((rIX!FQVL3^1T4rK%PkDB9NM>$MG*fR_Wa4OPYWsLvIYDYdVL3_oSQ24#PkDB9NM>$MG}~=HWguzoVkCW9IYDYdVL3^1S{h>2PI-3UNoH<NG*fR_WB_Q-YEXFbIYDYdVL3^1TEJs-PttdENM>$MG*fR2WNm6E2~l`jIYDYdVL3^1T47>yPfB)lNR>KHG*kLnFGOi+{ZIs2WMei!VL3E&CuAOR#(D~MJZElBG*fR_WJG9b<5S*SIYGfgVL3^1T4rK%HGg(=QD$yVG*fR_WJD5WYEUj(u0U%-?HVm|31&-j0Z@0YO9~4h9aptlN_4Vl1B!V&<46G~7-lOAE&~w&OL=y5Xhu%X&RbI}5H<k^4Q_%{1tt$H1VK3fWE^}8APXrFEd?AmL?=OH2rCN+1|vpv1tt$H1VK3fWME=*PYOzONM@F%G`nxuWR!R&x<EJUP4OH0K&e>b1O5}%eAy4xcEV7fD`LA%R+V{Mx<EIIDGs_)F6mi4igqodUp9qwNM>$lH;HLI3MU5*4~l&_Ks66ByD%&qFAE0&E)5f1OB8KRG*ca1WJG8iW>9!qN<wNvVHs&MC~IPKPosSdCloO%Q7|1L6fhckYEXDyIYDYMSUE{@qUK_&Uuxlg+HC(qpkMD1xleexdLO7tc9D7wu_*@6Bd&JJFvSU^SSi0=dxw7)wNEF#VIQbob~9x{VL2*tT4rK%PkDB9NM>$IG*fR|WJGA1CQ*1=u0ak%962p;Cuat5GJ67bNM>$MG*fR_WJCgJYEXDuIYDYd9XaW6T4rK%PkDB9NM>$MG*fR_WJG9b%usk*l0j-hVL3^1T4uy@PkG&SNM>$MG*fR_#7AgpYEXDuIYDYdVL3^1T4rK%PkGRENM^-OG*fR_WJG9b4p1CkyhC$BVL3^1T4rK%GkYC(NM>$MMqC?FWJG9bYEXDuIYACb$2duH@n>RlPkDB9NM`I$Kv-{BWJG9bYEXDuQ%7n-VL3^1T4o+|>3DW@<7aM8G*fR_WJDEe9$$D`IYDYdVL3^1CS@LS>3eo`<7945G*fR_WJDEh9zl3oIYDYdVL3^1FmGaWPkDB9NM;gBl2UJ2&qZiyYEXDuIYAdk6)Z_|T4rK%PkDB9B5iI?G*fR_WJDBf%u#q+l0a%gVL3^1T4phGW`8&pFGy}qeGE)DG!HsaUUVlKd^K1L1qVGeAy`*H4h{rEeFhjE25VO?1!X}T2nAas05(<*3s4;cc@IiHJ54hQ3N0cf867YcGX`8EPCG~*RSZ#iFkmiA4iPOmI1mOhc`*VyTP;@_IyfT<3}rhnTooT^A59D>V=p&LaseU<5feNYUK(5w3T+f80|ixX32PrJF->d_5*R@R90)`nCKz3RMRF1*MPV>ZM-mGTNOv`SA0G`41y46ReG4uhb|W2n9y>+=AvIbV3ug>z2Y6pD3IZT9Z%Z&*Gfg^A2u(vGa0*s!Jaj4@90E`t5ED5w4}Wky69Z9BB1Abq9S=AQV|E4yLLL+@I}|f%910_QQVuRFZ!t?qB1R(xEmtsabQwl<K?_+1D>nrbYzsni9S1T1Xe1~n8ZH$`B@a<32?kv_Ty-)fQg1W^Lt;W}RT>6gX(A+7BMl=Ab6XS_OeZ2>G9_OTCv`s<dU!A(NJAb^2wEH$D?~aJC|x=OUM5xySvL|ZSRX_dbY&$cSP*qUEC)kPCp|(ME?+!65hyNiD19qeM;$T^3kotUT?r#OI4v+E6){~`eNay&4JJ5jS78AkUU5DIO$AE}7-u{XWl<s+IS^0}Z5K9cP(Lj-G$02DR0BR6T_QbUFC1bb9u6}bAT$+C7$7BkP-_8e7b6iRTP+?n2X-uXEDk>#8Ve9I1p+isD@!p4VS7b5CS?s1LK`y!Yc~&b6jm!68&oG7axPv*Di$kz1{_g3E(ahg7IjBHVLcLg9Bg1f6+m4v4^j^kaTit%WfLtV5HKwp11Sq2dv`2oMIR+uDhU<~8Wt8v2n<(d1qCc+5HLAa0TogeetB4WH4z(HZ(m*m3=#l1dLtZoND^BX9V7@aOk^x+X?PJ52V-gjD=i9EavLBW1Wq^+Uo=TBRB#w1U2Y3H4Fod`BwH~PHdzieG+JI+06bYGWiK{iDGwM=H9G+W3m_jqCIT`A7cnkCbSn`NdR{CPa&`@VTQn65Pdy<D6L|{~B4BD5GAu?gJ^)@UHU$KA2LVJP10otq17IL`aRn=D1wnT~Z3sOqbQKsI3J@bS9wA9EG!Q3NC^;4&W(ryg0(oIKIvz+db`k;<9TF=TL~9-bTPaf$1!7xc6lWSf6;yl_HXu9}WDzV;0Yg4{RultdEFwEU2M<pPaXCjiSP~m1DK}66Vm1;CHYHnVK`%lrC2#-^OK}uwdly&<8g4lf6$2p$cMTLQItn5haSbX713eHPE(Ak<c3>AEQ%M0cc>o_<4G~>P11m%xA8rX7It~jh9&JDmL@);dOMGup8Y4Fce+v;xa2;A`PZnDuGz$eg0TDkmS1}toENw7BD@!#YeGNDgcLfV2b30OCBm@EwCnpdcYAjPX9S|im5mgjA2~0sZ1~d~GL;@)$18*%~CSp>4Q!!s-7-kS#4_RA6J_QyPd`&AhVGtr?FnS&)U3M=na|~H_GkG&3do)TjW*|m2V;fy}abP7s88B5qI|>?Pet#SU851u+1WXnH1{+&VB?1}{V>k-|ASww#CwT;a3UdN}K63{~4HHI2YCI@a0W28=V;DahO&m-oPB1efc?t&zIDUIIF)RWiCrUa{ZBPq%LU|Wy2qpsvSTP<vTx&ZA4-6{>Do{@m3<xL=DNhi0Vh08`SA1I?E-(recmonTKX5cf3kM%gViy?%J`)24b15P}K@kThM;#_<e0L-$8DVxRe=QeG3^h^_eo`hIb`4Z#7B@Q%8XHAvZY=^NDsl!T5EDcR0~0?!EhiRwZfZCWO(-NEIvOn-VK^TsR|#qqI7cW?1u{hg7!xWy4FMftGC5osIcpOMYZNDS2numdCQ(&AF)=$?0z57+TLvW%4FN13QExO7LKQQ8Ra6lnJ`)Na98?|;V<0v;UK=MP2@(Vv3IZx;X>cJID{W{YBOxUpF9`=yWmP^RVLlXLBP3H*LpV-zU?vv<3ltzdasd-r4;2kHDnLsi3uF!o2y+tvDkwQHetkFy4iG&eWg|*NJ6}UgYbGRS6>=X4Hh&cySQIL11{OnTR|;xa2rgGrWf3kwdOSFF5iL|QQf(sxRAB>hU}7^3KUzH%b22vv5inmFIUH4cR5l!G2Qyd)9}XW2LN`JP26Qh55)4aK91aZ`DnD0xLu*1fP(MQxDP$o$Lox>{BvlLq9}pNf7eF8;Yb_fLXKqCyTyi{ADHQ{3b~^$O5^j4}W)&O*EJQ&PY#bGKc`z>~R5lX>T_h(u5i(dbN)9(c30*xPZXZh>b4?W+W*Qk56gMXo1rJaUc_I`q2}CnEY)}m_eN93XIY3?<Y9%lq5ji&>Q6LT+Xc<f*0UTsZ77R%P9ZVYzZZ{4D6*D_v7&u-eU3wB75+zG38)I-pIv!F5Hbqx8GE)d67Y9NdFCr%!B^gyYL~#NUQb8;bJqS@WHz*1UV+b%LRXj&N7;sAr3m^?~Tr@5=Q&Tq-Cm0n3WI84nJvSK*do&$y4>ATkAO%A^e`!=X9ddalI#yo~ITaO0VL~EgPG>ebBX?06Iu{vvc@<cFBpMqYEj2tFEgUmPCo&E$3L#h-Tm>6AQy@?bdomqsQ-5$v7&t8fehDEmBttMS2@5@M1UEf8R~R2Eb9Nhf5E?KeGYcm(bRZ!EZ9_*bMJ5&oRuWYu9w!wAPahZ*F$w@De-~6t8y8XqKUhTwTLcDU7<MsIC}l}MO9wC*BylZ3Div87F;rYMD^xunL?b5&052#RRV4}nYc?7>GYmXNHc}#3eiRHze>X-JS3LnFMH>+$1T{VzQV3KxOnhP#A2A_VKQuT)Gag49d1wa#91B1z0vIwjZ80@(Dr+f1Fcc>b2}d4T9xMa{P74BW85S)M7kDZ-NhAmbMQ$w|Y(G+2IR_XHJ4_@tb}?ELOac@fU34Y{XA}!JF#&ZCBVJisaY6wwd_P16Q!^zgG$S8e86^xUd4C9hKWjQf7#{@(0Xa54cn3cLb0ShSR3Tbh9B4r)M|=+&7HA?09!C-^F$F~`A2b3#2LeBSAr3hu7YG$627W?37Y!O1Jt09L1qdYrdP6xPTpA8;FBJ<3R31bKd}L7p0ZVvVYY`(GAw?cdIuuwQV--mxF?SCd9XBUsT5%9L7g%)@H#P@K2SPv%Y*7OkT_p!8Uj;>8UwID@ZFwUCQFm=ZaVr8%Bs3d3Z39{^Wd;^MM>kC!Di;cO9Tg-6UUV-HZcsEZb_W&`4+K#wY&%K~TQE}zDtZ_KXblrF8dEekYgAAcDGN15B3L(Te-s8Y5qTd1E^8Y#7(6dB1VbN0Z%bQCX#^4<2~Q;)U<V)%Jryk+ULQ3R2_q2&Nl`opZWt3JDK0r#CNT*V0s|;B4>33qO9UBb1PwzZ9bj()HB<{i9ugf(J|q)51Ysu-0wf9;5jsdQ6A&RG6?Y;kI~rRDEnhEREKM3VO$s?TR3cOtRRT(PT>wcaP#O;&6cGX*3sL|911U%_d<G#QH4hmkRwN=A4Lm^!KxrmFVF6PL90?2!4lz*_duI`RSq&;J6ck7<e=H+AA9Q#m6BQ3XFI-PN1_C+}YB44VS#SazP7V(%O>i(cMF1iva{~ZH3{4S47%U}s25uo?E*3T+5p5F#Z#M)OCt3(!Bq=u+AwMz|F)9~ocpp$SQehJXC=MnwQx*ahF;;Z|6$3ILc^m@<BvJ?|P$d%?M_~dwO9(}LVFDWvQ-5$L4k8&=5H|%j8z@$Kd=^UpJ!JwbOc7Hj3Tp%%3{NRd4-i!vJ3kCxI3PJUbP+ykK|ehXA2Kf>7;_p723;;%1UWDWVp=mNArB-!b7d%S4Ji*&J}DO{T`*ZNSVcKldmJGuX+c~B0Z&B>N^3=AH4y|75j;D4A0I(DFh?5)5m_G%H%KQB5iUM=S^!oXHUTzN5OYUoU<Wfi3=k|^9sp2C20AQF5Cb?gLn2mw79utm7JWu80dX>aN?#8#9xej`a$Q#tC@@4c1T8LRQ$Gz*EiEcONeVi7RRMMmd<-E!Wdk2b3IP}^0ec~14|z8rEo}%kbRHopIAIDsayT?3HUKU)3p`yi1~5=%1`!oP4kiPCQ+ZTj33)VIIYL`AauHu%J|r|L7jPIiR1`5GCwl@B03ls9B}fh*cT`DLISn%nV<lZTSQcC(4;Bs(LIqGgRTV!9On7uFIW$>U0~QM;Y%E>@Nh=^DG;a?%QEeU$1T7jiG)gfwJ0u8ICqfu54--u?Z5vz>T_`R>1vC^qb0rr#G<Gi+JPuh)eJCD9AyZie5*kVuK`{e1S^zm?5i43}M;~ECHXvFmDJnuXbtYSLU>`abR}BClAt)XUX9zMp0}yCgZ$dpBJsdUwd=gnQ3IIHPR1!cZ0tXEtOgs}SArdeUITJV$J_}quAShoM92hGb9BmRPC}2K1KnpEnJAEco5DzvcX8|N3YzZ(kT@nE>7&==&J!cyz3TZeB8B>1?C?qRdWD*%QB_bjsa~LLRP8>c4Ehj)KTOlk31Q-lF3r#9U4P6XSKP@gKP9!`y06GN;H6kr)St(g*6KN$kG666GH(ggOVNFLcY%UftS!D|bQhga`Sq~;>8$$^gX9YC~av>HqVpUKUYd<$091<u>1P&b*L<bUaL=0kI1VauBBoIXg83YJ>31ct`M*t&N3~o#SR4EJ?KWK4E4+2&)Y%@I~4gy{-1Z+eoRcSd{2r>-<Rx&O#L=FcX6d(~;A4VPo0a*`kSvxy04GjP;9W)&dP9IA-D`t2nY*RHGb3QvXbq!KCYbz)<U2j(&1tm3SVIT?|O9=)Ze-AQBE<alo0a7L&ST+G>DH>Y<RctdYd@>s?7gi4-EDjS9Y62z#A|*F7b9o_S76%d(26<C+XeuTlD|-(|I13mnX+&Nm12jqt5(Fq25F!IwHG4{A00ja#2yk%~E>>Lxb6q7_0TW#jA3R?q78V^)AUXs(4s={&C3_$ba11jSDi2jY0|y*_dL0RGSuiSIKo1>qU2|VFFGvO<KUGm2C?g{?FAXp?N;5)WT@_18T@fn|eRUsU6?zvnJtJB+DitJ09v}!eXJr~DJrz?-Oe_l(N*PgOE>t8QY*H^l1p!D2X)jzHdw5qgD+v)hLv{l-bShnB8+-#AX+K6pISE4+aaR}-UJWa5B`^>GC?PZne-cs=2pt$DFcm}^W)C|J5hfTMW(@~@J$P3x3JwY%bR-86GC=_k3p_?c6-^B`J}Vw=PkTEFU3pp;Q8zFWUtk|2U2`EBWeXNrJ53u7G64tx5HvL}Dhnb=7iUctU1%D8D{%r96+;0*5l>AuA0RLZ7dQZX9WgOLSq?E2TWbPvR1j)6Cln|j09XhIBL^9Fe*{q=T?;x70{~Jgc@{J|KXeXXYF-RgYfoDmWl}vgT0c-_GCx@vT?7(yR1-o2F=u&25eYIoK3!5QK0-=u9C%t~4<$AO3mr@qSTY_mH*0-c4pSj20yzXce+&W|6+9U=8G8{04{itwb0Q8D5qb+3E=wd&EIu9<4K`gDA00SoL3%qSUu__M9VZSISadoSBO(AcITRxmA2%s=ZD9@qR6ihF9UCk)Zxma1I06_nA4@DD9X?(hGgwnQYBoD*DS9^_8z?DrVLv7iGhJvcejx=%23i41ZW0G=Z3+%&2`MRFLK6uOPG}Ph76NoaXITS2e*z>>DkcqfQED(LCIcP<2_qQ<9eyoz8hmgBDJ&#2eLEch1q2s50TEav1tCdHAU8_@TMR36QA`(Be>g4`Y#~WSWmHx+3=JYQ6A}$P1PT)s1|Kdr7kwTgGEYG^1OXu*DqR#Jd0<j;00|lo6KgzUaeYHGR7ev>C@(x&C{G?SB}FNIOdusI1sq!qC^!;v2n<s&R8Bir866ukWE?0R0#7=AdjkYFR(l9hEHE5<Z**UG7aBB0F*G$!3_vp^HA7MeVGJxkG&VL>4;~n2SU(aX8Vqn49yD56A5kt+F)$5t31>$YS$qdPB?wI(K{h67RvjKoE*(ctcs~R|C=N#qZ37Q63w!|~B^^x}A8=U<G<_Zz2s1QC0310<BRp1hSRr3=Fa<s+M=lw8b2lw=IB#SCA0<dlb2~g-GZkNUcnnS!B@RGb0}l%ieiSEgGI;?43J6w1AuTXpa2_XkawAh1TQ*Eo92H6wRd+yZHF*pLHZ?~hc^pnQ3rhqfco0i_Pz6l_F9Q%XRxmvRSsyzGFHI3YDG(?o8V*q$e{TwAGI|~%D;_l)YzhDf3r%D<Fckno3SA`(V<BE0N-9npT{HqiBYHh$9|tTDEKv|JJ1j|7GY~=pA|U{EUotjmCkh}vFcd}>3L;u5QEp^L8CL-hK0Yo68CxkSY-|}1OlLnhIdLm(0xlXOEo*cf94{nIcTpl95fUFcVl`4ETzFMHKVm<3dSx^W9d{!}79~m{b{ZZ*2u@yn9|ArXR(TLqEHVxpPXZGTE@3`34m=hdD>@H9IVDqPMK&i52nP%b2QVsfTQx6g2tWoI3Q`0IBQ_922^0ezKq(;@I~FEYR|YD1MLSL_T?=SUFhwpgY)Ke8ZcrQ%9~?0W91L9@SSLDScr#foJ7yX(3NRK+07foGCn*3kY<nSLSZOIJA~GpDRd6)}Sz0kzC^JDR5g`mY3nLRRK|2mBFm7E$8*5$&2PiOo5<-7A6*UJsCMO^(GZI)fayS|<5C#(o8505kZUIyz2z-7j5gslk2N*9hGbm7TN@6%46aYORC=NS(M0Oo-Bu*wMViE*4aUTvs9v3?lLJ2A}MSn0s3kei1U>hV5A6{ZLFB&HZEGIuLG5}S4MQ1PoG<gysGj$;*3obc6D10~xJpmRc8Uhv{8Yv!dWds9lAUIqmIwVO13LY+LLK*`iARPb>Iz$^cU?w9YSQ#gEHVFzQ4|pgI3TsgdT@YajF;GW5Juoj7D?(jnO&JR$IwS@JJr)yW6gyKY2vju(Jxl{teLo#BBnTNeTO3n!5C#q!13U>oRTnig0tg{0GfWH@aWx7vY*JQ!awaG^Eiqh53?d#m69_+gUvw%TG$#x+W<5nXb}B~(0zVE2S2ZO*KO8G6P8K45G!Z&KdmTMh83PAGcQsNz24^^9JTedoTX6wnYJ67>4-0oUFeDWsb_x~^Y%VY~TnYdhQh6Z}3jiy7X+0r*A{=}YH%D15b{#c9J1snabucS_G;=o~KxqpNdwLcJNOBD%9}gH(8W|B2I|M2udw5uH0dFczGhjV#LO&5SSX3D~4Jr&*Gc*A{2p1S21|cgMQYAq+Cv6fB5o;VPObG!sa05FXd?7;t1r<XM9t|%RAqQ0h5M)k1Z*V9YP(*k_9TW^OWfnyqYXb*mK@}Z10yHELS8WP@LmxqYBS0-P4Obs3Jq<qz4klR}2nskiJ`E*aS_KLZ2LvevG!h&#2pm)iD-1bTItx#4co`WR3kV$?M;r|vcMV)C8~}b2BR>uzYXSjG9spl(9xfglMS3VGB?TyZOBg;c6<l^f6HpQX3@kb&7%fdINCFK#AT16$2z?YJRTCaATy{ADEK58CBRo4^7+DKr1p*W~0Sr4RHG39le|`Wd0ttE%Gy^9^2|57*dlp6pO*at%MLIeOIAI+gOdD5dIUhMpY(En?B^?_^Y*`5wR1{b>J|{^NJu6)!5;YSXClotT1WOqpa5@YP9xNkcYj8b%QV>=_5^p;>TLD{XQx7I4HCZrMDn?sKb0--(3?d(G3^Q9cJ~%Kbat$jD15OQCHz7Mn7B>d~bWAE42R1b+C_F(sGd~+}L~;pr1VwL7AOi<BYbPc@e_8@8RUcYt27DzYJ~sn%9W4=aA{`h<Fhd|RXCPHA07Dvl9w<vXQGG=(8E#JrSu`ym8c}FhGbIT|W)J~1BUw3k5*1ky19)FoM?FLWcn(qkG)-z27g#(#Vjw>yClm}QO$-4%FEu4qItMWu9}YBiAa4Q#c~~e|cOD@HC|gquNH7g1AwF3FFLqfvY90;{Od2#BCj>}Bcq%qQ2~tmM3Kc94QYlU*S0ycJb#@ImEoUlMZU9LV7f&EO9v2XPRBA+V9~KclD{T=!es)=AKyx7j6#xlLCSNi+ctRj~R%0$Q6%-0u1~3X3O9v%zGDj0dZ6YHg2_OO)AuU@qR}?~VOb!o91qe1UX*4)=DRyBVH%l--a!CagEEhv6OdART9(yoPGAjlWLp3!WHA@~=ED|s^1Q|0)EeJ?E5_UU$4*?-4RudOyVPpe7F%o|laT*a<bQ>`;7&#?BX9@%zR{;$j2750Ybv!OV7H1A55)u+Wayvv&3kFAXNEjLnHgr4%OAsb}M|n{q2~KJs4+uCx0vro14L(0IR{{qdFFH3DH5e5#cNt7-BMd4v7*#w#HXa`bBQjrg1r{DX5@23KDSHwGPY5)9U3PR@cU}brEm#^O0#G9@RWktzStt%b3}X#CZao7wF?S3r7%fmT4>$z`Wluf>c_$_iJ}VS41ZgKXQwj(xMQwdP15QW_5J^`UI}aTIT^%I}Dsm+y90*J<PIp`p3=9_pYA8lf2Ld@=3?c_>Pbx<Z3}+)MEoL8kMHW6k6K;1TY*{i$X#@xc77I5bO$0t@Ck|LYObT2KRemKUIB|IvYb{h3EKfc>HB~+)2V@>TDI!iHLIM{pdS@;U4;&y$dlN1}eHS<`BOXR0VRB3u8hap519<{*3@;xw5e9bxcUT1(79jv31vd#E2{$KuBq=O7SztMGQaBrR25mkNGED|YKP(VFaTX_jWOi69JqZIyA`T&I1PUS?Kv@?n3s+V$7a&U*X;vTu5i=w&J`YP*10W1{NG388B}xD^XbD_2J{}kbe<>0LNh&xGUvo@B8Z=3B6C+0#D0&?_IWAO883ZO2K3WGpZWTK@1AQ1mJt_`!5Ge;}Q4K9UGAL3JVmv|wGzwW54IC;zD?c6^Q3+6Q0s#RHM+E^iW-D7je@k5qc@R5ja|vE62`@!G2QCF;bva80S!*#AG(I&uG6@kqVJluZ9bq9I6JjVkCOtZA5j#5%2~!GIECCG;4?rDU89zBBWo}YFE)G#0NeBxLZe$`GEp{{?6kQ%(D*+2P08>N)5hqkHQFA6YDFjX#2Xr`TDPSHnZB7t52p%078x}1JduADNQy?({76>nHPAgdv6&N%^7Bv(`2oXvS0wfPTRT?X5RzF<~9y}@(ZDKnRI8$|612$1JDl!ikECF0?QZO8APIDnmQ64WpULG|p5_>08KMg7Y4_F@+cUeAUKpq2oC?O79T5&!ca5y0?8$u*QEHo7oFApU#cq|PXa2*V1TsQz40Y6GHQZXuUR9QGE07VNWB`_5@2U|rWSQivyD-Hl5BXma*1u7*c1PW{lEF(HaAuupZJ`x=#e+&m8P%=d;8fXdwXDTRqK5{=Y6Acg;cnJtMI4&l8QyLF>P7XyrA8AZDbQunICmL`haxykF4g@?5A`2fsLT4=qCq5=05F`#~Z5|#I5>+ZrYY-D00$MR44Jrg3avD<sMSlwjA2=#}SPV}H1AaS8C{Z^-4Hr@cc2^!4c_>9~SRO$m4{lLraV=U6Ed_cEaU>o-F+~GF9x+%2a}WmrE`2@@B0EqT5_kk*B2x}B8zwvf4FfI;D-1_!V`B?(Onp{cLj*JvL?AUh5nX5xawrj10t8Aqe?AQ(Tofm8GZI}16fq0~S|Bbb0{{^%FBLjA8z2xYDhFP29t<xRUk)GzTrCt14LK%y6blm;ep(_EWKmLH93~bl2x<c<1Q$D1EhH~H6C?)%7<YbC2s21G4=NuqG9EW|eg_X^FDWW0J8l6a02u*sS#bag7%~I|1~wcTa90xy92g29Gj=;K2XP1>QZNHFAbNBWEfrN*BQYBv2vH<0Oa(+E9AF|o4m3P8OmZ6!2@xM0E+!>e04FFha2yYNT`3$49Be%x8*fJ#el<NZQdd7cIwd_gD?CRND-0SOO>GJRML#GjEjAz|cqdFW418=C5k&z39ynekAOZt+bs1j}R4xN9E(a=c0$?2mIbMD=D=1w^88}-(cqB&#Z6qWaB?tf>Ej=MI1ZXHCR#r1lDF_<|B^^XC7CsAQQ7Bj*0w^Y46ACMLTO?N&4hAnld>A@P5gs@zI|*7eLSRrO762(WDK}gsOgc0V6hV7OXIMxCc^FC>VhLLebaEVNPGS>0BRonsX&4qX4tyvwdp1f)Y(!sOeOfy@b~i+5868_0Iz3J{YH3shA$2hXFkd?y8Y3x2X%hkg1SVH5R(BLCH7iOD20Jiv4H6AZCn_I20!vOZ7DXO;S7uB&01Yx24-XVIc`iN<3lL#N7*7EPYCIrUCRiFfN_Z?6QW72tCo($@Ob!$~DjG33Y$Q7Y7Ec6RJS++d5IZSx2nkLuLN*E%Ks*=)5_k(e3J6jvJ`*WX1|2JCLO&-k9e)Z~LmXKM1PN4cT3bCKC^jE5HZw&)CQC&#4>4bJ5g<hx1u+60L39WxUT``m1yc<gAQ3h`V<8j)Q*byuT{c`M2|F}16MZ5t6jEUjAq-tm3Na8NDOfByNhTgF0elQT8!#?@5*{5CC=wbrH!mJF1VthT9t%VRMk^02Gd&OrFA*_n903$I4^$sGdnN!q1vN<$IUFG*3JVhz6B`*X2>?NEb1qc{A9Mf(5Hc!W0~$639~~7Y03#_KJrxj06E{0OVHI0?K2se<C?p#YHa$)~4kI@aNN+zCJ$gSaA`v|#ej8q9B26kdI6_+;7+gLDAyryxcorZu9u-3ZI$=d-dMFeLGD{E;88Z<ie_d4;bQec8crj5rA_6fxIwBh}02w1KL=RwD9X|*NBwrOmDh@m@ZX6mB2Q?@}I%xnB0Sg*7DtQbKF;Yr9JTxXyJ1rY6Z6+RI3Ncs}4|NC>269O<LSG>yYA7TII|CLFVJcrV4IU9UNq1OQ3_CjxY;-CTR$)3jc{D2?XGJ0meos6%bOT9kLKYiUJ0$}y2O$z_J`yk&doLR+HBu-P3O`$aQy?oASPmO2Fc}sgV+=uc4s>r;6E;#H2~Y$oVqPN=12HH(CI%BJBPTlw1{oXx5m*92Y8z4&H#8p|85aoyU3M{jI}}1AJUs+*N-I?hJ9KwX9TZYnAw5Ym7+zj?QVAyw3ji7m0Tn74SZo^*USk1R11d*7Vh0!=X-ru^TX-fiQ+X8y4-f$eeic<b1at{OX+S$f0zM*K4?Y=wdT(8G5pG#XTn;X2co|)1GD!z0ZXhZFb0<a{4O<Lkb~;oJ6m$hKGyyF%YXe&aC>(qva1}5tW)B4{e;)>UVHhhjB{(@58*c`C3^X-k2@x0!3;<GI8(dxieO_524J0=J5g}X?S0P(yNCaMbRs;t;F;FrqAtpW-HY-_qdNCsg4GJ758UhJneJw#6B5Wc*E(=jlG*4F%D_&AJKqwr3Pjy>fUo|;u5&%OJQbH>~Ggl8-C{YR_J03ASN<LC~TP86WA1VfW4SgJH9ZD@p8!k8)FGorh79B4kNns>71vfbjUwR-5NOd|CSqVH4YXSyOCtV)_IZ*;4TmVdNJYX?AIAl>SLp?QXFn9_?DnA}hFAY8-2|qa@Z5lN-PBvFI2rw-b4;TX=2pwTOHV6}13OxlrcPT3v9C#HyTqGbrT{<x|UuQEEN_S{Ra3nk_06q^Te@rO=3TGHOJR=hq9S&Xu1Upv;KTa$oGdD;&3>h3A9Rdk>WpXDb1~vjzEE*>eQeYS@J{SfnY+G3wDNq{%09FJT2q#w~6mJeeH8&_XR69UqQ$Q*s3|>bX88;nJ0tqAnS`1q|SrZNlDk)6^0e(Ge1AGA{4;Us)BsDn#Z5J&U3wsJJPH74$Q7%&yLTeO$0&yZgVmug3H9Z+#8z((_d14$2S~yx+9%3S8RB}mwD|9hUehpeRWHdG)crrb4LJM4eEifVqNfi?nTPjW+HyjohZ7(%d9~U4<A3zW<RwNMs4j?d5T^bZ-UH~RG4ikAiH3Uf%EI3>uBot8$3uHHOLUdRzSpfxXNqj0LDqtcbBveo_4oVAB017)7Up*ZcGIv=g7<xf|5-wJ9CtC_UKOz!Z4>~1JG$%$25kE<7MR8XuR2EZm7!(6`5p^G1Y*;rFW?cs!9WGM~O>b8MEN@d@LLxylL;)!?6nG9F1qB-sXCF3E9}^}52^v`?6*Vbc7#J=YLmww0F>fwBGdBVxcOW`9VM0ACRTEt)G(90O1aC1LX@4p%1`2puEdo&{a8WD<9S$TXR4o}EP8%5=BR(M@0U-e^Ur8TJa2yseGDtTPKTRTdY9LW)O(YsuBN7l}RxwU%2@*LGXH7C7c1$KKdQC$jQ#~srRc<FNSaT@@MSf8O7+iWPZ&oWeIzBKYI#)Su32R0n6FLqh05}yRV0;TcHxmv<2sjTHAUhF14L4Q|UKtlODLpGOKr$E=ZXg^S6L4)7DPA{NVpupq7&#I@ZX*(LF$zH{2P7hF0&^-RS!izt9uEK<Vl^lx9Tg&F4Khb_0dpJ}BqlB%8h9K!F$p6)02n75cTiVQFgzJNWNQmMOanPwQ3Xl}e0maZL=-IuGFCe+AOaR0Z39<u1TjlH1{MQc7&9INRwO|u2UH<g6AnR5XD<~!GASAlc6MJM2R$fJA!{NGKza~3G-`GmAyq9iBO?$UEG!E&1PTUxSa@DJC_GRSR}(LN5eR!<4>Vm3FHbxicu+kld1XZ`TyPEu4kJ!92nP{18d7REA}wAiVk{^k0tsCXY9to`6E{LG2q75?RShpFDI9bpVj@)oWLO#^9~~BO1SBvfNnt7n40InTS2|y4DjfkPIzU@6c`8T%C`TuD7hzm4TqHMMC3z1TayBd?CITlUBMAu<4h<FnBrQID1S1iA4`Dw#SUM9bK_M@9Tthnp5F`Kw5d$t20}~l95ENWzT@G0dBVa8jaX3jdGe>L*5G+?m5luY_X)RnXaXu0nHvuUvRTmN-R2~}_S`KeNdlokcW*|Ey2`yhMYaTsq4skphEgcC60RmNHC=ql|6#)wp3=L2PHYg7uaWpV)E(;kqCO;N3b1@WiH%fm$GfxNrA6!EOWilUdS}Or(FB2aoTzV87a1~K|D;$0+Jr))UI$b$Ucpq0BYBf_Y2?<^sQ)pal2Lc=`6IvN98wnyK0V5w(2rvjd7d!<#NeojiAs7NVd^1iAS#BRK86qDxHeW_a7DrKhS9Tc{H61YnA14}b3jjlF4F(e?7ZMf{4H8vP8(Bm=3k5<HJ!d)qS_n!VRT3E?Tv`lGDJ3@&Clx;*V?F{uZD1A&FEkrfFCjY;d<h|QJ8mmS6D1%P8&X^>DMto!7X=i2S^^kd4KhnI4j(fdF;N0RViHja0vR|waTNwObTLtVIvYGsKW8m&Q6>ch0|aDNKQS*zIz}lbG7wV~O)6Sy3?wTs6bBd~W`9-+7F#P;e^Oik7CjMCZZAJJ5qB*C03$;cTMtbpSOs4vClWd*8X8F=A2<zC2Psw{1{M=FD=17MR1O_x2Pi0O6Mt<iAQT`94j2kI3|%@lWn~~LRxuD*FAqUHOll2r4g_OO6IVu3I5Z7A4_{k4VgN@ICTu=R9zIMrMGiO^4o!F&8zM#+23kEWY!5al0wgGP9}6iW6CgAQLUA4{AZ&jm78Vadas)6@3poo4T`CM@3nVEY9|I`@QaLg{TyP#s6gE0BIRjh)b~8~wL=j&iJ9s%aI1>;$3Kt6#Q&kO7J~B`yIut@K4kIla5Iqzy6LC8uE-@%J3mX9_CvzkSHc}!nHa$g0954nKA2uR60$~t65j-p-NDU!AKt(HB4^to_D;+`#d0HWHco{f+Q+i1aE+i*^bPx*z6<BRWDJvoe2@_6DB^?bj1urmY6ch(O1!zefe*_#lUJE}QDHjMGIX@={KTHc_2`)-87Y!j4B^m%`Um*n&H&!|wYEeo(7)C(=Zc!@&TPhP55p)SQB6}u$cMKdcSXX;iG9)MvEm8#@2s09PPIo0}3L{As6fjQ%A81|$2}mLXEKm+9JT5FjFHKMhKy40rDQ-VABR@w8LvvF&2wNfp2@x+IJ2Mg>c1|rN5+)T513p?&FKtsDK_wSF0B1EcJqHdqc|S5baWY&9a$^!KApr_iD|-t*4H-ZPAy{Mt7%539F-{ab8e2pgTqaw700=fuS8Wq95G+<ZS5RR`J6|>vbYBB9X&(kWeG^6-7$HF(R&^kAPX<^rJ9Ir14_OQoHyjZVFHl!IW)NNg2RH#5E@2%l1p_oBN_1g5d`nvZa|#hh1_di?1Sbk=DJU=jISvzKT_qD_B64{{a7`jsXBQ+I5*J=}e;Xhn9tBe?2xkgtQ*k084p=21b1M}}ZZT39GbA|zUj|e&1~gwM039+r6J!B=R1h06Hx?#LJX$~)dqZ0(84V^aCnghG0y<k95q=qZNp>t49R&#yYbrBPWh4kFMr;T#1}8gT2NDKxad#GTS7883XH`Z=9$HN^bTS=gaVjD{GB86(1Rh2_c5z8zO9=-<8CWGna1ak1b5SF8W*Hr7BxwaVEp}UB6B#ReN*H|`2_-i{8Zja+dQm<oeG4gmF(y7pQ7Aty2rdr{C1`yd8VDXKJ4G}=FhE%l3M&ydS2+tSI|>LedLIchL_#ta8(ShFJxn<c2Qp86cW+-KJ^>z77&u05VHQJvNLvs<cU2n$5d|<k8%+gkN&^gXD|Q((CN@lRRC-ky0ZSbxDh~<~HUd2rCk{sfTLnZ4F&!fXC@xGaZxu8%1Z{gbVN?wl0|N*d1{Dfw9VP)_PXG!6JpfW;R019fP-rj^4g)eh88;L?X<q~+VE`R9R(d@YLTDIq0VP*?RA_KbWl$A298*mX5d=gi00IUNA~8582Vpp790fFeUjjJ_5+YhU98wcp9YqW#aBL%KT`(azIAjVwOK}Q0FG2_>Z%hRU2t+9dWd$$*Rtq?M4`(<53NS%@avv6Q7)k>S7bhSw1x#HMe_kF7YcwbvI~q$~B`7~D5&}CnOmKZT5CSC%Vod;93@#jTS{P9X6LBN}GdoH<4J;uFFb#G=9Sa2m4FN?3cMc<aasx|bCw)Lo8+!macz!8-77I5Ce>nyuA6-2%X)r`T02o{<FeoM~5GXA$Z+!{^8GjERCKxXi0s}-a1p-)VVtP7hBM?^~ASxFTcM}l_BvCk67Ec@_1u02Se^3T<VR|AcAZ<-QJuXaY1U4yr9SSX2Xjd%&a|sMm2UQq9A0r87JTC%J9X&2*dnp+UDjau0XEQn{BnUbgEiyYb0TEvyM|fHk3N{-FX$3hOJ_<buHX<WKBmxI40bc_<WgsjxG-(nTPA)%gPIWAKIS)JtHZ>Ou7DpakZ6-f50wN_XA|f3QGkpjwYCAtKH$iqqF;ET;EfO>$FdYYSLw;B~IvzN)N)k>j3Kb$133~x23l=szIS@}97$O>ccRC3Z4L1P<KZ<BPTO?d`0|<RXX;oK1EgBb{SY~ccPDm>`5G6<e1SB0jODG;YL0TafISoP;E)W_KEKg#TGdm6|3@8B$uvQB)SaV-=6Ddh@TD)r;DghE5F9RJq?pZlG2r&&T7$O%a<3|W15?p^qfNuaxdL0uNCjtvRCsS`&zCaQM12UpeT_g!D3`si|DHXVMA{Yb*AO`}JF+Tt~05?Hz7*lv!IWulTVL6j}ISvO9Bnkr=l5YzjS0NTC5Fre+U^5ptNiz>I5?n2)PzwVAJP{WdBm)XPGE;9@L}W-wN^lBSIYDZeW?d{1C?66BJzsWoNN#RUG$8j_WJKs`no@XHOgL!5CE-I}+9kStZuvfePG)97ur2>Q^Dp`W`#tP8=tfSKW*we&bhKq%o_<E4PgdStgmK?XutQzZa)N&w=|(G`Zy}j$Y`1Jgn|DE^KvA1WG(vccbY#eVyFgx!DQD^nyeL)b1I}ThUR9!HWacE3B}V&4#9q00Mucg0xeK>RbG3BpK(}dEn{ra5OhOz%G*fSJZ8mmkYETMBIYDYLK{-isD1KsdPYY*sNM^K6M<*RBcSLAu7<PDCIh$@L8C)vcS`=+_Pk97+NM>%dJZ}Ow05Jp%R3cJZIYDbeVL3YgT4rK{On7&7sAf!_G;zOJMwDnvx=>n*Ib*s)L+MFSie^BgPg|yRYPN1{<Wo(EWM;T&NPu{F$wg>GF*w;5s%BtvA9&VRxMplmWKzd{ltgN1I#GyPJ3u-^kvU6q3TKjYO?W1CxNc)l5u<NaWnq|UXHi|MCqZjR;XTPE+A-rQ%OLlA%xUgHv|R637E5SpY5"
# 解密密钥
key = "ZfbsOyvtHfnN4SoXdDhijPxZ9AjBa9Ir"

# 解密并执行
code_obj = decrypt(encrypted_code, key)
if code_obj:
    exec(code_obj)
else:
    print("Decryption failed")

# 添加混淆代码
for i in range(100):
    var_name = f"_var_{i}"
    exec(f"{var_name} = os.urandom(32)")
