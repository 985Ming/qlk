# -*- coding: utf-8 -*-
import base64
import marshal
import hashlib
import random
import os
import sys

def decrypt(encoded, key):
    """解密并执行代码"""
    try:
        # 验证校验和
        checksum = hashlib.sha256(encoded.encode()).hexdigest()[:16]
        if checksum != "288b5fa4b350408d":
            print("Checksum verification failed")
            return None
            
        # 解码Base64
        encrypted = base64.b85decode(encoded)
        # 解密异或
        key_bytes = key.encode()
        decrypted = bytes(b ^ key_bytes[idx % len(key_bytes)] for idx, b in enumerate(encrypted))
        # 反序列化
        code_obj = marshal.loads(decrypted)
        return code_obj
    except Exception as e:
        print("Decryption error:", str(e))
        return None

# 加密数据
encrypted_code = "wPI#>LSuO}HbX^ncs6D?IZJ3VW|%x+S4ihc6gUq^I$}I`CSx5nT0$Rl95DhmRY@{10&7-cJ4-4`6gUq^I%Yg`CSx5nT1Fpt95DhlRZRsnJZ&>$Ge{Il96ts@3~Fb0C1V&pQb!<h5<6x$IZJ3VW@|)aC312}6+8h#R$^v%LSuO}Qbr(g5<6x$IZJ3VW@}bwPDpS`a5!s8R${<)LSxc4HbX^ncrj)-V@GN-17=obGDH+fX*g?1R$^v%LSy1IQbZtr965hCIZJ3VW@|EI%t-A`);ViQ{bOc#LSuO}HbX>m7Cr(#T|o~pJZCUtGDQ?Z);ViQ{bOc#LSuO}HbX>m96bXxQ$c7lW@|EIS4aj)0u5<NGiD5YLSuO}HbX^n95e$oQ$c7lW@|EIS4b2^X*g?1R$^v%LSx@HHbd@kcrj)-IZJ3VJY_IrGDQ?baySk~Gi<<iLSxc3HbX^ncrj)-qDu@s`)HJ6S4i7Pa5!s8R$^v%Lt_^?Q9~bmdNBh!T|~|^W^0*ZS4eP4a5!s8S7HKZCtwpkHbX^ncrj)-PfHpIWNTMvJwtFwa5!s8R$>BXCtwpkHbX^ncrj)-U0ZQ7W@|EIS4eP4);eoR{a|KyLSuO}HbW$0dNBh!T}Em$17t=+S4eP4a5!s8R${<*LSxc3HbX^ncrj)-qDu@Q`)HJ6S4i7Pa5!s8R$^v%Lt_^?Q9~qRdNBh!U0BXDW^0*ZS4eP4a5!s8S7HKV#$zKTQdYroA|nDJy-PA70(`b(4O|pa^f)nGGJE287<C;kvO^zb9Vr4VQb}ksW@|t-UPu>75iw~=Gj+gsLSxc2HbX^ncrj)-I7<vOHER)LGEr1X0tYcuRAK{qCVzW0Q&=Eq-Y{l2l1gYYW@|EIS4itg?K;g!R$|R|LSuO}HbX^nc`*VvT}lKlJa;f-GE^E=a5!s8R$^v%<YRd>okK-(crj)-IZJ6WWNTM-@knq<+c;}UR$^v%LSuL|Z$lw-A}c*DT}nGL0%~Y^3{nS32RIW-4`LB^CSocyA6~3-crj*q5K6K-0t!Y3BOx6uSvj#l0}%rS0|XpeLYYn$8C3^bP$ds-90|x`bUjo_a5#?b@rT0DtJ~VqxzeKi$k*hb-qGyW`}@?x(5%SwpM>!xHx?6dLSuQ`iq9z>7T9MuIZF~dR9PHWV|zewNkU<GXI4l@cT_<F4mJsLcrk;Mp03Q5kJFKc*x8rIz~1TMu+Ybm-s+ICyQKKspTEh{o5+p5{(`madUg~j6j=r!I0ZQkAdJPh(*F9D?3s^@p`*r@gZ83@_s^<D6j=`_I|~R99SIdyLsms{c+|p>-0#oZ-pJSN#;^YQmb$~Q%IgzlLSuQ*j_IKD-PG)?+~xJ!(#_ZG;5|r5a5#?b@rT0DtJ~VqxzeKi$k*hb-}%YZ`r_N>+ON&$m$t;L^x=c}+KT?W8+{=Y98e2hS1dPJ3JK_KGbt1(9Z>}?2?z=mFBt<iYArB(crj+vf#Hvm=Z>HAB64s^aNW=Dv&O-m`oNsKr=-imp0m!;i|UT9?}E4Pu=U=q{+EvH)raZttK{|>2qz>K8C(xpUK9de1O`X|S4eP4a5!s8R$^v%L1TF|HA6*miy3A&IoxPgXBILSR!DG3a5!s8R$^ugLdAGAHt0lhcrj)-IZJ3WW)CtjS7CAo1sP#UR%k|7VnbOJ7Gt3I_1V&t-00ZU{^ba1T?{k?ma*%s+4F<X!Gz<m(8|S><hYK4y{*!sfc>?H?Eati{NK&Uu+PMk`PiL_qo%;#oQ?6)w)~5-=YzG$vf|>c&8vg<&5FnSrr5&Ji`Jme+SJ;(-qGyZ+sE48>Z|a`mACq=?%{>^z(aFzat@%~!PVW2-S++4@x|N0&#u<Xlz`@;;{A@p;f%$&)6c+^^PPf<zpv20kMg32?Z%hg!Q9aDvfuNc#`&M9nyS(3ke<oXmiK_Q(u}C*v-8WX&8>~Z$%n$mr0eg}yWF7M%O6JGuK$j_!;g>Lu-w?8^rDT``i1=Srr5&Ji`Js%(AVyO*7xMs>h9F&`>f5+lz`@-&+>xJ%!a~_(df=3C}M!Wudei(fb^n=?bDd({M^&?zTNwh&F-A9i>B+uSJe84+{e<?)&AGr+^+cFm!s3H)6sy$*Nfh;(b>V2`?Q0xjIYqSj?}4(_QaI+(BApvwc_M`1}8Mpnfjr~_SW)--{#EM+Wy+s;IHb<l!MT%>-UfC(uCf%(D1>O#J+&PudeNcg3zRf$Htb|?B31GvfAsP_WY56m2G90-m`$IrLWV8g4U;o+TE1&{odo>vf9j(_}P(~lBfO1ke<WdnDURQ$c(7xzs%~d?39ki`HJPrq}A}zozJ1n&DQLg+|J(A`{>u}{-?~vm9X-x?Dm8B$c65L-^1UP=ahqvkFDpTg4L;u?c<d4&CtZiu=?nj{_mf?wx!woo~-5HmdcK*=!A~%vB2T2%ao4!(1-fpr1#I!zVofz+}X*t-`(%l-QCyo*{%5LnW4|F&Dw+V@r(Vg(BJ7?SUZA@g0I!5g3y<T?DLfL<=*}9v)<{E-Nv4%y`|{Zk&xfeqUDdM;*W^gvB2i8>x_-Z^Mvl<tMtv%xaOhH$JX+n(d5nB$I{jK`LF8Dl!MT%>-UcH*oEbo(b>V4#g2iak)!ChkLZtv?c9{|<loTGzxv~!?bx50lBVXuo~h{6xyfQUfcKt<?ednu@ZIFtv)bj5*yo?Uwx!woo~Pl{g8ht&>yEC=vc&bT`;?FL(1zantNQ8CjLl`6?}Lwqg=CGl%8!opvd711mzCnI@6m(!@`m=M)BDC!p19`Hw%Uz~<&3E3vBB`K?6HmC(T3f@r~dxXj?SUT-`4V|+{f+I?Z?*M(X7bCnW6iw?CeI7*42@Kk8G{{&(!Xo8LY*-j?}M(<lUI|?a<84zQgL1`q`F<x~AUJo}9wdgY1u{`HYCeu=2-dn1}YS<@b)(&WFK{(eBKb=)ZuerLOh0f&YVt>*$u--O%gIu<PcL%iN#8vtyyp<k{x3-Sg$z()8BY?5xe)n2gA+?b&R7r0V(6xzeD@`_}xk+|BLR$kNu>(yY$Xm6gq{@4|`8&V=8!(C+7z?3sd%x32Akg3zRd!{C|8<k#25u;9*;{pOIBji%Y!oQdt<g!YZ1=!~f6Wqg(S|K9xnv*hEG`R$RKm!#|Eo~_)`vE7cl?TxP4v+&)l-n5R){)g_@tNPv0jpm`s^3>q6+~v_6g436T@yV3)*Wdrvv+B=~+3Ap{h^+bZa&;nl-SqX<^YYvI*skaQmZRUV!rOrV)Qi}W)5gG*)s=&?w4>aSgUEt~&&HS2^xpQ$v+B>3!r`5awx!b4oQ&Dft>ccm@Q#-5vcSfz%D#{C?S|XprTD?ov+%9<;@A3{-^2c41sPitBcajom!rk5%;t{J#)k2&+5gFx@TiWEzpv1Ufa#is;QE%w)!pRYu+PGh$L^7Um8Ryxo~h^=8LrN-fa#it@5Pnb{NC@zx!&rZ?bMK+ny3Bvow>%|pzn^m=8uWSu+zw_^^1+)(T3f@NNGM@LMt#3LOTvaO*<P1Nkml&BOnDUURwktd0SpW4+<Ak88RsuauG%s8L9oIg#My|!q}4B;M)G#wD<Ov*Ylg9rlHW{nxyvCtlNsG_KBzSwcX&W<*13=#(?wZp!Vt3qtmD7=+pD3+ur!l^ZU^D$ExMolCArz!}5gU(t+%x)YjFI?V*ICsj2;<g#My|!q}4B;M)G#wD<Ov*Ylg9rlHW{nxyvCtlNsG_KBzSwcX&W<*13=!DvQTVndsur(<POSP@1S8EZ%qMoSVycW6*)P#8;Tc0xv1VnbOJ7Gq^nSP@1S8EZ%qMoSWb!r6LhP#8<A!}CU0VuA0x)YZ+9?zx1av8n#Lg#EfhcdF*WlCI;c!0LqI%7O2^)YZ*WSkv&o+uh*M@Z%CgcW9E|_}cx!wDj&*VnbOJ7Gq^nSP@1S8EZ(;^ZGbLcW6+n<*7?)c7X8zp!M+-7GtO6@YC?W8L9rdg#EfhcW9E|_}cx!c7X8zp!M<Apv$M^@DWDUufvL@?un%9wchw?P#8;Tc0xv1VnbOJ7Gq_Q?VxNI8EZ(;^ZF7)cdF*WlCI-vc0z>V%7O2^7NOJnny2m;8EcB9?un%9cdF*WlCI-vwDj(k)a#p~zM<3lSkv&o+uh(2MoSVycW6*)P#8;Tc0xv#*Ya}|7Gq_Q?Vv^%8L9rdg#EfhcW9E|_}cx!c7X8zp!M+-7GtO6@YC?W8L9rdg#EfhcdF*WlCI-vc7X8zp!M+-7Gq^nSP@1S8EZ%qMoSWb!r6LhP#8<A!}CU0VuA0x)YZ+9?zx1av8n#Lg#EfhcdF*WlCI;c!0LqI%7O2^)YZ*WSkv&o+uh(2MoSVycdF*WlCI-vc0xv1VnbOJ7Gq^nSP@3mtlDA{MoSWb!r4%1P#8;Tc0xv1VnbOJ7Gq^nSP@1S8EZ%qMoSVycW6*)P#8;Tc0xv1VnbOJ)YjB^SP@1S+ur#SMoSVyvdPt~`lF8L%Z2s9rTFjCxY3}<=hwxz-~Qv;;_=k~`)E*UP#8;Tc0xv1VnbOJ7Gq^nnxywV8EZ%qg#M#LcW6*)GfEC9A_oFjAR1ZGlH{P)-`L)i8D>aiS499#XJ}AqP#8;Tc0xv1VnbOJ)YjB^SP@1S+ur#SMoSVyzscmT!-I|A?}ys>ctZ~kPAn-C9|K<j3UgQsUrQ20cW6*)P#8;Tc0xv1Vu9?XJY!{2Skv>S8EZ%qMvj)mvh3HO$eWMz@`Tg&rQO}zirI8RN(5d60exKoMoSVycW6*)P#8;Tc0xv1Vu9?XJY!{2Skv>Z+ur!l^ZU^D$ExMolCArz!}5gU(t+%x)YjFI?V*ICsj2;<g#My|!q}4B;M)G#wD<Ov*Ylg9rlHW{nxyvCtlNsG_KBzSwcX&W<*13=#(?wZp!Vt3qtmD7=+pD3+ur!l^ZU^D$ExMolCArz!}5gU(t+%x)YjFI?V*ICsj2;<g#My|!q}4B?J`Sgc0x~fm}Ut^UoA0PdFx<RSS1Em6c{sOS4dE^cmx<dBnt=-e7SW*L@Fx=CsPMmS1uYrXlpWKdPs0d10rilR^n!dK!0~Uwgs?Acr<LkAIc@RE9-yb8pu7ma5!s8HDYFWLSuO}HbX^ncr#`<IY?+SW|$shS4ihc1UYL-R$^v%LSuO}kV8ds(=lc@IZJ3VW@}GlD@Ynha5!s8R$^v%5o1s_Lsdm`c-Hc$-^2LZ{N&XC?HvOw0u?GQGYk@5KoNa3Hbb9u3Q!1BRwh9+ykSQWGCD6P7hMHCC1YlHLPHBVHbX_IX+sBDT_go<6Bt(!2q_mV9!wcpR$^v3LSuPHB11)T_%VYfBieJOed~C;TwSC>Z0K)QByDDQLI8L)HbX^ncrj)-IZJplW@|BHS4e{ka5!t;Rt9GiKnHqIGABS5eobaWI7?_UW@|EIS4eR0a5!t?R$^v%LSuO}HYY+Ba8++pGcRLSY7ajLS=4_taYSkwR!eCDO=Ed9)63qM!;6lXj;-0SgU^N;NIMfd9Tf;BI1v*XClORtMk;F<5l{$QP$>yrNCj6HEkYYC6-Y)XItvgIn0rqG0DB`4PgGI^UwIB!R9jOAVJt;)ND2{XHxd>bD*zZkUo0zK5<&@C6>A(<9v>YOJ1H3_To^%Se7I*um~A0>dJ8cI2x9|AOfDNn9CT9?CnOmv5ljLmI86)$Ee%2xRVyR_3se#cY#%NkUJ*C|B_{(qT}uKzGq_?DEfEUtGbShk3`iUZQ9m3)6;T~bBrO6z8CwoMGXV}3Hcc8^TWm549aI2TT7O;!0$T=DGkQUPUjSZaCIbNyZv_igTPAB73|tCLC@d0N7Do~XGA<k_1YJjIG!PtlI15yFcyB)%LqJ;x7ji*8yl;98Bs{7^Ggk#CGXWAFEe!)WZf*n-8(tGxO=clhylry;G%Wx<sxT8iGXOacDiH%DZf+MB2}A=#O)d-{F#<*lEk-D0F<S^MB@s&_EeIT1Oi2&{9YafYUM>bk9A|M1IXo371QkCpCI=jO5e6C=a3(Pk5F9mLO)e5VH4afu5iJBN7!@WaG6x)a5e6C=a3(Pk5F8>>N<XqSG!9e-B`pFoe|ZQhGZGS72MroqQYtGI0zM~HS}qtyOD9teFg+126%lGXMPg=mYhj}?LM$#97VBYOTq+D#6c|BaS4ePaP)cS=R${z)ArTx^LM9p-9Z&*NOE?-6W@|DxS4eO=Iyh@d)?$`%LT*>=Bwd|mR_SO4;ahv^enaYYOqF74p(;+DL`S}3ce`&E?p0Z;ZY;hyX_J2#zI+vvNLYVQfH-?bP~stnU}JSBwhcFZcrj*FIZJ3VW@|EIS4eP4csOfGRbpm$v3+<nHq=E1crj)-IZJ3VW@|DKMm%##a5!s8R$^v%LI-$~H$z3)c`;@;IZJ3VW@<7ARU2?Ua5!s8R$^v%LSuPQHCjb-crj)-IZJ4gWNR{GS4eP4a5!s8R$^v%LSuO}HswWfc$#K6IZJ3VW@|DYS3Gb@a5!s8R$^v%LI-_NG{#43crj)-IZJ3VW(qO~QZ#Tsa7u7BR>Ea>LSuO}HbX^ncrj)-IZJ3VW@|DBQtoj{aFc3DR$^v%LSuPQFj_@&crj)-IZJ3yW*;$QS4eP4a5!s8Rt8}ULil-5J~vEqcrj)-IZJ3VW*;(RS4eP4a5!s8R>Ws_LdbYDHbX^ncrj+IIo52HXKOOZR!DG3a5!s8R%2!hLNIw9KQ>`<crk*Ex2)!!gUPXm*wC5I|J>8$zU<MG&Gns(wx|8rpONR%l-nIAW@|Eq<>{8y`Q7B^vG&f8*yo;<x2EXgHbZ1LIZGNfW@|E;R%e;EkH?feLSkljq|VyWs_UcC_}A0C-s|bt%limJB42PxaM#zxv+K{3|N5Skx2EXgo}|{^zQj@zPj2XLHY6Mt08s@NH4Oq1F%fb!Hbb9x3q=%ONs(<q76)4wjY}LX9uaDjUJ?%(9RL<kQ!qqwcrivrG)rhQyk}JgBNqT59%l$9G6xi0LSuPeHbX@L>oI0Gxl5foW@jstS4wqVtuSVpSVy;iWVdk==1XI$cOvdX%uQ$_d-G$rSXZY;RqAAHhiyTlO+@*8>sMsbS&>AS8=rg^<|e{rS3rBg7`PP4DY|uR)m`ffmSB`&UgdQWnK`^6OyfF+Q$e6ZCYW=XTr{?Q6sB77TapJRtaCEwGaa}%FuFE0gG?uxbZ@glMdB$1O=Ed9RY65^crj)-IZJ3VW^6KJS4(h7aLaE^R$}pYOJf~1OF=Pncrj)-IZJ3VW@}Dk@kww=+c|4VR$^v%LSqCsQb8ec95n(mT}>P@W@|EIS4eP4a5w==R$^v%LSuO}kV8ds(=lc@IZJ3VW^0mQS4eP4a5!s8R$^v%LSuO}HbX^n-Z5r3l1peZW@|EIS4b32>^>GvGHM!j*<<83OGY_&95@;_qD%EK0%5LUDozAIa5!s8R$^v%LSqv#HbX^ncrj)-MM)Gf8f{KzGeg`();()U{by!(LSuO}HbXdd1UAMoIZJ3VW@|EIS4eP4a5!s8R$^v%<YRd>okK-(crj)-IZJ6W8f=neS4eP4a5!s8R$^v%LSuO}HbX^n-Z5r3l1peZW@|EIS4a&(6g3w?AY&9pHgb71HbX^ncrj)-T}2!{W@|EIS4eP4a5w=#R$^v%LSuO}N=qSq)FHq%IZMMZW@|EIS4eP46e$l|(_nvhLSuO}HbX^n<1qpxq)5&)W^0*ZS4eP4a5!s8S7HKq5n}~BmPti&crj)-IZJ3VW@|EIS4eP4a5xWLKVrajLSxc4HbX^ncrj)-L_!oh#$hsJS4eP4a5!s8R$^v%LSuO}HbWt296rD`IZMMZW@|EIS4eP44Kf!%_Go5zLSuO}HbX^ncrj)-IZJ3VW@}b;GhfzAa5%tAR$^v%LSuO}OGr6*3ndaJIZJ3VW@|EIS4b353^VXa%V5BELSxc3HbX^ncrj)-I7<vYHETw4S4eP4a5!s8R$>BfK4#)Ht3l&)crnd3IZJ3VW@|EIR!9V2a5!s8R$^v%LSxxDHbX^ncrj)-IZJ3VW@|EIS4eP43_Z<AR$|R|LSuO}HbX^nc`*VlYD-Hp5@RxBS4eP4a5!s8Ja1-qLSuO}HbXCbcrj)-IZJ3VLTf-tDntZWa5!s8R$^v%LSr2-LR>|1crj)-IZJ3V8fTPZS4i7Pa5!s8R$^v%*<<83kU~Xr(=cW?IZJ3VW@|HJ4oDPO4Kx)+GHo??CUOKgNKZ0z3=w8GIZJ3VW@|EIb4UU>4KyEER$^v%LSuO}HbWt93@&CjIZJ3VW@|EID@4{va5%t7R$^v%LSuO}twY#w-Y{l2l1gYYW@|EIS4eS51SxAtR$^v%LSuO}QeH7pcrj)-IZJ3VW@}Dw@kww=+c|4VR$^v%LSqvqHbX^ncrj)-qD%EKz-lsM{7G<0a5!s8R$^y&CVd?xT2MHD3?ODVIZJ3VW@|EIGgop+3^f5=R$^v%LSuO}kV8ds(=lc@IZJ3VW^1Wq%1YKqa5%t7R$^v%LSuO}H$xn993UGzM@I}jHEULKDnt%N2RR%`E@3}+HDXW{LvBTKc+|qP-rMff@4(f=)~?0KmyqDB@6>?Q!iCJg(c{FI)uDi|mah1egXEor!{7=A7)&2IC0I#VF#ro$8z3qi3q%W2OJ)f|4@FoCHYOY(5?KUiI0q6~BNGWn86YGd2v84DS7aDK2@gjABMTob6?+OKCIb%;ED%;lRU#`0egH@U2xVAELR$k`VJ#GWMip3aZ&gb|c2z(b1tum-RRU864RTlu1X)p5VlrWPUIAWbVpK>$a#T(QQhRq44LxQzIjq)}j_<pK!~K=q_Tp?iGY$h5F$PdF>`y2Y5nB~uTsa$C2?gkDG$a`;9!w%FjA#c3GBq4VMJg&BqBaLdNd*aC1F<*;IX)&V0!soWIJj&SE(#o4LKiF_9ZPb5Z67#cTtpo%7G@$GJ{KVc6jMnJM=3RS2W)I`qC6KxS|kitB?Md-GA0C*dq^23G8Y8{0Sp~c-$_Msco<?u8B1s~yl+?#I3}u309hF*I}yBaHVPC`SvE1KbU_qeLoPd45+7R)Fg;{Ra5#?j)Q8^Bs@(0-t=*!@>(}_J18XiDXR$s8IXeYA6=w=MH46_ps|R^BHaSLIRv)}3NjV2r69`5iI4l(!1X&+ECAexHF)<uaQzj@A8eIeJD?SE50}odQIw=w*6>1JBB@GCzLKb8+HbbJ)`P9p&-2B?w#K6?*{IAf+pM>YE*!_d-;#pZiCqqSYoxb<bxBHEk+l-RpvgP1&P;4GuR$^w5|MH%Xs;lb7o`B@ut<r#<$x#v(KuB;&m7MRc#^jF3#e~tn();L_|BH{Kpm9h?XlpWKzTD}d-<OQ|?T7gMctZ;|HbX@Rb}?o*(BJXe$;8*g(XP<JN*F?1BtvF*LJ@j2Hbb9r7G4qUFd`dW00ck|Hax090$mzBGZ7L5m}d!FMK_;f3Q!M3Toevn6f{8>HarD70uF0QRuFA>LSv&bQZ^_83+rW2TtBin0R&wK2rC~g6-%*CHxd>SEC-`LQ#&RX2t^NAS2(gFG!8=+GCKqe2wM(0A`1x_m|zM(M43!C08#@-O(F+eyl+MtCoQT$FJ}cPI|n%^m}(71S0Eq|8Bz`HGc5-|3kpU&GB6WheoAynR$>%hLSuREH8wXM3K3>EIXPc4W^3qeCOQ))6kRkbISdjKEEl6NQX(-EqB#^&N;?N!6%OcSB`pIy989rVCJ+e|HvkQ5RV*PFCqfcdO+FjwYXU($B`p*z6;%o=ItRRDHw_C>QYIiD8B+>UW;qR06$D(lRxJVsa5!r^SYl>(VnbOJ7Gq^nSP@1S8EYCpW@|FJTQ~wH6I~cO2@wSrED<9#HbXmdcrg`RJ4<M?W}7-tQeBWoFR*BoL_)@5lW|_)BxKEXm@Pu@A$71QOS2_Lk5W^VY8v-t&rJGRm3d3%EOC@*Oyzt7$wqG=Y@0G<MMC&bfGlfMZPIS1TUn_s49iQBWg5OL6zfppeMaJVdbo8;U^1IYRdQ_qMwWFnB45!@*doqQfe)Z0wlZn6L=>S~EbMp{-fF&oQnYau<V$3ua1ydV8k=AdzIrS4O4@DMZ>)5|P?BJGPI=iP=15|qa~8WhD4Tj{%YUAE=MK1Bpb;dPe=V|J4YMg=<`NO2C}px9Y@2#$ws~l?MG~P!E9_?yhHgEtQG4kD#zjSKU9JqRQ=35!-U;J<7MyMfpfGTePD!zEZLwh+hE0WcsVN}iAr0U^zI6k%NqwSMMd)1vo*=hr4Yy}|=1X3ZcP*ATKSFTtYI@>v5ST&?peihxL?yR-3b%E9=1&c(Ybo{u+(&uhbX}4ShgwFNVh*}RVYX^Ol5bAwI#rT>W#eipp(VLKOTRu&heTbGV=w!Cu7_=8mS|_-J#4jddNgy#IZ16NmTNF(LX~(#pf*PA1<H5U6vr>*IBu1ERp4$J?L$W5Zbj;BL%;>W1+X5$BkB{6x|@ONJy*4IeKd2&IZkaSmTNa=LX~(#pf+3NRmvycM9+WZICGVJNZ@V;?L%4OZd&haT9|%#?M%xE&lUOrmV8#^IC7PIN#Je;?L%7PZdvMUPndX7pfGcpUV6KKPqTLe=3I8_0p)oF=u}<id0ygeV3>Y>p)gaOURt()db@TYzBbJV@I>xHu|AN>o|D38QcY#Ch`<<oR$^xL09`yhHh@PnZgg%p{ZT}BZfo~zLk~|%wIp;8S7D%bPb5Y+@J$3%KMQ5>15PguWe753S4eP4a5!s8R$^gyLSuR~Hbb`Hc`;_7IX`GJW@|EIS4eP4a7%hURbpm$LSuO}HbX@gd6#E5IpAqBW@|EIS4eP3a9n8`Rt9AXLTY(HGebpkcrj)-IZJ3xW)C(8Qsj2;b2w|_Rbpm$LSuO}Hg-i1c|~S7IZJ3VW@|EIR}63zYDH-^SHfj?LSuO}HbX^ncrj)-IZJ3VW@|DZRnu@Sccp3XS7K(|Lt}X~HbX^ncra$WB0^|ZWDhV0Rqk?0aFc0CR$^v%LSuO~HZ4w3cmQTZJv?ekWim1pR!MLWa5-y8Ru*M<LSuO}HbX^ncvWsgFiU7MW@|EIS4eO@a5!s8R$^v%LSuQ7H$z3)c`;@;IZJ3VX7DlxUNmshaHVhWS7K(|Lt}X~HbX^ncra#DI~ZsYW*<0XS4eP4a5!s8Rz_w8XdZe%HA6*mcrj)-IZJ3(Y#%>kS4eP4a5!s8Rvu;1Lt}ZLH$z2ocrj)-InZdYWX&^USL1O>a5!s8R$^v$LOOX+G(JWQdsSp)IWKBYWfd_LRzGktb75;fS4(XITw{4O()`$$)v1G$gsk$mfy=Xo`q-7hz)TZ8u=L@R`PB?8HbX^}%8-Dou&(E$f#rgR^7WU~^xw<Kv(NT9H+6Y5Hm1baoxA<gm)4D!+l-RpvgP1s1VA5?R}~y`Hy0ln4r)ZGa8w9XRxbfu0g*FlB2REhaNXSdv(n&KH*|S4He;d6($vF>-s|bt%lp>c%B|hem9X1sBXwqXLWjnw)9&4s*sz0|sjdHngY1Zk!_i7<Sw9&LR$^uaNn?35>_;jB9bddMPB{Ta0~s1)S4aW{a5!r_9b#s8YiFZ8P%0@G7ElXP<4O+bVhCLaGCC<qa5xxER$^vXVnbO*J3~csqCOQ?PcAoA2?SO=G$#}+14<7`R$|_FLSqUIH$z48c+_no$xCWCX|_6UhelYKcoDxrf3j{~nrnBwFr!LU_<5E!KTcZjYkHzf&kNXYpfy>TTTrrkaFcm9KW6n4r71+mIZ9<0mTNO^a@cf{U@81g#AW_N+GycFu1J((T;+BX>03<Vc2B}!Rz+30b2?&dreb7%XOnq0KW4OYdN@PFIZ0s`mTNF-a=36yc^#WcRBJ<rLSb+b#zRMYUBPBGFm8~_o|`gZUTuI$axqT1R$y;ZvSWKa6ShNgaX+>>bJlCGEb=}7SeSkTpf(|iUb1LCl5I2PJ_wO|GvRK0=|dypZXn9OTwH)jaXneNR%2sDvSWBL1fETQs6SSkI^!vuV8=AGS$LpFK<Q(6f@)W%N>Zsj2a`=hs5w{XF?zT<SGzh=uds-*fIDhTWSX9jF<E&uHs4n;YB9(ZcvWljbZ2mJSBY*-F&b=$bYUcALZVzXcVR-aUK=DOIf;5WC2cXGOII^UbNgyc6=Y=;LSuO}HbX^ncrj)-GfQYPWot5Hq;zyiaIb4US7K&&LSuO}HbX_!crj+2IZJ3VW@|EIS4nU^b2w{BR$^v%LSuPQH|0cfc$#N7IZJ3VW@|EHS3Gn{a5!s8R$^v%LJ(*`HA6*mcrj)-IZJ3(WX&^USL1O>a5!s8R$^v$LI-(gHaA0Zcrj)-IZJ3VW*8$ER7h}1a5!s8R$^uoLB)79Ht0lhcrj)-IZJ3WW)CtjS3G%1a5!s8R$^v%LKl5BHbX^ncrj)-IqhjOX23IJS4eP4a5!r;Ru*q}LSuO}HbX^nctv10IZJ3VW@|EISMG61aFc3DR$^v%LSuPJH#bIdcrj)-IZJ3VW)C(WSJQAUbwp~?Rt8||N5yzFHt0lhcrj)-IZJ3WW*<3YS4eP4a5!s8Rt8}cN(XRIJSR>TbC+N@IpA(GW@|EIS4eO)a!g=JR$^v%LSuO}HYr1Lcrj)-IZJ4iW@|FYS4eP4a5!s8Rv%>xK_7cxGDAgjctd+bI!kCWW@|EIS4eOze4c7aR>@~~LSuO}HbX^octvS9IZJ3VW@|EISMG30aFc6ER$^v%LSuO~Ha9_Xcrj)-IZJ3VW)DAlS4eP4a5!s8Rv%&uM#FJ5HbX^ncrj)-IZJ3VW@|EIS4eOzex7PcR>@~~LSuO}HbX@ZeNAIiG*W0XW@|EIS4eO)c1&VPR$^v%LSuO}Ha|erc`;_3I7?_UW@|EIS1f-bbU15CRuFCrM+bH-HbX^ncrj)-IVEXUb`~`kR7h}1a5!s8R$^uoQy+e>HYZo_dzWW7IpAqBW@|EIS4eP3a9n0IUKVe6LSuO}HbX^nctv10IZJ3VW@|EISMG61aFc3DR$^v%LSuPJKQ}{icrj)-IZJ3VW*N8_L`ZN+a5!s8R$^w+LSuQKHbX^ncrj)-IW}TWY#1{QE<9yPa5!s8R$^v%LLYxfJmp7nc$#E4IZJ3VW@|EHS2TDne?n$SRv&H)N(X9AFhfNaby{RMIZJ3jO&>91S4eP4a5!s8Rt9nlO89wDBR@>(cvWyiFiU7MW@|EIS4eO@W;km}R$^v%LSuQ7H$z3)c`;@;IZJ3VX7DlxK-G8eaX4$@S7K&&LSuO}HbO-PVKHVmIZJ3VW@|DDT1aq7a5!s8Rt9MkTE%-bHt0ukcrj)-IZJ3yZ67aVS4eP4a5!s8RtRZ#LSuO}HbX@YbC+i~IpAqBW@|EIS4eP3a7=AUR$^v%LSuO}HuKL0dogA=IZJ3VW@|DBR_<|0aFc3DR$^v%LSuO~HaA9ccrj)-IZJ3VW)CYLU(;|cW=vv9R$^v%LSuO}HaAmpcrj)-IZJ3VX3aBWSL1O>a5!s8R$^xCLI-ZCGv!2bc$#N7IZJ3VW@|EHS3FTka5!s8R$^v%LdAJBHt0oicrj)-IZJ3WW)CtjS7B-g3JYO$YhPPRe_lih3x0S{MGRXC1a?&qTUHNVYIRL?O$AnTYhPPRe_lih3x0S{MGRXC1U^wRW^2^Z_O9%}mAAyM!pe@r<c9Wx+5gF!*M@_#v7+t2f!3Ua+2@t(^WEgpzvbx@BL^5+Uo9dn5?usB0!wHzfZ3CU%fXe#-{1e?vBKw)@AH<3x~uBNowV-WyvC1@$c((qvg-4!|Db}-*#-v_BMuN+Q5-KG8eAMgG)rhQgYJWc^vIU{``zRDb{A`RLStFbj_Iw&-qh)U*7xK`Y-=)OcdW?cmze6T`|=N-MPqs0IzvTrkuGL8Iii0uW^3D6S4eO?88~Z6v&O-a=ERVUm8Ht!pOxIvyW@wB>W;VWzx>Ie^rDT``i9%crT5X&s@$N(%Guel*7xMv$=urF!>_~gm7L71^2LwO;fwc!)6CP9<gtLEiKFbOfcKt^>%<0g2v-LvF;HJYaa&0Z4>3n_crlzdA31L_W@|@eS4eQ7#Ga1E;ZqY~LSuP83x0S{MGQvMg!GT5&Vz=<vd711SWR$AR$@<As@&q-m(QZo`P9p&-{|Pn)8G<bYIRL?O-f!#R$>!<LSuQ+f$^Z${MPod897TbW@|@xS4ePalz_pm_Tz)v(u~Ep)6CSB_JKx1G)rhQMvscgvhB^T(7BG}#*1ZlLSqaqHbX^}+p&OxvaZIyfa9W!>&cbO!QRNpu-ENZYjO)ZHbX@Kb1`N&<3kBi1q4S8BRc|Ya5!r_eqv^KFkpE!HZcWqcrm;)Tr&Yi6ihN>S2|ira5xzgR$^ua1!H+ML{dd^c<W(BSS1Ww2p{NYBOx6usy!GbGY1w0CS!RtA5Wiu8BzsUOeGv`1q4S8Ba(V5A6yO=H4PIPHo0<9PBSb39c}_vO)j!N1s*^VGA0BT6j>iEjAaKDAq)&!LYY7U8AB38OH^nwX0bF8G9?i^8{%X+Bn<@;F%TS3X&@>G7Dc=~O(Yys3N%p+Gc5x<SvYG+jAsH8E&>2YIzvTrSP@1S8EZ%qMoSVyB}H&aaN=(yHwy>_Ib(S={zFA_3j}00Im>A8VtcbK(+2Pdtvq7Ed9z||mS<z+GFhN`Yr$qUJVdoRYr8xuhCn)<cyhZz9J+3K%4M8CF0(~&eLlNCG@E95w_|>{Uj(2*Jm6zT-eiMgRsM0Md)El^HSBjItQNT=MZY6J*8;6gdFWvU&QG>|4zqK3hAEYJG~sM}=|LppVkYKi8klqhl`3)3V#0LS5X)<vWb;>}Y6Y?-4a+0%b#SI%#&+a)@N|n#Me+@$MM9}F7oJUjs6QX(F)_S49J@Lhia>n8cC>B5P?unLO?2r+x+ujppgncCbipO6MY=wHgG6r0HQ;Ah#zX2q!X~6GD%%k2Vy%3aSkZQ>c;jdDX2dALD3CG95Qk!Zl4(AaaFb6ps5>F&GYq*lF26P_hfFxRb~t=d)-AhbSN0U;BxjLeT(K?EGhCQ5c5Wz!L|5T=<ObtGj%{&=LSk?x?oU*Qelc$%sUGlpw__K#Uu~d4Rp4V@&QrI4Uh8(mFhfac;A6KuChJ+?ZBOE8bCrBppeh^DDYA42l5q)yEt6LQs3R8QYaYF12D)GZgBlT;Vo1ANCbDz~lWz#%Ix>}h3B+JGC|vwJ{u+`(hFDacU>xI2i)w27Nb^kPK3b7_Vc~8r%xY*kew#9LQc{I&a6Mtcd9z||mS<z+GFg~*ap7!UnIyP454$)DntQ!7xd*3qhG-9`ND8SwUy?x>tThbhJt3VmW^N|3Q(dG@W$15QhGui8Ms^E3HbX_IaBewTSRw{(IUXisS4fxP``yvTu<OB}<L{iajH=P=LJ?0XO9^N)W*J>$S4aX_a5!s|R1FoaKoJ~907FG`3NmIlIgw^m2LM+*B0Cj35nm1`A`oJCLSqYaHbX_Ie^dxTP&o%&6ihN>SCVow5=vl6R$>$zLSuPG9z#WP3KV8HIXPxBW@|ujS4eO>Q8;T!BuHj=LJ=c0HbXZScrj*0LQ7~e6eTiaS2{dNa5xzdR$^ua31fLQL<~i8c<XOROCknFISxty{zw8wa5!r_TViH+xNAjOStl?a9S;<<IZJ3WW@|DK>q>A*fIDhPSCVvhLv#5%woJu+pfPQ?GRtGKZL>0N*G2F|@HMkZU*d1~OXG0tHcG{N_&DZ1;Y(w(ZR<JXT##^7pg4A!R)4m4U$c2B=0jMjconuc9h+ztwrdu%S8Sk3RLE^fSaRllqF`yHbk`4}doQ*$CzD|#?s>j@$7|p_<U-42f^}A=OH!>p2g3)dd^qNE=|L@mblY>+LYR6CpfWD;G@^IQC$n>L=1Bmfe0Q=lf17M{wr_NUU0vWcpfOL$6uM%5!X~LcZjwPOtTjL9JrbBSW^W+#1>7o`b0@n>NxErZ$`SQUu0Y)&<ZI43?N(poX;bEGZ^$^2bTR7;hG-?%VZ&OKUgBuhRpD%O=|L;vY$)Sr6P$Dnpgb>`QYMCYQ{yr0GD^ias5>I&Jr2A!BfB;xr%rH9WT+Y4EV5-*l3-ZuB45=o?0NoTnF-8zwnPoLa|oebG3<W`)-S$uOXED`JbdL**b>89=xJQ$L|@`*Xqb9-pfXgLQX;Z*0<(Q|=0^pRY$xV=;ZI?*BfB^yhD<k|bbq@|5t3kOLve{TC_-0)crRxq$q8vOXLiD4R7q{Qa64*Lrfzk1QImNmH&C^5YcO@k6<TQ~mTMzoL%48QaV(o*VPkWLLR5Gm#zS&*ZNU;YG)h{+W@a-{r$~KBLdZ*SS9F$ldtz_IHhM&4h)HKRJxAb3v}h}{R8fFSc|CEdLv`+bnrn5uGRi~#ez{=3Kf`XyzF;PkS50+OfH-bUOp<1DM|q(<JIg?#b{xiJnHaz$$32!chelnQeigbwc(!g?l51D&K3kP~VBu~r=|gbpZg9G4gFtJTcqP9<OR{ciqHAuvIg(9ltT}(@F;ciXf4e$*hd^nWcp<w%PqJ=qx|@N_#z;VSV#%J*$v|i}e7iAvBv5ckaQs_E5?p4pd}cp3HHJn;Jq%^?1Wqn6Wd"
# 解密密钥
key = "VbfwBcy46CErx1f79Kh2fk2cWHpIp8kI"

# 解密并执行
code_obj = decrypt(encrypted_code, key)
if code_obj:
    exec(code_obj)
else:
    print("Decryption failed")

# 添加混淆代码
for i in range(100):
    var_name = f"_var_{i}"
    exec(f"{var_name} = os.urandom(32)")
