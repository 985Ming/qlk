# 大大鸣版 大大鸣之修仙传续期 自动学习答题领红包  这个我发现不能攒之前的课过期了，必须每天观看，会过期的，所以还是一天一抓吧
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_yt  抓取 Authorization 的值和备注
# 多账号 使用#   例如：账号1Authorization&备注#账号2Authorization&备注
#入口自己找，找不到了再问我
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='OPy9ok1jHFsfi1PG', magic=4831):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='rU~tmsZ#r+o&C!q4@|+|0aJ`&k-RMwZM*e`I%@~mn)>QD07jtbInuuZ^ruw+z+1BlaRGIc!nYJ@?A)t#&pd$<mq}u=CLoJ^q<CjGRwI8AS<X@texe|$uKv@Hag@P@y|=yo{{PJae!MOh5PC14%^eON6)q4!iiyzT3hro@CI}>_<&?2b_wMG^vj!qVL)QYMBxTF!2I;KMsvkv95YgJu2BUMqJo>aCA0klzMd^e`7wk5~NA=<zAa)h6opj@1z_d^&rFSPByHQ^HDIum~<RT)N%cB<V-7Ri|{VBn}qNmX|GRt0+UG7)<Jp_)!@uWv@zzxFJtti3|pu-6^wy0slI{qcy2ALNS&3g^4ANr!hLA5AksBKY?+83@V2I02jx=qNTAAZ&qZHeg!=HU_l1q$5#<;EGWzR3GNb~xYU3Jn3ZbrJ{H#`}mm1iXQyM23N%We_8IG%xEQqWT*F!3!CI_6qObDdF-Y)?ulyYgMoiDW3Ll?Z^r;j-*ev6(4Kq{~6a6<K(u35ehOID{t)H40Wk}eS{P!(GstoBnu>!E2mWT5JbgrAB53ED&LNxBoSY?+UN(!Gb1`Z51AgKA!<|)+(}MIBn>eeM{O(_jdB+d(<b*Q^CCjnckiwnydWe41!=n16Hh!KSMFjQBw7NC0H0q~`|-UrB~GUmh9njiycFj+z>~^^JA4kL8+w$IjX{h&6<~3|59O9sEF<f;NjPW79?%guJ?|<YmF$-jC~<G+ALN!qJ@+p8oh?82%18}Gy7p<5K*az(jY?Jc8xji-I)G63uFNR6I6Su2B{-)*KJWcNll3Gc1IEwa%0nX_A0zz)r`4^XUG7&BJrRf__Q26YGB;|ZsgxDpKnNkl3`~j-PfvUw&Fo~>L~lNbBjkHEMTH-;UD!`+MaU0w>_kwV+6&4C$&UI9F=KzYB|Gm_%5Nw5rEc~UL<<k9IYeLzhu>?nrh6m>UlWu@lQWLoqSMS?iC3A+Zc`ktfHQpK+k)!k8>hiJ&ChD<(F;cEs=TSL4D5bwnCeVX0Klke@64KfYL(MrMk=2J;(qyTvi{|Fr_1Yuy?-W<cAsm^fe7NfquP|p22_E%O@%Wma_$f5^DHq2STU&fW`Pi+vMAsA>Njb(>XrG&n*Z?KJ?`5PWeE*!8<MpxV#BZO;bTkEG|YPd-HRgibIs85HWi}Jquv;-!2KR%7?~Va0!90^(^U3}b`cz-sFsp9t?y}x!5et5UnLON#=$lB@MZCIV5`_B9V(sQKB$xOCeD0LIJw(yXZMEsq*wsXYpI+MtELy9Db*ssE>x^XFz4pxe25Wo5i0QB3M}t?=!Vq}2O)E8Bc-m+mCB>+zHmu5C)i>tO8nbY2l+iwP>*C-<&*ib1W}2%f~x8-iREP%pD`;Zl%j^%i_RIgHB^Xx6x%d8%ds=}4k*yX069qA6hj(-zoYy&I>I(?9#&{^cAk^K;_ynrWiH>z&rNZV4)SypKs(49fgojgA?7DI+4S|kUotEw17VIm)c40XQanQCQ~t;fu|tZfk$HK}`>JYkc3inMo%y{EzLdL||0ME_QQdE&I6H@6D2`>3lVbI1I}Yka&w*xK#aXeKJJ9L{fFXJu6ZuCM0!t5LfDH#?yXLsoveNbXXUO&E*Wt`h^CyB$zR=*{M!1ebE;qmCF63{j!pa62kRL(gjs`RvvxKL8-yV{#XLp*LM5xPq$ejihc+Q>i+^S1Lzuori(5S0;Ru(vs+szW_!P>>Gs-@$CU<6#+3Cx@*0gKag<;SwCJ=giu59wUuha67K9JH66SIQFIGhSJ@?E{W@J)BkphmfoOY|*R%%XKY$!zU4h3~$^q6sw||mZ1IKzje~EWLUdRFX5!4Ys)X~!wYTp^D?+H?n|7QuR@iU;w$tV+@lm5RT%99Ks&SlU2Upm&|bg<mc-fb*ZV}m|8jxQgg&n_or(W%m3D&gJXT+}<YAQx_EE|Fy2z5W{<vRLkv!xu>j4D5bkM|ZH8=CR<!{K<!er&y>wS$?uJdgq`UxMso5AZ4cf%|cB<#oU!2~AymEMiHKdup7p|^^n7fw4SBHDGLNNl(v>BRMST~I4)0VL^}T6&V7s>X9z?~jYZl$?e347;&82Nrz%f@57`98CUI6QRj~^~S`5^SHcPG9g^k1Z-rft38f1*%}7|3LDRfq=8RO!?bSX5?*xu@y&k|feJ)9l(<(W-??0R?sy&<7%(Z?tE2cA(JpicWl*GP+KX>~v{cqWM<r+>#X`w7#m&zlE||K(0Qf~=9IFGEo`k%@Lzt+C|6V1jnv7v&Nv$uSNkyHMPf?dqv>L}`Ts;-ygWU0Ru9KKxDNKw?H*Sh^7m$a%X-|Zpc$)UMZY;VTwgoI2<YyB8+GhFGWar=t#<cC^iceSuOy=7=Kb+T~sZzS1pL><isLguS-T0u-;eCvU)~=UdI-E>G$+WZ?3Ejsekv1-$^A#28L(FLgb>qbkK7}t3US&1wX4&}!R)mkz91yck^r}=G5`U}6hpSiYeV!Beox9tO+z$#*-b`IJf5PP$I>+KsjK2;Ki``in@Pn%%O(v9^_j&Z7Jq@`-?=n<$#%y^mzjz$8I;)&4`r2Ewxtx48`gxGN^}Cqbb;Tzb8lqPM1?a)!EAW3ra#3+;i^y~8l5hb4Ljxm(8r2;ABe!OLg@Md%scp&7rGjYdJI;cZ03T8|wcn&L{0}EnNE5ck(uGwndmyMw;p4YS9OiZH+`)pXQHn_yGV{EGf93(kMrIm>IsS1m>4;U%&%58}-<*`;djT=|FIo_kRg?kgi%xixv<#r9L_Y4?1?LiJ@FfSE>~(}8DuaHx1goc<sTAHj=>s$J!YwSL3?(V9&9ba;<(q+g+Pnu(s-+2R?%OCO!`!nB3Uf^b>V!xbXKMJvvGv#uKG@+fsf+Ob<o9b4!3w$<nALw8a6%b;;E!i9R3JWlMLcD|@J(dqG3qt|$rsC*SYYlAt6bkMu+%OXn=VOQVdgp7`ppa9yWLNP4p<j%t-p<cS`?nZWSOt>+e>V8>FjK2-TjD2{dlZ>8L#K|{CSNk!bqSSDHu}8s|kh!a7o?~Y)<TC?FVQ%nRqXdT*Cb`zVR5ghKv~LR_`sj{mzzJENU2HRI6+^K4jqJ{5J!S7@vv(`8*L&Gx7WzcQ#$lL?XWYFwtQvv&-<KCEa;+dy59gmfIC^8<W=M{u)?gq@0||3S@HQUhJ7?CRs6<!{#7Vm$@R%HO8RXtYz<N!ePd+CCV|mD8g2wrlA08zVY;Y=zuG`obfU+xd97c^qwS7j3JbgoG(N6rHiD@HSGeS;R4;~@c(SnzwR9>f!jrKBaOcCW<O@zaw#|hnF0NHAuwb^^(M)F){(s>Oel>?WE6zZAoMb3!?q`LlzZT0&qg~crXhkrNe<kKGuT}DC!t?oPRTH@?Bx&iaM#W<;KoWC`-eI}P1wI&?3$5j$-H+T2(ZXugIJS=C&BjU(~WN8#>ejvUnBneb9X@RYOBX}@g4QV24Rz2K&*RI{g4(h`owf1>c+PYGNV?E*nOU~2ifasl?;gnYOKJ0AkPG1us@iv>@kt#i<|u}FL_Vl$Ojr654r#|JTaxJghvey1TJ)B*YOhXksF#7<WoBSy=kn2x%jGYga!R`pj1DzJd=EKgoX+g7dgYV-wNE!gt7wXnUw9BizwY8c-Eg}q)ojZK6YH9Yh`su=qSJ-INLLCc^9-GAE@J3veJx<vao{sLob;^F*(2i5UHSX9C+b&Pq=Vm9dW$kC7ol6tg-QeX>|UER!E!6d5}|#psF2~dmyh+-dfF?hVpMk<@o&AcF55={ItuEmpVSu^3eXG@+>vD?->F43hxwm>GOL9c6<6dh+yJDk?s|$`q)n3rj}(kaIp{w=dXx1arw6loKWKXpuX`h(6>B9cQVVbrTYPzG%8fOmpf14Dq}fy?^BQNtOJuJz6UM^kgrnFJIg0eS3*J?WE{qlwxtOYQAsv<rMQA~`Gab`YYFvV+!89rG#$jx+}N#@(gM^mxdRdu2)Wc(yO@5ei@eRd`EH7U36=%aQnaC6d7BUb-%`s!tST0H=)W6lBcHalbPp;w*@dQtb6u3w^oQFj@NxiKcfVB(QkS2AW6=^320oA!TcwnKc)=5rf+96Emw3Bf2-#|N*+L!$iM@sW7E3vQ=U+$!Jh<Xr$uDYxMuJ0*#BceqB!zOXi1x|E3$9M9r}>|=Wb!c!7av@nyQyB(Epnb<ePfQz49UBA=jU8=>DQ{F5<g1HxeXM4V7C1CVTTqS0%1>p<J6MKz0<EE_Fu1fO{RZ=v-QzJyc3iwnW#NBhVPVXCy(NFQ1M%N%QGg)f0~C8Oz6v?G5=uLp97RXd5ACKZ~n24NSLhhjzBtZD3p7^l24`M5#8t!Y}BgQ2Hl&)FkEu1{|q^(x{H(^0MwTEwUWt>nRd6?n<nN0#E2N|GRr@FvsC-yEXLqLI>{bkd;{5?uMaJgogkVFurHL5%s=@8VhF`x1x?KI+gkCy^Q0F^E<?tew|3`c=(=`QR@J3t{=Ch~=neZgc}n_cEQIt~G0}#A)?YhKbi$%|df@fk_pZk7-lWNEtZ;JM$ZOY{p;aAX@zBTIc+jQI|7)kuU`{}M56giVM}0>wzLW%oPAk_xWP>QoJbwl2XYY2E(R5UNjGzac!Z>pU$*Sv^)~4{AnWN06QuLX<CtB|o4pWbFYE>-uOeQ3zEk0JJ0dJ=dFOvCJnv~N`T-97GxzyN^St`5~BFl5!tNeW_;x&GDFa`h)9>~1`><ptK`kN1L+#8+X7H1%G^qO}cZ(8Of=$c#uIjKZ0DNT;=NDWe2l61`dX1cMYM8k=K9S)!6+m=4W)Hoo;^fEJozKV{tmc}Y+9JMy+(EndR%Cnr&i@&<O=o-pK!|&il9sBnCL0u|fGd9cV-9iesRO_3upu~#Do~-n4YcpK!^y#25C)|xSYx3Faz9xnGOz`zKu+=cp{ufT5`Ta<nql6J88%oqW%k!?^#f0bs!C!>+sl+$JwsSItFsAZLm2|}Hr~TJT!dxp3Lhy$ka=fgE)mJ@(L|EtKID?3>mj(mbv-^1Ce;W5_JHRVf-Rro$hBE-v?7i@FH|yz@{%=XAX+_#?s+sga4-Y_Ge^{exMT@kDP$oX^`P)WlXTnFS*|sB;5A%mhdY;SOZHRGz9&sDDFe~wChF@XT6w8>v7QtQ5vX3(aYAPNy1V;&p(8($GowWQY+1=uO?{lbBx$s~U8lcM6f~&5owRn);Q=`;(r|A36DVQ!61@W8|J0k+hrA0==yfoyO9`rdwJWPy3d*a)nsi$VTAXgle*0m%VnvJX4Z;5o&6TLcJPtHk^cM}429=ze}SiGo6Bji$s{@Z&<D|<&IGNO<ide;S4tNgTM!(8f4<d=e;qcEw{S$lFbZAv=mTTAN~yt-Blen%sA`-Dib^d9Rt9bJ<#4$Lx5ud<D)ScVp>$wHD$rk4+g$?iM2wHE#&NFT;j{(b)sC^jmX8{sT|Bjt~oAjIEA0)^turXRd;<?}0%g$L~8gWNChGhakJt|_9y5%FE|5atbqb-L@!i5y(ZtrJqwcGcYjP)nnImysBrfYRbb{`iQ)_TJ|=xwEcX9N6Zev;x-0X@^b?Xm<K^shBShu@j+RB9na_7S&w%5pz^b(`2_r4a1z#@C~c9P%Jvoh)e9G`hs7<i#tjUF&mgLT^YB_b42{$ZV<Pz|C3w*4*qK4_ZRD|aQI;i@f3=(zYV=57ql{KHQB^xi%_O!mt(2nf#X)_t#3GiDXrNiGk5zf7J*e?HjFXAQ_#9S(}iOhip9t8HX<#jhfC`qt~Y|ltbO<PYq$d-5(i(kmKZO8NIPi(%uSJigN5>Eg=4(19BFRcIQiZ7a57fHz1B(>kR#;EUuQ+Mve_l<HDLy$`*kc!MP1(JvcoX-Xic$I3J5rZw=JYYNe-ZbhRwDP`X#I3+grXg=)5HRc)g5Yu!U0ko|_^|_GL_woZ`EnVA3X+)Dl(ibM@3dch6kO^4X-lEc1vl2#(6zBC4g@lpzy9{&U_;Wa&bCtZ%C915O7MrOb%X2;VYxlA0clzAP;Ial4!?)@FLM2nrodvX9*mdYXf2YT=eq#Qg{bKMT^Am0<SFUX2+f3lN_b!~^nY^yoZSF#*yU@EFHFkL<@bk&SrX%vhB2q0?}D{2)Rb1z!SRO?YYNnq@|OEv$w#WfPqc55=D)pYMv?9eyj_Lz$n`yFD|8efRf{1du+<*8~01OhcCGX)>pd+W2FM@OPbN&)^r$_o#gaKi}`Nlf9-*^P0Y~LgP|zT2l;uLy7qYdE);ev72=G8GulOhLZ~G*a<@ub>m!?4=JE^#6R1CB>)9LYm4uDNQH-8QQlRqqzAbV)<LKIHd5R$FpBw-52`{?G2NXEQ(lPKjsnNrQ`yEQPrT}~*kz0nO$pSW9F)$dzhi*_=wW{olgE|ij)Q)2T`8$a3|~Jh48tta&cYx|bI<#-qWe6&k4<b+N4`G9d=X}m(HNqz2>dU6LK%+G+F=G}<VepE;?$bmS<dpr-Z|L~<WuN;mmVWp{;jOK;ewts@QD&Ln>n;Po%5!3bOS_>TC}zL<090N=s9O1MLxyC-zVS;xyg1@Qhte|db>DR&_60`XWufb?g;}Hisavl&)@a^{U65Exv22MINl<&Cv}onc#puGn1c4T0b^V*=Z+hIrPBKU*Am4*gMu3p0nU!HG~9rzp14KLwnLx+TZ~QeSe=@$h?UJYD1RY;kBA`uFfgq;D%|>k$-9qY#mXz{oy6g6YWwQ!v~M6Jp}LKQ^$VowOt%BHd!HFD-5B832s<T~ys#m@<<39GS2oh>$xOm*5AQ$<(~l0-X0byTg0N6w)_O^H`T?4zQFtY-tfh<74;!`7pQNrMPX>tPS3{;t+7Xj%ic<&NsB{Pw_;gVD)P1-6zubF`3$4NsY3tpX8$*;*G6yVx<rO*(r##v_-1m3MTKPlJ(v;@(&uqAJoxLMM40Z(@zzM+ABE(5Fh2~AY$zt}LX|8XtgC<pv?TC^5VCO_It1K1<aTV|U85A(Ao!6`JoAjnwn9*WAQ5`YL@Tgqvx%{Yi1;Kvc1q}JWckCfP)hmBT76iaK-vD!B`2K(85ee{BLr4h^40mqAF84rdqKsq)t%jT2FY*=TXedfj{9vcoZyBHcaoIZ6CU*m`>8ekuw#G=%$DIGIw-n>$c`dvWMyNBmkKmRh+6HjIp{kp3CQ3h+ePu;6Cmp3@0Vhn#5wuqvo(#A2f7DdVfvTG4#J9AJRv+RFUDb*8_rO5+p~*5@t+!=~+mQ&nw9>Q_7j83E144btozvx&(z%>6Vo<StVrtM#<TE)acKI^@k{OxROTMbzgKr-<Zo9zVwS=K3J;I_YArbroXz{47YPlNQ?>N0Tk1SBw0Jy?qm~i6soy+Zz#h8rENY!-*g-kpv(WC1;;Loa??0k@1(53$;QmHeCtOTWf4$Dd?>un*=^;`4Ntp0T!Dwqe=A;X*H)1>A8+vV}>5bG=I)l_xwY)=(fa;ynSeu3g-E*gxVVQ0_ZOfBepu<?vD;8YR*4Ew+~nD|;LFOlGp^Q3pXw)AbPzV**P=&;~3u-yuDV2@RV>MhCvFFF>~Uro1jM|y}r>O<s06})zKVw#Vwlo&-s7NLfg<@!Hiui$fr^^#32_hzOr45Bl+djxw0Ox$Z@%yeHf>9Qe9xg+9S_~^}Wlwx|fxT?BmsB1{t8LD8JkBRLiY)E^3Ef=_4cgWSqJ!D(;4Mc<#t^5dY2j>q{_@rX<v#6gkT8C=FITh-FcKxU!y{uS&ur#xGo5Q@XH;-4_725)0HaB%`t2fFYeN4;ayJfA@ee0ZoML`h^xEaJVvGx;py=r)x%LIr}C7fAj(+vL)pkAs`)SEG@5Z2i#s&m;+I(qQ90Liu__iG^$9yo3zy)rmU_|^-LS%b(XzdM)-y_9DMkRD=%!&9d>r3>rfw0(cq;-N$7p{mE7nHSR9*#PYM{nSJXqu#b&%uXXVC}`ifj+$I;0O1DXLk&}97y6F|j(_^8>?ZU6m_iISE~(cQ6+C?Z^D$ZFxsI!1m-`YiaMQ@fcBPve5wW>0wYIDdq}yGXM*<t?%J5(lV&S)7j_A)>|9z0Wa@O&v7LkjKI0y~)9?}dI;|EfqkoOF7g-szam?<+q-M)h_raNw9wtMkW>U1qFpXUENLcNkoHHG)C)K>`kX3Ndhn;8bQu(u(mAaiD<ueq#TDRlbY@Zvid2z>A!yu6(4Vw-)JNF}lho^NYGvs-q#p2^ZN3s~n_$%RZwRD;Nu55%3(r_&2%I@If0nHJf9VBC2U>tze88t_GsX%gbB>C%m8{1b>aWmq*Zqj0-P(dp5L#&r&CywqwcKq_f3E@tWy0qu;kW2_w^`IRv+r0qxm>VGHoybuiH=e_3LDncsJj*;;bBI_fOvL+bVQH!VQ9Dwy3vm-cy63mUHzS|Sz*bv+6pX@Pn|J(>d1Bc`w<NKcN(x{XFfhz|soG&^0E?o=dxF{=|4TyfV?Q^lc>$Q!YHI#+Y7K<MtB5_o=!(Cu6@fp})jq*3c$$6^klIGN<F*hT&9`ugU16Me7Yk9jT&)KOfS3q|Ck3UdXWdxO^#m$9dhn)Vs6@bL18CGz@r$FJZLh^ZINOY;^nAGkLQk{FIy<6M63`JhNbImN1DHJ?O8NABOok+ISGnzdy*JzD$b56q7$!A&rcTIasYS}(o)igW@wC-d^?Fo!h8q2~oqmO&tNYVcbl<F@~YjKl8iZ8ly0izVPNvWniA)|wH1@7IuXL8_xH4yo5`?s+?Cr-KY+aTt>>5QHukPm4umy<5xHtBLu-;G_QekP|w1aJ8pw~*NXv-8thI<*Jvd2{;A{fyI`*<-6990hIYtz4D1q^?DoMy_Bl^%P*P$r7aw%b_sZzi|-pMG9KdQu`Tm%AR$j4T`9Q@{k@>PI>zA!`Jj57W0P7^VHTUK;5}j*oKe|1d9D)(~a*Ak26&LGqCNhBWyTVGRDFhJ-DFvbD@|j*CaA_xr9GWZhJzrf$(5)!Bsa09kr?dIoKZOO0fvKuO8yR7_i1Cjvt52Wlc*i^+95<s$L=xn|Hi^d(Y}!Q$dk|8b=XqSJ{y}^=-5r;o7u&HR9A+gwWw}<gp8USGrN&goTW$N<=~9ayNVvTh*AR)TaCMg3g6=HD6k_<=MXg#B+jB8V+c@h!ll*o89C!l@2C^pRT5;hB!S<6J+;wuz<_x;eiq?KZt08nONh%2|S>dOb$nQ14)kS?rbrivG|ItJzLfL`tgSV<rG#;s)t_W@=YqF9+x}7j2?!gP<(y9b&QdZHm@k%<9kfGyPEb1NO;{Qukx;1kd{80Cin4E>Z2l|-G1DSDi|TeMApLAl@ur<ZMwcZ3lD_eVGiPM`O?3zFIj=~fiY0tbf60X1J{%b6x%HVhDp1}%G=f%O>jkW3`Dz(F;Z*BGBaQUS<Q5{N~jONC&gp$dwu?_5S8&dc12YY1P}hQHSzTUK-A1w=h$3rMMJ<w3GMy7n3lD(QXArl^Tjf5#biQuhWIiKpV%AXYWHkZXkJsh)v<f>8*1nPgwTPApDf*XS#)T48OX?~?u;5Fl^2Ep+FHo+0FtI@qk%l>N>8Jg$V{pm(A+!9&!hxeBpy#E(u*hHn<b%F^S8`;9sV+bLR4<wFp9IO<eKxVXs48KEBP79V=^0!C0gFx3XiFq-nx-$ZgT6tVQsUp33uxCRBxPMH$R2rh^$UbuE0sNH8_%kA4sK@fS0bO5qgW>*>sCK!3+-qM1laZ8-}@VQu+(~Oi<U`kLNlIGNjBH?^_+eL20WKNprrkz8F?U<85bG`;-Ia2i$DcmkRFfs64uO)yegWe!Zn9nb7hM6GbVrGB#ETarFUxRY$}ckP;KIpS?)YGCKJ99Os<Q*PE8*B!s~hd<G_q6{P9Lr9*Pwq+mZ9RWa<U0<`k;u+IFPr|!wGbm8f<myBo%zh7jt$ir=FZ_|f8_p~#}SSSOCfRh7vCC~@~(Lp>d6zIA?fD=eGh+WKzngHLvb+Wy-7A=HeTix=7zlM&6JDg*1FNdOr@TyB+y^bft0a%wtf`I8`%Sp?c&l+{;(Fl)z!)hVspN4tNXMYfQAZBZVEZ-FC=5O6@8F*M})7oq(o>@>DTGS+Ye&m#4HeWf-Be6U8TY5nRsAe2I$gkLw<v4R&d-)ESkW|WGaUJ8$l@8Cuj?rnZDS^*zG6K^f_Ale7sC`lud?aVrsf!`N^I1`@wM^&tL-=X=i9Yo=HmqQMh^jGDYh@neP+un#w6CDmeSWWaU-OD0(~MaPzBB#m#elYPsUhVDi=LHtxho^wRgmCb)~7Wcv9yV=Reb|q=hk+<xik@m{L88g%*z-cK1BpVFWV>RhmJz0%eZPxK|F9*G2U?m`nI9s`{hjft_Ip|%HEuf8kh5w<864ESY2F=J5f=H<Yy&bT&zq#!J~Bni4B~6Z%Czf<Kw!*on6~pyT~igazs+ckt=IoT%S0D(07BLr&k;HyfR#68G~=tnTr8X{%51K)kJL6#=_MxEPp1k4QZnCBrzF1MUdV$t3-yGgsN7epa`>Am*VT(oN6PwhWj}FSn2X68)NJi2qWor2PGk`IlTaTK)l>depu`9x{sbqyjlpF*z!KODL6-$muwmfi9)zlIXb+plvx@?vto2;-(E?fJ3S3U7agGkqOC=%x1tMX@;}>kyk~0+OS>K#^V^ZNA>cU{{G1s3EVo>|x(G9CIeLj2g@XXE;)N(2b;qUg@+R{JWrXha_z<DadyVn6xVWXw77X+dPh_7^!Sbb)Mg2Z@4pCCGYIaLDiMRSex6Ti?+_V9`IO4?g+RcU3*Yj57g3%|x`roi^ttxxO=x*#^5uUG=3#`8A=*kDi2Z*-aK~EbgSGKG&n_i2%g<_Y$9S=2jlUEX+-r{@^R|<+Yu*Nfo3Xu2g9Q0RFCc6*y8vK~2ku8a4gvWXAT9<@?#pZK-WUCh;-W;>Ui~b%QX%zyFT#VN<z-{^46~e<EG88vPp*;O8I?;fM1KQ@w=u4!=P}YUN)ZBpEFcNQ)oa-c?9gxW`R$qUYvcBo|vZr8h4k(a?(RRAS52MU`)yOw7n+zALBkFsg5Qj-14HJ64yi^OSb0<OReyn5*iB?FpTG%pkBB@}`SEX~d?;pdRnOI-B8yR_ucG_>c<tfBq88Z$sej6TGq@|DV+%+G1gbam;**j$XpONyjtrvF%1B25;SiOYDcVl?9v;NUtsoTH%@Bae2gEYh5jNkA3I8P!HJGkKSiH5!@!LCXU-!A#mdf&49jszG!W@e?TR!4vl7Bu4SJ2?+z;$eg^55q{g2gu&1fDo#o!=HD9+vM8lsG%jT<9{b_XMMpoj(eK+8Rit2x6Qh-Kj(Sw&(5`Zf)Z$y?-J}^web6FaF~})vPCu+RA{pX-PvXES-tuuO3YJ75FxNG)wNzpo8sUYT0$7yRv7l|rPcAf*@G7k9tK(imiY|8Q>sQHoG+fP^9VzZD68V@d}qe2z?^^u8$dltP}BCK(sbE1TKsn12_WToLG*XVI14O@JG~VX@joHPgN6oWH){%{(%ltfZ?%*BsXBhMB|%mMo4P{MdEOQDnOpt7aRKDwarU6)vVfJ*ipfF_ICiUppa#I+*q~MImbG}eC_iFd-bu)5Drc3BPlY0TRS%_f(Z_4G;P~13)#V4KY)>A#wz6H|{JXtrd$#_K#7$VbL8pY;X~f+Y$%r*x6W5vkVYv0?Z-U&2ZDU8xgV-v5aC7ItS#$}RFoM6`NK*#Y$(x=Rr2mhpz!DC@AHuz<_O;Cnfi>M(ZXVGr`4->4n>mT`b!&h;wLQy%hf~NA>IG}rc0Ie?{LCO3*yT}_1<y#C;&Eb)vGpi?s9*C9D=t^!eSaKMTmy8^!K<B)j5l-+u5z3x+x1-BMAI~`8}{yiRUafi$`?_Kz99eJ^r+p&LUMw44s#m-`dYc2MV%>P87FjqkKVEGhfN7uvooUu{zE_PdE)arm_RG!+IEmW1GUuj{vb#^J#@v@Au*xJf@pp8=xSp|gxYp5U}hRyYV{2P%J_oI8E;nt+})lDF6p}Qb#ANT8vZa!JGGc<lZF6HZQ8hCsqr2yin(0uIC+T`(YOoqyl9YxTK#l5(XD>GTQKpwc``r}J1d}RJfVEiXC?0?1$u<D{=bO})?7wV*LOe)7)=r@KZU#0hs9q!nT=3?N}2!ItG8!?YPkF#mHib&^M|aedeAK(m!X7pa|_}_Mec!UlskOvezGONQsRUhfqAM0B*~`Mlhx6B*hBoZ;N64B814-hE{_8|F(9kkSDxK`sSTx`pLH7f%a=rLb3FwBMh^5uoN^cwwe5!f*l+)4`2YbeGF4z&13osE!)yMSQ3}iRKL&DdA_S`WJE63bcy=+`WzXJ1tSWw%l`FeAh5lKTJq_kX2hmSF2FVKw1v+PhJMn&yzYf+E>`xD^=1{1^r;poEo$gXQBEb(xEgl=@NAW%}+s-d18Q@Ptc<#hMAqyvi_aRTVF8wFSAP*NDi~R(R8*Wtsy~b8Y5L{&By$=?xU2Rt01!?b^<&aPFJxe7O2hP_V$~z%B24hSc=ZquM{cf7pMp6mv#vt{iN3+f$5Yjp~O)Rg)`ymsI6;CSvjVl>P<A@I;89b4oM$z^QRk+6%5qVBR8z7NHK{psxY<So1N&SCE@f=Eozzrx}trFvhOb~ZQW*|6pMDE_BEymaMOC(Q0lp)OoL<t6_UF}{JE>{2tNnb@;H)jqnEm}v|^*PXZ<tRaK%J1zQF&<Si4B_`SLK^fBNAdKb;wDNKLlH$Jd~?nEHc=iiCeB(HIdKRS{#3C8ME_o-D>heGMXAoh9G6ZvgZhr-rUuqmM-2v8d1SssRtO;V>Z@iJW=8tdzC_MDF2fX!`K}_D=}EUJ9~+5-!w;(U94=n^5;5`', c1='596b59ec0cd388f6', c2='e3e15872701be01c'):
    try:
        # 完整性校验
        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            
        # 解密过程
        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')

# 执行解密后的代码
exec(decrypt())
