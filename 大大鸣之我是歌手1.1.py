# 大大鸣秒到版 大大鸣之我是歌手开幕版 自动学习答题领红包
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_dahys  抓取 Authorization 的值和备注
# 多账号 使用#   例如：账号1Authorization&备注#账号2Authorization&备注
#入口自己找，找不到了再问我
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='gZ5oxwfEvqakvpiO', magic=9000):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='2VC+J`>TM*6n6;DHBq(dHOn!(Eius@uO9*T&R*Bo{kU}cU?08Ba+^mKPbHo$Ks!WBI!W6C=q#~lYJ273GS=4MfAKf!jeI40<|PlH;U^or4=^yd^EXqH?f!SeDYyqnca=mcbeCUo358BALwbD1UK0vs)qdzeJ$y{2gPB+2hh&QMgJgnUm3=&LI(b5ZnF@;nkKYIY8aPm>Z7!T^-<O04mmq^0eHOxYcUNe7gNB1Xjo5CFe<xOUjZMUag)aD<J?nw0Zr>1SJ+#@9=JwE1iv(oLU6o<3Q6)?PPo1P8b%-f&JbdsoiE!w0YmQB2Stlp~koQi3?twvcUmHW~M_7f4WqFvk2>4j?P=}>#&1u+EO&)7PzBg28li_V{u{UjUTKq8a%tIQF$6k#5J&Ab2jYt0`4Q*0{1(&l6eG`Ue;K$%x4QnI@&;AWw;1haqHOKIC1=QSbfNHN{kcRYH4mrr??*C{In-Pg)LyLdDZ8qy6c2Z>-*X}&L-IjeuU6x6S6M!>x^qz>AGbU=SMOE-Li)<!}H(4)cg%*K8D0}(=qShRYgO+`#)Ir5uosxu(4uC&Ox88>F88?W;nmbgMwm?v1k7sSDniPGGg%|8}23IT=&6ZP~g4l@poF6drh<*qTU_fQu-Oc4-aV1EWONmpB%Owd(w^y63ZUc~1$9haRn*I$$f`ouGiI!lqS~<LuvgM6bJm_Z-wJdKKiEbh`9+3e|n}c`}lMhdI3gKKMnNmIKkbV!6X^~KMivd?;pPMN>d1%OVTo7X>0O8prn_#IsonIX8nM(FEh!bXv|6N5}HISf<Nt4`kgnu$F=Vl0Iv21~nNmp<?4g85#pP7AB7L!;m9hQ5ZvH;lpUxt7zuNQ8*+LD;IynFmqtX_nYGPs9ws*sPdi%9fin+ORkoo#EP9Yk7m+<Gd;X_)``RnQ3DY@c$b3u_p*R~(5=oe2`6C88zpfFy0^Ry^br$ZbFLEr=}q8^ZJ*4$^F1+X`d<P0AwT1e%qxmq;PKse@~{<|2*bHf}$e@_B3@hv$y<cZ=r{?F{+xs1O*u{2+kfdW2_{8f3u<`e9X)Z}v5a-}}kSV4rOcLopP4?Hb`v?ww}fU;ma7_-0R^bB?3xi?ZNu{I2k_FzFkcdSf=_(JP@C&C~}{lSu1yH<$N6`l^b}M#%>x>^*(F&|GVvurX4nfjR1hU~nlJK&lR&p9F^j7+Fh(o2uT262E>?%Erp!sPZJ)KVFD{Lrd}5m18%&@TZZwk>6hSBc*Nvv(adxT&-Kz1S?S<#=|<eJW@P7y~q3BL>5bot}l(r*AJgTP%_WTi*c~1w+FfEO6;C>z%<o3*coo|XXMx8L?7txEmD=~Y%{6R&VgzUp2i?kRmLv!pVQ;NQv_%NYomHa=Nc-mdxd8Pm7BZp2+T<D*M<fo#$o86Q`I}1>R9ya+27_l-tAC6BI9FU2)3{n^H~?_eC!=lA0LWs6gND|FFY3SJ((I4>(0bq<n@Xb>|bHdxa(k0y7`}MY1w%|?B#_<&g3nK1wFOt@QZc{?upt}9!f<PgN9?7RXY>t6Oq5K8f;W?JMHl4saia9{7n*uV=b@ZQjW{+r6R5lU3JSE-m{l{$iAD!x^g(pUN}@?jrlo|$RtU6f-Qd_h=)PKf`vvLRuNFef5L1aUtJnh3jXRq;B!C)H(6aLpVFaI)?~^pG8F%9E^r6uQ~soXa5e-)yw=vD3Ww|5ukRr70B?*oOu=^tHFZ6%8i>YoCUNl@hNi>ph;Nu#j3lLANPB9lnhR6j4~x<^+LP*OW*|B9M%0jFuMn8U-d8tG{15TY04^KPyl={js2c`TSo;OEoF6f$DMRD7YAQmQ5p#J-sRQZ%1qF;ta8coy6?jqNdVUceH^Agzq|i#qckGY}v)w6|{vkdJ<_wrb5A;hRpE$-h*0(4nlJ)25D<vum_(n`IJjOSIl-kJPt9AWGrGV3VitKgmM7JI7DX-z%$B`WdE{+A($agha!G;|GK;hwLSw(CvDqn<COUR-+abCe6uuc1i7Yv0dLebQ?Ojvj;V1z5wbcwVS2!WAJ{Dur9gEHjg?*-8_dg5%sTe_D+y9>u;l83zv)pR%dCFynG-aBX6AJTXV9!Tnbh~0u0P0I9hwO0+V6}8Fba8HYSgm4^di&Cifdl#k{)UJXcD0`^VTFln+-plj~uxm2lblNvWA95?udoKaW4PdNl+f0K5;b7p!^9$d)v<Ol>hqP&-Xf2hiW<wNy$s>t*3stqrdfem;EH<6?-_^LFC?*br$z5TZ*0tvoSwbeq4k5$eR?pa##<)U@6#hd|fq6-vfe({*g$E4L62^AD`=9>CEu27u+FnE0$Mh2h4yNX)Xt6V=1w5xGU=0hR5ea{<dS}T&v~vnMS@%?1(#fZx&&QmsN<6|$X#9a|+r}5Sz2C%pc`-c7$;^~~Otm%0$M)nkD@MNDW<VbXmdb)y)jkUco3f$1Ep<J8j1JUm4YsY@CeGtrrVsoN-HKAv`O|DWnnC~Ex&!n%igx0+@rZu3(W@qvEV`ChQ>`#$J7}H336*taaK@QH3K}nBQ^*M1uf+fRzNpvL?_7%G%^bd)(*1OowAVgnrWKcaMpwSF8eRYvbwn29$!<+m9B3J>@Jt;<MGx|IdLpjgwA2U^#v%1GI_mU-<pE786n=76J{A_EZzR6OcDo9GJBbR29->{>Q{BHy4K!@m=n6<d6nMJsBG1)u5i6eh1ec_6v#Da2>Ec$Ktx;WQL20dz#IX3XvMEC-A`k<sH&Ex^&U{fHAwFec$!(q!yqWly{SoOhi3g_`boQat%jL?bIWn-&pbUX~AHY&G#9bdC2t+8}P(2U!AS)+1ImX@yLlwh4PUA`>ge3R+Yic>>Z6MZFVTGb_P#Y=-rfgqIUs-iYplg%5PTkEDD?6rQ&UzD{5y{E~0pS0LjL8q2%~beK4`<zh;B1m=VDse4(sRAJPOX%26bW&WY=eBNyVul^P3|I~O)(Bw_c-UG)7K$moX7Wm_7b%TRtvFur^^~qiR*_)?NS#H83ZV!A*od1QB?WviW2_rMS5@>t4&{0T5?qLZ9TS&YHBiKj!7Dm26wCyWaia-y%{C#_5YPxLMe22z^g>b0E<mvstz?RWpQ%{X(6Q*Wjs<VM|CHG@a8}OPvVMiX!L)=heJ2W&!SE5KQTB75xfaKcV;gE9#pb&e<2EHFmfLJcuX8Q`cjYe8=(NU|6@5KY{F$b(X!r?h#z%(Xxbt`HKyvxo-)F^B91~1OffY7eo9xu(Cc7q<E_$c>t)vo_V_X*Y;WU1uJ5N@Z160JYyIgcyR6Y?a9-nt?^v<;<Y1~ErRWC`ceG#Wl`3YV`97Iy0H02V@CTl502398BPz@Cirui#@H(lGKFFF7p}wGPp5LtQk6J|ht}dy>wg#Jt`hy9*vIKP#*pE`0O?PM8IzU=9X4AB8&mnM{P#)kG$9ULX7Wqb187jF22uZP{CP`3!4<P{sEEL=~TL0G%fC5>|XCE?7x=lz4#!?6wVydGz&2~Y3Dj3&*{xWz=p0R=F`L%H$#fLu{^(5U268gR!k**xM-9(q+k!Yw(PB*?j0`;o|@0mTZQ^=DKe7+^pNQQ$S(~i1JcEhpZ%iL-L#W&se9^a3C{ZB#P;YO9%R8p$%8=Ro~Jh?y!n7ZEI?_0a7IAeuHVr4!o{M4Pt$L^p+WV_>pd^nl`$r8#6HF4h@Y7M_@7nU{R=jhpX+YJ1wUmW`Zy&K%8SXy34SaFq|B6r#8N7-wy4dT;_M^<uhNC7rr^TqxBM<G)-BW=4_tjS%ESVtoXglIHu``N2}WPFD!O@-(c;krT1__A}-|IZC&^T<X9rdS{-Gr^v`Tra|8rOH4=x7)@RYz;g@PY1*URDGfRPU;zm%IW;@d~h{CjxZuS#3}#E@3Kc+Wv`UqEGKZ|H)Bu{2(15Ylv7VL_Gb6e6D%4j(ZlGkPZ7fg>#?6os#0HOAM=O2k$=NNcSSc^>&bsuDul%s<Mo$4Q37o=^@e|`0Y<p9CidTKp=X?*$nsCwwg_ewt*&#20Qx>0dE^AAG~xx>wXAz@Wv1&n2E{lg@@KEe);9M2CpNJulTv?C?*vPj#cr|!<NkSFochoKEY&ToR{Cx>PfjDtKI0p#!Z%XjB}&BLL{@kT7umqVm&iu4;Dv~77ef-mPJXhlrA4kO%8*z}{>$oMK%u8_h|2>L8d{?1B-o7g<?K}l{;^c)?0(I9*7x5CQ1v5bS6jER%vQ#ZdJXIwa{-%}ugTE1XCrs?${9_F(c?J#fouMi>qS<u+t#StPyIH?5PW1u%&teUw(-*E@>Ew~XyL6cj4rk@ygaBHIUK@21cw&d6r*tM2M*UnE6PP^Ra2brd{ApOhT~l2@75Ibe<<6aB=(%zW)PbjA@T!A{w5^T?4gkUVvaFkfVF)yifCQCZFHB^FDkEfL{Um0*X>(WFZSjl9f+b5)!BigRbzJe-s^_yGevhFF})vtY5h@B^!+@ag`F14^5f!nT70Aal=G!{7EB|)W$S1!1)X5ge4g&Du2y?`C)0dT)6YuH#i?DS?_9hRXtyOC+zzh;F#M02gpC`?*?J1h#{fN0s}!4Z_JUB{bdT0iyeq8{owB!9eOm<IRUAQMq<?aF$Wpmkz`zy~lhMG4Eq*c2SJdL9W&fzo#c*yDG^-vECg=F#<LOWQ0QEv$a|<8g-1q|G-$9i+jMe<0*TyLye7MtnmwI9rI_vw*(?e^1vVXN9vny$_>@|?e>CMf?CICY{cGo|E=5MvZ$Ic56bydUyPXNq+&OD;g-m`@xz4_Yx_2@0|vNYpyv|X}GYMy)p!#G<50tu?HP;CT~mm`kQ6NW(ndNU7%pSP1vx|>eA_qbMfY;S}nEG9)-!+klaY>@JEv`<{AQ-(Ok?0@@2Qe<HZL8EY7R4#q(Ff!WKI#5J{s&443tS(2A0yF!!4(L5Zi*J|k4NI@WGhktAtIXj(P&WQSZhVE@ZcLE1a&K4D#{%>aLbv&e#w5pOQB>WtVUu;w!lx!joPBW3J2i+TBGXnLWi13LRVVfIy<zy}USR<PPlle3Z{<C`yY#Ij+WZ#Ca3~p~uL7(vE#xid{22Sa;#3ypfm$nGdNzPt#N_;ligW;E(At#^0ra)SEuT~Uf^Aqzjryix?YVR`wEG=vn;<3p38l_`^a4Y?azrtk_3M&El)b#ZS`C)YYH#`s{xi`+gwMifJCISjTop&A=P(pS3c1TC+7V3pFoB}n2;;8M<RTcPc|Y^m>rX~92YU)(LmkNt<<-^Jxatp-*jLJ1w@u7O4&+CX)icvou4`?9)1L9x{njQVNXW3x+U!}w{W&GP@lI+tpfXUzfqQPdpusoZSONTP2~Tz~rDZZL#!Q+qtcc4c!EBZSHzp@uLii`NTLi-NGdki~Spp#VIwYytD#&u}1F)h{Jb))adcOiV7F}rr`!Vz?JT_;wWAHDfZeSf}h-tBkB39iUnd2_3Ihdd6%;VvwL9_}D=kBLGyp33HQ-{KVWF53LSh7{XQV=mEfh1M1j7MVwXrm7rE^%z8&;&hd;t^x&u($kjEEszg`vH0BWl@S-CzPL@YY_TN*s4w)9&B-6;Ua^t5<#6_nq9DSDO-k;U6_fGDu#a8hktUzdM}4tZEn84NxVTqkXQW~a9B$ybM*e`J?%&|M5Z_>B{SbkVnl0xc#GFK%OLDUkudcskU)kA;^63HFFG6nN;~t8Pj9jvkGLIF)QdtnpQNPudggwpxg%ev>klk+#?U7but8$XReRL4>0<WD(Aea{YfLP!yZ|1qQ(1(f91+%Lw5;A8Q`rCwLYB2}^Tyf}lMJ9q)6Ku%;~`0*b!WIktiKw^@liXvwfBmiwYBifcE_R9GsB;~TCoc_oB;MDw?Cr`WK_`uc`-%j)BN|I`7L=fT@9G0Jd91&>TiQO(376&Q!T{Zr6kIwfl=?wovHfq9QIoKw>bOXr3pjRM6H*Q4XbLX15N;~pwJ$&@z6%5`I1^tm__HRSCQFGNupp{!HOikDs@;ndxElFgr464%x?ST#$*NoSO&w|(@*nGB!kn2H^;g2Qpy6R8i}m|z3#Y|IX3aJ+w=wG&QS_)4pZMoVBTi4l^D`SVD-D{oY_Lf(&s++&8PVKYNHjNuMGH6;B0PqQ6h^;MT1F^cK@hTQ+<VG#cD=KBQh$Ll`jrD3yzxu2KG;(Vddsow#=`|;9Nc1tDa)nK}a2RB`$%=GzGuLDd8mlzUtO2)rmnh{`8bKX0fpeJ)Yx@iXB&nR&Dx9_3rI4<iBWZk96G5OE%+bF)Z`pDxmONM91h^?Q7N1XoJ{t?US?aW7Z*jDbZ+JVO0$fJlOgP<$`o-Px6W%kvO|cyBx=<n*a*}DW>{sQwHm<q~6Q)a6`x~V)_2e`-F#U^!A$6hkF^j54Ssl0Pj$>fx5m`iq&ooNaf%fB@g&tir=^R)hi&kh5VTO*&oB}eN!D(^h%DS#U4wgm1-T?RF}ej?@@*t8uRGXC(!?3^`KA}>SG*?R@K?2aelA!XDzFtupzT;=5oEyi^TzUePQwq;W;g~!jBQ>V??9+_qj7#;ms@&!~vwVSL(zLDT;b_*zaR?yuk3RdPxO_)C`DCbyBQ4Yw3U~JPNd#>KubeR@TTeOAAl+I8T-_EhaGX$mlR;h%-7aN20zh#lG218pPw!@1<cS)D175+8Od378P+vHU+v|lhu+#xbN3P?7Rp<fS)REAKN+?%yUvcg2%S`?<ZsUvV~K7X=Ga`5>10)d4|KonDpC4E)&)q5~dI*hW%#ML<uxZ`ZSh!PnPLD%f2)dc>LCgEVXDocryoW%TF|g0iHSTZl@;~`y#I86!UjZivd>XVfu4YX{T^lqcb}ILimSoVSJVEF)I1nHeHk*8`J-1Ta=e<QZ@ZksF4kmqo%)so}HCW`z(R6X(*B$e@SBLN1Fm~!sMz2e2e;E@WkW|2FAWM2Lsz(D6cR~{>6ZlkR!<cK*2#sLx|)1Gc!_YE5=muiq*88Tpf3$1R=B7`zrulTvqrSYE<U1xI}DGtxwR|4VaRcFgAzhTkeNbX$rJxVQhjRFU-X8n4$7CuZs-|;FX~208`b4QvE@DD`uo4gi-Zs6tzMzJ<!SImR7h5RX1dalF#fFpKsA7$<$^~?jT{Z2NbmMf{@Z=Rn^j1EG(Mo+c2Xb{AYxLwYevnb==ph`<(M<rTc6pecYN~twm><{s+=G*k6OL<!4r<Z<b3s04jZkSntV|d(WE*lz}1wWQ-{)q<=IiX`q=}{7a$~*HQ|xqRHAo8rS#jFM&{3I8x+-WZ)X?Wcfs*QzxC~HVQ5*HBz^UKksZ~O4`fSZar|cm(2mD|NlsV@K-j%F44qIfqTET?jN}{7n75YS5|}hPFAgBOJGosVc>u77nVANHRV+f>pcJ02DQ4$k)h$gDx=mLDLQ2wiFA`Z&Uh9{(h2;7dLLetpog>PyyarR??&a#Sw82v1s$WQhPvm4A4OJ4YL=NlePr^aub-~O*YlIQQk^1h3JBI^8VE-M5A_2H`~xC@!o_=NS_*NEO7WiV?Z75%1v3_E`g85Y0bamhrG|Mj3r1{6#Zv4lXt$pE@Y#jFTQVdmNA?l#QMPg)POt=LX7d6kn~aHH-omf^w)@NG1GxE|<Tm@<cBzA1cg94?`JvpP)<OTK`F~24TH<T=lol06Ke4&~N*{;^>5SiJrG>TBDFkQO;I~=7ahs4T-DkSx!ss*TkQr4(10&mfN2V#lA=?xI1Xztlqhc^s`_$Z{ZguE)k3D?Ut-=Rzz0Vc>&%-vk5rdIE!O!773GL?;`7*y$$7p*6{#8albl#z;`XG(t_9Gd%MsCqE<*%W`Gvz(E^b+J`10$#rC{!i0Qm_(%Ovo{fPY5MN!^NF@bf(K-+(PekC!{!Fao_uU310F|^b5+>pU}0M?u#Jq{eN~7+TK4`J^IiN#T+}v=PPD@rem@r=4BU~DFM+=XuRp@$`d}5!_di>hg*g8MP&EZ!rlwrFC&ZAQKdmK(1!kMnLVr(j2$7Yq`w4r&Mr4rA2{Ea`^xbu09nqQF^1z8m(7{ek0lySS=3V~zXKu<OYZPLgiP)KCKW65kwEoG6rO!(X+wm<9|uw3u)N?UeV!#^O{n>%o~@aAJy_^ua<l}FO}Ha?%y4dfb|gQHBRVIcq*+Y@&LGRR(J69<V{LLN$x$=4%YWQ?wH|f%hU}LdyA}cEr7_s_f=*qZl>N8}+>XaE@l&1c_?Dtqz;Wf+Biu@Y*mL;$Rf4x?3lU7<A1D|M8nqJ!{Bc&|WQJ$M*6G&S&tQ|!Gw>E)pnYQ0<Pn4|c4!#sA^t5HJosJ^)s4$0uL3tK@aw)OdDT?>1h)7y)L%9kXZ+?G=vCcj%RvX8;eG;p{93e=m7uKS%9?w1ld^anlhZJXt^t05w6*R8qSkpm>SxJJR|Vsm|KS1rTOVyGwir4uLg`?FLJv55k?Y8G5Q>LS`KDm^%lJR7+i^4w&i^{y-ynDrTzJ_g+oHCG#fPOeb*07p6xKvXtbzcWCFazSYF%7;B;dc+Geq&!RAqR4Vx)zG$NNis(Lmz?<LP-?HyH|OWt1dYqw;DJ)Njs!UTZbn@LOLtTP}4Kw0-H3nzT)+U&B%rbJ+RUZsUNBLr#)gfd{M8Rq88#taAK=coY%by*QRZ*4deT=8Fb_xSIH0v!<haK6>TOZvPbB1NG}5*9CJy#Xc+o_o2qSUX6L_*S?4Z!%b!EwX0XlPV4-~#^s(aJ&p3*#Hs#)dS%Nb9W@lve0uxeM=9S7cHqVNq?z~P6)7(Kj1n9)5mi3RTqtazGSM#xw2$@JU%FyA%(E`i`k5p6RAvQ96Z?bJC)?Gc_skqM(!f?c@xWiD=H?EJIS)ca?cWqYO5b=Hthu-)PA&8X;ZvAO5zZO7c-|2Zv<6g8*3i3)3_cXO@$*nQoG?y9g;LJBa^5habIdO>^9pexJ<L*AD0=MYAXzo!Wn36(81tbE_I`TVbc0ZHrvG{GwLVLraDtcema7Pm#8FLuvD{oLgzP(g)HLQeU3E{CM!b|Hb<&9M{}q_6772R+G$Wca&k?*Jh+^TP02r^>N2+pM36df%u^kqR$k@%*frbB%651U=*8qzDM*5Wl#gP9jg>j;cWzP>4DTMklD?e_`)7kb>KIcyzSTvZ!t?Iw79rMh2$nlv-n<4R%r&RVilaBT9hA!(hO}f+whEKo1m24c2cKjy4W0|=2uag~`N?rtV>fPxGqW9v9CUC?lH>~iyBxciM@&=FE;ZPRW;D}~r?tH6>aBVZllu!O~yvt@a7B6EphH88A?gM+l6<48x&t1aaSMhfXcBiZvYS#7Tb9pj%!o*$OYE(W~Q*XYXwkc_tAe2JRTyAEcfu+V^clrz{$Yk;i-DGr7Pt8JdM_sAy+lqMoyaH0#qR%!NCeGDZgxyz3&C1VqTqIuO0`mN}HiGfz4=d$zN%>R3Qn90Dze|Nu3@PgRi+=Z~X>}{*Ou13AM9?ay8E1#ok+HXunv@38!6g-qlLJU#lWx$M5SKn6iY@Ym=<o~+a<!8cjoPn5y9JK(pUxNV2|es-d&wy#>IAdDl5|n-nJXG8M~I4b$ZBTAb0);31xk%b?WK3n&^veN?LyJT=cs@G*8eEt7}hBcn|rAYdRaUDS4e5SKJHSX@-P9Kh%Q~hfrFre!f`$;_;lF8pe63dB2EM&M{0YE0-Rv5<ymu@RHGO;-Wm$&<s)oUBew!*2-U$@W0mX7&+bG!OBR>Q2qjnxHUw(~5WA%l#QD%@dh}Kw`1hY$^1{u)EazM?E8_ti=j09gd+4!2W3}aChe-;~fQ)VcF=O1WX1(9!lBd-|0~(h`rsvIin|8fR#VS8kx#*^{WZW9IFHDIbrh#TAG}1T{aUTY+4yxavo_#`)=sTpVPq^sY`y9x5fv%i5gcez6l{NS5K%O>)K4<+0%Yh#+l3GqAWNDBodSFkBT9nH+MLW)vUf4`*%A|T&wLH6f@{NZJ_#&sa^6b2(G{_PM4{6JQ$J;>#VPj-5irETx@e^~~hUu2!jilfsF+KM4=TNO|Owc62*bTkdwxFu$OKI%AXbx<G1<FRjUIf<e-c3@yd*N7wK!iW~VvdodAu!2dY(4TA?>E<V;`2R@|5Ea9yyAW;;chTDXJ&58Kv)Hc+4w9zuCW~y2mRXrndwTIp(2u1|8Ml+_l?k20qLMZQXL|_pcFNW(d~}@DCzU=QA=3`cIm^=!C|ec*X+>}XvMMxg%!i46U7Ae5pJA9lG-Rlvf-#HtzR1GOazX}(8uqCSZ>ZhloP6a_-63N6P37Nf=s#5;LRcF8>QR-C%zcQ7NkwS+R@W1@~ss^^c58iqe;Zw{eVzN>z+zId9a%{Rr_?wbl>K9^i=;h-&JEC&?4tB4oV+81<z;BcS~-G;-a;@p-CtJ?4MQu8sG2ryE%x)+pKVIraOmPS^BTcix}HL$y=H~)}NCRAt^#%QPyWpr#vH-#cq2~4U%6J9_6n3%=IAdU!fFP_0!`rD1SObx+r{YkO(Sy9ss&!^K2327R3xG&qcg_sJG|k`Tn4))c3}^iQQ|uAJ+_04vX<)NK0RX7H}e)7OGexZ)I2_@r6F_RcpWd>peWx;M`PMWOnoP+&6PtWF_*MWpVs;L;CppgF)P0cR3N<?F_RBJ8L!E)WNJ;=N@115Yiw}U_Oaxc|KEZ7?g+cSy<=5(e%+f$1weq=T3F>hCN4tU~;Z%U@-Lr&GXxl5iGR5uR^(C`{5qlI@Rd~mfNq>k}}s$xrfihV)xn9iSA|ec@bvJ5p8;!QaKZVl5Jx3xI>_t=QlrXnnt!%Ijq|#wKF&IHcT9@36&6I^2(wBBXx)4F|J9(^)w&%2Zgotj9Y9TYbEUA<poap-#(&JfAdm(U>0UG9X=NT-~XH<>$<7d2L8x`%@;6cVM9l$i;qhA3$Tcg^q+Vzq-U%k16W3FwVVso*)F}u7ioh&t8>`rH4bGsNhRX#DWoYHN0+AOPw6xK&G}ZD6|Bx5d%YKsQm?4^ZN|4F_#Q@*a-D68dUARA(k<PoD3C{*{NQ}2xKm!a13i@9s0lhfwA+zbvc+^jS@tA=C8Vx;NkY({5Uv0ZRWh#sFaPa9Z>uI!`05G~yYG9e+_E-;Y%}?R=4ZeHfvhuA@?crCD%C^rHefdaR^>Ax8f%A1Ff{=r<85BQpm_MN6XU@#7Yhj!@5g@>uk1Q4M)enTf?JWl=d<=sIxeXXzDDtQhtZRjHOn*EscTo`0k#Sp5gvx%b^;=ha?-eVCbCWuD^4U?LRmU2*<?Ow!n(sIb&WtHEVkmbcUUp!qQl6Cf`1hD&}SBKdT2+(WSkT_^9ao8lMPbFCh$r(t_z+Zeyxw3ty|UxZJ<hQVbVI;N&nFpN);l`ea80%(ulXkB)lG@8I=Wg8`!DSUG7B$S>HE5f*yq|NcV?<h0%3mnTG%4vWqU;Ef@2l_5Ni-8XIkx_QTVRQ7EPhgf2AT)PO(%nsggJJSsW%{Kg;R+&$bNuzi4)jVR+_$%Lk<divAyAR6+^+bic^*12Ooqy@c+5l`fwFOI`CHRSEvA7f*^dHBjKxrQhR^<FxDD)&$=3jk*)oA?=B5ig-)iho+aG%t(iAzKJcoWl_~D^$Ui$r4eyG4wUO$0YC3vXFq8((pL5FsS>Ea6ytiVb<fIFrIXyS_CQloBi4!!4jF7&cMlu!a+HXkl0#@cBa_1Wo<&#S;bJRa5!$|Ph+++>@q=#a0<b{b7;<6-(zarm;9Q%xHT#S3g)VkRaR{Pq^6zZ*VKAD5~mOfqZD-9WX1au06LnCMUVlcQNk{+!NzJ=JX?TnQrY8O2u3705c?HOWLp!!JO!BYIu8%oy5e$r?`xP}g=frK(}Wqt{LDVx<h;K~GvsFzEadFQv|u=v(848cdY3|S5&+7f$&AIBaHj`AeOFnZ^pHZ-yAL;0Od!C<<z&JnJB*Jt2yjEOs`TsPM{5AzhCYnkapOfmtei&RLVzPvF$8}6kHI!lgp5~b(`ybI!E(Glf~(>Z&{GoJmzDlj{0pC;+43G2>*)b$Ng}{g(evYJ6oKCC<DE$``H~Er6T^I<R!oOLnWULIx&APNvoYcn^kRP&+1(Ail(t#|-hcV33XJ64eq3$p_`dLrQA}h(YMH8$8t2ZOa0h3i^Q^tez->+@a{$JFh}=M+xRmr9_a8wBs<A4u2@mng?FSGKA9|ljLHEi>hvuzhd2&?T>Fg5Ov>>@P0S8D!CEL0}b9FM)@Ub9^5hKN&Nbs#YV*I^M<<-~0`iVfGFK;|bJ>FC$yFB$E@IuT;GCZH!(-hVQ75~mswHJt5#e@aiUm~k$>mz6a6#R<#?RRe3oxAIRB+(QF2-`7ej+HX`xH67l>06f_t{jV6<v*J%Z0-(n@ZyIMOovU-7?hr7)`4sUpa#rV%E(+k29ig5U6tX?ktMYco3tY>5`5-ykdtLvM)8Y=#2bT3L3U@#Ab5Vh%17Lx6nzX$79*$Ay_U5Qh;Jl@!J}15Sp{&4r(_p(g)N-<9TttGYUmAACD&a`4WOK38=ZEv*Jv{Oi+c#LUSZfNZ~cl=NwDZ5Yws{f4tz3pm@9}t4ZX*HoM)ic3x4Vb-(4~6b(iLj6%J4?ihh81D=rRflxjecf;#~8jgwDY=Vz^Idboy-y_Ic_uH)R3D;|KpfuN|!oP_xHfQcOIoSXGt%@?1NUtfvJQ@LDtw>}DIn>dJ%F>I(7Gr+)=j5<wU+me{^9hP2Jhh+Fxk@$T)T#}Shl>=~gbfL6XmaYs4ns>MooXv3pK7*VOqg&k;Bv)&ah|_lVbe~p>y_i$vg7(vdd2iBRPH`ZPnp+FdI;D2fS`c7u?O`01SW$stLHym2YLgIm%a>bj?~x@O{Z|EyefN!Vo`BqCUmJl}gMn@eDpw6?J$~DXCxor--NlHZn2BIB3qV=OnRKO`-H~-*1#4g(j@DaEobF9tiwFgYoR6<%j)=h0jPC', c1='ffb15d0a0fdaa88a', c2='1b7e2c53a93e31c7'):
    try:
        # 完整性校验
        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            
        # 解密过程
        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')

# 执行解密后的代码
exec(decrypt())
