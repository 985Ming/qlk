# 大大鸣秒到版 大大鸣之我重生为富豪 自动学习答题领红包
#交流群 ：1025838653
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_xmly  抓取 Authorization 的值和备注
# 多账号 使用#   例如：账号1Authorization&备注#账号2Authorization&备注
#入口自己找，找不到了再问我
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='UVp31cvDXRAVfXeI', magic=4103):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data=')He*YlXh>V)i=kO1Q?LR0;Wq|#r$9+w{Z$3&C47RIOzmy5X$h93|glhg?jIQ+$x;m4ZiC2v-6Aw(|r@7cLG6$G62Uo+ITOaw8>zb?T2h%vGtLl2}_(??2(_hE)mGb^&m7j6i@$D%i0?SELWCk_TKqJmOiHn3_~Y>P;_yHGcS44L?l5dWJDK92UJ`oG1YqDP@l)j>HjN%ItjK8cVctqSl~kBOx>MNL^6UM8&Pr`PM9rOPVO;JS}5Kp9r@>a{;N)m{qAZqxuWwme#wIN76`wiVO6gmWS{2g^<>x^y%@{W=<(}8Mi{23XDNIwPLswLHr`=+)LII$H(XLh1XnsZjAn~WKsIEl`P4f@-rB}r>x9;S8!=UZ2X**T%Ta7xQ^Zp#3xqFGH%?SaP;5q8Qd~hjG0Zgh^>#ZCQndHn$H!<qIE-{MrDk$sjvsd$Xi-tyJ7a9IMJSQn_Q<C=GkxVlQZg<I@0m2Zz6U1TQkcG5k!OP$w_RaHQ!JO9XiEDV+CAhk(=^=51QmHxGek_KKD;#Y7Ob>?j+0D0mpU2-4q8F+wq|=MA5$%aX1?oAJ}lO@E=+{#Q}-|2d0kXUBOUJeF$Y#c?O0}5>r>l%TMKD3=g&Mt<TWomIb2-hi~RO4Mxt*;OyCZ?;M7k&V@&w>HS{i8d>o@<b5TailWbLW;7C*|lu|;PRrzCsD^Fw*_U=wb7(m<9OjuBhu>3SK3%UC_8n{I|99=pm+e~8F?P+PY{?!3KY;kEP`&`EPF$w%W*i=D;Dvk<7#~P;i4rM;({ZQ3}BvsKJ)KHpFA}IO#Jcu`pVYXxER!DN?XE_T%QGoJJYPRbS=2~l(wrO%IE=r`F++Ah+`zdcH4OqJ3R^}*(tUx`FRK`F#B+qRCj`~DRYy~VwGajz^+(^tQT2`-&Yfm$c6&!&0F^{&2%}PE)+$d#mRN|($FHJMLepP3vPomw0ox3xd>cxGn)hm5w!(6p?dS8blgN^=bZ>xTSSa^wGsyMu2eKg&FgoIzdJrOpISc?F9VXfSwIW%xUpD#5<f>2rGYtE{f`o&lgEGYFIwiZJNgAaL=(-B^nDU2SNcYkr;HG{ehy`?21%6@q%x@PwxnrhOdgG5%J%4u@$1Y&BXq2DUL0-GnRjVSN}6zTGX>`@a(snDgheODkZ$*=+!O{_>+PVjzH65rJd-VM0BQkn)y4>~U0Vw{*{&gQbq)k$|>HW73_o$%&dW5gh%7IgU7VfvGMUFpt;TsX3y4PJLrEwp+<O~ci8l>z0~!f)-zjGnLWSCpjo&7PapmNCeL)Q15{t92K%d711!W|c7k_=cCo>2&FIsTLe*d>zaD5TvCcA)!x*{)-1)yt{BMha`R|DyA9gY)gQR(6E@kDevVVhDur1fv&ru#=#{#RE$kmaD6CBlIQS4#8uM|S}&yn^`Zs{4IqOyaCbA-Fijc=K=#ihe(GYL9ZC*u(Hy2AO+VcNnK$qRyyu~<En?6J{<Yd`^1$eEkh2gC4XT2vq2fwovr9>HN7yp|UxCVz%Y$teg&>gH%WD0dH<D7vGcH2A`9>?Y&UJFVb|E0qZu%{Q#jqw(F$()S3p51Wz9Pr|(la4@&EZy5(I8JZo7@<)55FC6VFM8%L>r`FazX(pgtRMyr38EI_pkrr;ho0h(11`y8`wZ1Kr^9s_GTlkrv8$!T3{w<!aQwaNkhYOYC$jb&=xA7FUM;H8^w5wQL-wG`|?EdZwH!JkknN`wn_<;?e_AuL%u@_>(C=vMV|(`;RF^xtwhD|ukrWO_`I(YUAw5GuhL5G;<gk)>ETi_(r2386T$PBjVquYqoC%OxvM$J1=_>&ljSLnvb@E~0?RCsF9sN+XXv?!jd)I=9~<eX*vhfipqQ22Js1xLpB3uHqPZP1xpVlP(ZILk1Rhf=)F{QFqa?s9gc2oo1037UvTOqV0|P!Ja}zkzMZngUQfN}g#LEw9Yf=q#6Bjy;#%Am%)CN)JdA^k;YY?}hP`dbh?I(20tW9C;f$x;qxOU*v-&MfkHOW~dh{Kk8=lZNuTr7CIs1Rpv&r%o&E8#UnL$%s1--wX$Xa>UzvKo6Idd^4!<F|_TrNmIi7mAyZfl!HznZ~(j8~|wY3H4m#7<3~*(m*xKMm1=zJ)jxc3WemxNg^ST5o82x&ffC1<68Luh;#a!I{q}bq(c6K=hdhy_VB2&Iu+QeD7A7o!*>Gh;eizchWenT-OZE1@uF-OtpcKUPUke`Zs_CaK!ybQ^0z1>!IEF%6tbJhS!o6_?;+<{qyR7^(9+=Q2olCH4HAkJQgV^JBruG>3Ao~S-UzQ{Ekht_t*_jMERO9N&3PU*sc@zPdP~HDQZIQ{;uC`ItyHzB769Xa5_Tt2%#9&>?=KUvkB2o6!a7f)8FNSyM3)e0fYo;JvNdxA75DF?wh$=27OR9OAf}_DH>XBgD-`pKiWH-v`q>v9zaWgv{EVJuRJBhW9>>Z2=zLsUwS318$P6H=gm$&w?`U`Nl%NMs;ig+^j*yYQQLlI@k5MA<GWWlzShEq}B%x0O5b%PV2~U6e5pmLD_&lj}G2?*f#!0*WzNW*P#0g#JB*vgawDX`iAh{+Cu@K7kZ^|(sQ>oXZe~Q_<@KB#-f8ti&6~^+|8?Vq-_f@<;U&gR}E@sGADwqW>0)GXOssiMw6#`2OJT+zV@65>)wY$|u0RHVsGZ2B0_Y)$~n>aduFPQ;pd?wDDizyEk^8E~Iz?1N)m{9FHzW_TP%p4ub5g=~}z+KKk#)fXzEery%^Z#b-HfzCHf;yqS@t;a1mp+N(WX4~*1@PVRzE>;}N{zfPXIv()2D7RSo}y5YR}qQOKM%Yvb8Kkr$-@T|{q^^)-fq!@Pc_I;aj@h#|B_q(h6ESQr4yw1t~Y}a4=Y@k{935ytFSh@ilcEK!we=$)gnb2%(&!U#;!c|t>@MAM11u87^x)@yYjr>7=t3{;PT%b=<ooA-a7dA+3zBkiteRHgojLlvJs#b3yUhp%}hNBG=>P^i9LeTd005G!maH#(gP8PfYU9szyxEaAA0tlwKOAp*D}FMl_`3+>aK3(Ozqa{k_Fj5ul`UzP&j=ad&QV0P#_d~0mIy!I@*Dqd9^_*z@WvlKBu<&X+qWGPEx1v+dLh^RaGrQy_{SDnKqlH^8_D7mZrd`*(StzewaQKO;qc($4+())^7W3VneW`(KioHB8P?(2CE;(3~x?9@&*IWVl2)0N^C+vryAh*X@_2+txEEO&>s#*f(~CE>QC{CAQJN9qM5Sbd*vkGjT$HK;&TX&{*^xa_K7=yeTmX7n$+<Oi?muIBGmZzJS`r62mA~0nP0AN#kSt%yif|MsjpUg?H+k*rnd^;tnuvH=!xioS%B?T2!4*l7P4&XPvL{0COavGZAazXQ)GS1F3(N>AiM!;6Cwy6^U~Rn&7_y91Bev>tMI)#!Y7YVr*ipXj>Y@&oVR61Lf3BRF0*!L2o~gnIOJ~15}1Po*_gu?w$?FyXW3c~B;FN{QTuFH%3D@9$fe>tqiOA)Wdh>5ZaAMX@yw(!@D|bjqTQ7%3XG9U`8p5w&RJUNbZcm6RCH?e5(3ra7KY@d2&%;^!X_w+t?g3pf2lWH-qN%d;L?dk_?~>Qs!m0gejrN5)z)Nqag-#Y>ZK#-gbM&MK&Y86#k=MaCR`D@IGT|ES&aYy0v+ud&8Ry#_8OV?11cB1$_8BMHi*|vGD*y&kSn8Ow}P;|1$sY-)3K3OA|z3S#V{e#p-*Pmkl>^_ClF<s1r!Wz+a(ef7AQHDmf%FTLvF|5yvo(JI)RI2sxG6cTGQ@I-@8&~=A2)d39JvJ|0K1r(W$|&xX_USJG6YZ$fvYeMY8yp5k-`qI%g^N*^1iMKzYF%+v=_ei@41mMe2iQ8&VVH12Yv@K?s_Q$))$S0C-c=Evs(y8m&w!>C2&T-O@$3i*n_|^O)L>g|t6)rg%nZ+cujj@=hRnF*ZCx%K?H0=w@M?`9WZ~Ux3RW*3)BsR=fLK?bgZ2th4(*-M$y5>wGFRR<q&EN-o}!nE(DcvPx{Y7z_o|L+l$`FJ%#)dS1H7A9k=k#(@3Egz&-1FeN?eG1JF?PiFo<AV$*3o3w<wo>4%qL?-a#sS)DH%x@~Utweipg~tXi*|pIeIBVkIFp%<xdnkeM<w|GH2b$nNnFn3qO4edBQWO1kp&13<vJ6nnL8oljhV10GZYG;L&K6on_<bi0<C}#IWyNzua{`}BVf|(3py*i`c7Nels~3{JYD6);-qtJ<k&M$RuM{qA^+HjBe^KuFntGgs6Iu}{_Ub9#QQJ6t^z|34z5#n)Sw9_iBn&2pn(<|4n-Fj40G_foGzO=tcP}h_{0!FyV*=kj$@Abm`GYK&m<tcy*EVTj4Na=<@o#TJ!P7iDdDhYMPF=8A6yH<Zq$g1SM#CXio-xlYd09XcW<UMv6W$eYjsBdxv(w_`vO|y1bf1S2%>Og#dWH<9>YtM;sKT3%*y5+umhv%C{LE9X&)2H+J#kJ=%dKu%FiP*L;N8a;xK;prdwW6Pw=0GGo2M7OeKv#d9wT4uwpuE0p3jnq1&k7B)s!<xHTZ!WY$eG5qPrL0F5*jH#g&44hGk%kF@x23O%)7Dr_3h+sZyQDlr69?3q@W%6ERgcP9l77DeJJM0%L5dl{BT%k^tzt((G?-O-a|;mI52!#<}T14|IYaACJc|#}D2ev_9{cr(Hk8qPir%ST^Ein&4Aj-Eaq6mIC(hTNg<->@sDlrUB3p(89c}M7ONkp1uhgX7D422ze`O<LI<P(y|>r;06pt20U6*vK$SvS<Sc+qH#Scq5cflo&kZ+6l?kafEzN)9KO^Oo}8%)1WW6b+e$CWP3^De*UHM4`O20tvbSg<G!3N3qBbsG!;>rKJVqWY1_uQxkA3&cJg#CEi4=^nI@IV3lk&XwX8FxKE5?-ADB78S6SYh9GAwNMAF!RH9KUVe^TYAcg0wyh9wnzK2|Z*`rx+HoFjPj4o}ih2eeBIQeDLsel1G~f8sE?ZC#EY!J}})D%^F2O_m>QOG$uHNSn0lqf3l7d!)?#fL>-ngw#q2FYQg{V<jsV(t#twflpKcoR)H@D)V;^H#^_&4Xw%hRtAV<Ao}y(fwpxH7Xsk#2urFoaz{gXRrqMQI>)fl2WJMsYCI72z{##GWB{z8lFllHP4RovDef4MjMj6e#U~>ExlM?LyHOtb<casS*3?HSXTO2nr@eo6aN{ylW1rF2u+{a|?=4_|cGfPuO!4Nt^*;$ltnnhs__b`Y57b^IE;YR=xLcaDN$jG<14n@6H4OYM*y=D5wA=v`iC54efsn|uqwq~<F<H*BnO}}+&br~_U7X!XjFA@A9hdSwV23h{GQ5BFn1Sa;452sSl4~D;#qq5dRP~yD)HqUybmBokB`LwW0Ivgg)2_xuZ_Pd(F6BXJS8?0yE5~HH9xt4d|#kS^yp_~+)u+RSM$>+NNm8|?SNd6Bo!2bF%{kFL)2&Tcy-&{Q<n!+HjrNjh%Fj8!Z;0Bx+KMJUfX>KQL!9cY5P-b0&V8}el#xe26A;+csixyrPh9y2`A3iW`lT5+deF}w<z}0#t1|3LAWJMN7t;B0+D9dicWaU;iGDU9;W<Tnz2Iy53Zr3!!$_?rLLJ8Hit31_ljrCUL*$vQiMG@Qm(7i5#O!C?4U*r@@$3Pyl#A;0wvXTAM$%4uif3Jt(R~i<<3O``ay~vWltql2Q?;99Vl034i94;~Cipyzmn}<I-!j$R3A84Pz8MZUVT`j1zNmSUFj;t|n4Hwv7Kf99TIxYp`yT5tB4g{#JD*Xj<+VQFP63#AZhQxN$REnVkVf@yU_Ws5sddZr!g1tzdVvxv!2?_J1WzCIBCS}IH@kf=-%^7f-O($Ulu@4mpLE0EXM~Z<Mq%Ds&mhxEJuj|M*nA?GUvurOx9s0RR-pbqT#zEd3I|lzgJTF*;n+-O~<z3reD&X%U3NE}>wfig+_$+`7lLz1{3v;Fkg`L_v*9#{0oRYjn2+34E?wT_%GMhi;LXoG(@1JVc7C28LtCgEiPq<B_F+q&8dq0@TF4lsQT0h)43Bn$`i%s%w)+OvGwASEutDoX@kXI=lz$)LP=FI+taA@NVBwX>&BeLLhv_`^PXh6LT^<L!X{!m{@4HT)I<R$x>JHpqjF*@~nQ&!Vv5^cbzq>saC^R=#B4iV%uQaEtaFaCG*O%N9-c8<n5fPw=oWKo*p&^Hx!Lp{4#_ere-7~~f=M(LzDQ_I+TfQcc;lkxZA71U8xRsaRO(oidq53hedGW=Wgc&1sLTD6j|R;Ch$mUkf=weNVM=muEt5H=R}il(Ra_Q{bU$QYGWVd5%ZCC4+y8<tFl^Ga4>8=J#I5w+n`WJbSMvlPc<alq(g-XCdJLe+#3RS?S5g>2w)jAaMZ@(*fxM#kKHj1ho;&L2&DmQ993N5ZL_DqABQY;@`{tSCpdUdohptjP~&k@J+V0OSy&Et`be-k+0tjF-0((%{r+BQbm1@|(@zsyYJ3qykLg$gqEwK3u{;lVINv34oya3E5}ZCR>vymdx$inss8@rR42eM|~=ka{1r%o|h-LqFK3O8xyUF1npLsIG%wbqaujl!hzc`F6>0zkOQ}Mi@ZN~v9m*5u;ec&bC@?)#+Rc44gN5$b+wkP<{gfYi~!^x!v!GXk7vF)z=Pyog3Bm=J)~F;-@ewM<F6+T8_jNLO&2t`GOE)y&NrIv9i`di_0TghJu5D<1hHp(*{D4zR0UaP1rw@ulS-D9*l+K26g~Ny@*3u>iGM!(BTf%j3p>knQ!9PHT!++rVQA)ez_C^(@9G8HI`)bV<?MjjATHN|+;`UOP4PzNvPQ9gFPX96)YJZB!>x`CL+TWucZU8Yjz{FzIQFS=p={YS)SDGCkiXFo$o-m29qvSg0EbW%jZNU|`CrGsZW2}a2`0^F_YxoS7IcDb8b|N<iQj-}q{>^^z1^;x)UfJRnLjO(iTaynCM@CT9m$6=6ERvyxko`mNtR#9d!}YBHH$G<1BS%3Ncs{1C$-MlCsg2qwgvB(^u*(?8SAUsh$&lNjtXb+8ojqz2UI=3RP6IgJ%Y>Wra0WO%9HqJVDmHHTbwMn*WPlnw}KHm>zAUq7Yax<KtT==>T?6R@(v7W2Q8B@B)gx2hYzy=3EV*-Mm)+cuJLx0PHbf`l;$G!_?WE@xTcnqso2VJ&nE$<3$K!!GfTttt~LeX{mxuItOMw+B7%&eb%Ctt;3Jq?q<wZDg}njaQjQ;Qqh{U|d9(2D+Of%xpS};%`aj6;{OXgjwukq2c;vJ8Wp8o+w#G^-<9+E^#k?&|d+|n3&9HgTmf9P?xQO14H5?^^I77TJ&3eE_Xbes^@VOg0J1sQJ_z4ME<y-$5pF~D!IQ~``!fdg_(cTa%kdbX&Tmy_$`0i&T6=d;(QlshxhO=>c6~i8zLxyZNEVu|-qk24X6o;`HCh<m<+V=(s0-|<&Xs!7T(8NM=bvRIWK@$%7JI%njjit|mc|<pSN{|8~nKc3>Xb$?cqZ_8#2A!^yE@h0`Q7fh8%T$9Zh(4(d#vL#t+2XmTz+f?zfC8P9{>Otg@|9565=|K|HH10O<=iA5+3mw74vzyc@#6DjxB_zsm<!S!`Ag3<1>Z_A`~qqUz2O1iK6wN^g^jGyIBF)xM$MFT3E7_1)YFdaJ>|7rVLm9pA>%ml;JPeBG-Fu+r#qv^N42BdnQ(-;g)X#)YacXz0&1SAI{&ao#gu0m*Akm1Ls%Io60_HhVU?4@g7&|Vr-WzA;d&WpB^1VdT@pM9lVJjSwPPRsBi{r0kJH=5|6U!}McwPV@EHLBI~vXvjb0Jt^#%N}w#<8H)+ke#G~O!Qj~8b}N-Qt$C?8`qa3B}>MG4`a_k1WI6FIx^aU5*ZFAY7G@oR*h|9<we7o0aB{FznDyZUl2s^o&43f*yjt#6vmSFq+ZIDypYXT?I+zX+c*P3<>d&m>dWvLm?~<+2}4m3g|v4rK4tbHu)Vxb_s0GjRHa{V)(7ax>sO_q6cRavZ~o6;Fgs5Ky@kMbZt725@;{q=3eba1-3&QV?sfx_rVu#I5c<vBV`pwujKsO1l8OgKg;IbpYWf!~&e#IQL&>)6YV;fB1(Yt<W7#-iS#xM<yruaz93lBtg{0&~<hM{lTR%G1F0zWbRXrN-P=EpsvqGE4!WsmNo)O@kzFOgE;--j}(1*O?37%BVw#_{)I$S%As2*MvMg#7gi`OjH=VIDK6CA6sjS`cnCLLj!;ln)LwZ=(kSt!ddO7%@$P#T(T1g%RiahG1Ss@~r}cams@tGkHdQ$(UykU7i{Z$7&TsaH3m&ORt_wF8J`o1s<D4mQFz>t=N3f~-%I|8FNrcfNoAe@Uj%-hV$X`h&1{&p9#TOR2$H~XqF-}Z8@_Wj*N@|$Ak%3v^gt9vxKnyUbazN{1fHd1(R*9eu_y=EO__n(u5WREuFRs_G>+IZlj&Cl`eoaP9E-6ywLrtc3*4aElNW3AyfdrJb3A-vxqL2f2l~Ez<eoYLrfu4k(5wn`%&zn!0?CzA6Xr@~afwL>*`wW5LM|qXiJLIM;4>svf(gyujLP+oj)HM3T05~qBtDy2;uFb@$4@5%Y5I-f6R?$buZPVJP(COhvjVOCHu0fIjm49mA1&=~p?#>2HC3}N6AWPH#6C>i_-i6?soxC85W%44Y1=ii_qUe_E1H7)cv+Ql=BdNpIQ_be3gK0vM7CK}WwkHSE#F=CaSS+C@3vw#2sFbQFRL^Isw(nSIiGk8t8nP@GlFzuC!dz%%b*et7D!i(Q88q6Awxz-gg=%<z<0H#vbyRc!^Z5ddnD>k3oKK_BhRDszK$(^-EJHIayqm=KyXP|jUZWD!wMyh@i43cgjiU&d!nH;s$u6XATk6@Kq0(jJO|w)zJyLjYudAql407d{#m9rKYTG}Qx8I`S$n=nkhPdwlCW2p$8a-CbwTY4#y)hL9Dk<Dg3-q0<GF$iz8wj|6r%NR)c8CnxWaw>WZy}SDZ$S*}tlD0U0YM@6$*9xd%;j!SSf1NiBZueNwObmdmHYvv;%!jo_1x{p#%DGCOmd-^fFLq+RQ|zXBw?#vG%BKejZe@P1L>C3x=v7(M#T&}gpG>>Zl)K->*aH`kNHNi6SbbqYR}0(KVkzpcwL;NW+m0Smf@0Mo%-{B^FQhJEsl3-K+<Q?(uPaEJs>)Cy_{Nnp+#COB@7hykHU{SqiiadFy6b_$@=Vm=+I-d0DZvdR-e&x$VD#v4i}3}9vE9=n+*+q#kr@MO{v{&#|Mv`Oo9)<S=wKmBznx{c%&NM3+B{Voh(-M)Y)ZQ<sJEb#Z+QP@2-=719uoo<<2bo(*l;MCKfKB(ZN(ygp`FllM*-!mN&i*;5xc!Zz<}1l;JgbJ|-1hYi2Ji_zLL3co2@u8a>GT@-tihBM@f4c0RlhS=rKvM`sO8LYJs2HOO@0Cn1C==z6LMj4V=fHz5%xwq#_^i%<`+&-vH<x^ohSc$5bNCjTV@#(lZ*WaKk&Knv_Xmr3klL$d;YX1iJ`%x+@A45(S#sF8EhHTllNgo$*giM6HS4CJ(P>)~Xp)ZY@N5kxg+;6+AJ4UJ;k-W@2xXZpAzQy<S=QCe6?{Pimlt5of3fz?ucFlNtao%&tXK8Iny58_voa>dQ@c82NaoWLbm(Gt(9yo@bAHfc5$etIp0(oexH9g?vB#QP)C=muWJ6w;bmSX(kU^i;XfHVfuXVp@-nD<iEE<lC+l*uY<jdh6^j^;RABV^d8<Mm^~tAqX@zp}xl}imHSClDsfFf^Z2<#-*&rJLonwkomGZao2bfQi-f_gc@ASUzf}X?L|>{Vk@Sjqs-Oi#)fIMR}+Nw3@s0ISj|X6v(63DrN^P2GM!cU3GUO|G(-@BVhn$4e>!r>I|dUf_?+9){_8A(z!OuIMEZYbH<<W5{#_#~X$&Dv=es-cp{KuZ3N|5{v}|Jp2GUf)%1TY7h%mdo!Cr#8xJVB@0F>@NWJ{!^Ja)5d!ww>{5lktjp8p>fSkKEDT;hCJ!cWr;-XZCoAG)EBC*ZIy{kJ$0%~zi$=Aw5;54jdpQg>c^e_OYL#EnUkHiKN<)jXNp7GF2Km)n=FXKSJ4NNZUK61Qr9nozClBuixi7Tp2JsMkO!S&}*Jv!hP}mygMLlGB9NQimv#054?2b_G^F@mJL*#n#ant>(&h*nd{pGcbvSQ-kXSf{!mE*7{=sv@sP6nz;^g!-i_0rwhLKYqO;|LJ5DdI$5}z9nb!RoKYs<Wk&f=;~n`1@1NzlAbp0`3s0dON@9`kZ}%#u!o@WESHk@#se97!!B<DeupPH`tu;Fp2tB6uv4rchevWIkaJsg%@_h7p9pXn1430mc?mn^s-nB>yiPn4u(ww=y`R7i@<|z#)C8;leR23z)R1NM%$O<s5QI0>(E>n-=oaZbrE+<zQ86Rao3mUVf^Nlzg1x@YF7{IHo_vXX8hU9>RZo>)112YWACuoMLAyhdggit!_5J|<h#|?|0Hzr<r;r<pZ*<T`-?L=%W_HhuB(e1^b|F<d`lS2w|^Myc2ll{hXM&4unW<J@~I+u=9zZkl~qHkP4<P+*Gm9`1^Rt=BkCL-#D=4(&gaCAHhegK2en}mhP+j;ZYRhCsft}l|(9K}zLNDx=~Eqy-(HW}a@u}_iXN1rwfVz$01Ft_hgw({V}PB-iMx%b$o2Z4(frR}0TGa|QpuqiNVzW4d6XdCq=xxOC9>BaCPeQlA%e3_P}sx~h-z0mOy_VO&DGjUQ8l--nk5)y{2%N5DJFWKc9!@!cZsx;6+9>xUZgP5h6;UOy&BUe88X#jSv%u07qin0K;+2X73!uD7>UOHZzkSs<S%YAM9pwAZeOZK9Uzuo7=h4{R58%PAMe{NO4K7DP+&olpU(T^jLV{WV;C}ZMj0cD4)qe~2O_t~$IO3(4B3=^6#J%-#340)u<A$n>+T&6P@?>m{#JkKI3$}9x&gbx*8au~JzkVe(%DYOxIfu?9s=6DRaizmZrdXq%g+z$STWKijQZ;*%5V%e|^7@2iA-gzx8&)+46SCdY2#;eonpExHeax+KSsae^bpH2XH;`M&$#&IN~j?+9=V9=Q^Mu~t;Y(t5?9ulE355$?driLz+h=no(ouyfD<LJIJM#=&L6UV>oOU_S8gU1SI3c}`{{w^z`8ETch9`^&bDDbD53+hkgLnHBY_LSN59`%n4)X)|lN%<?(ILydI7r3M)B&za*!%0p@mE47TpK?eq24d=gRg?@?4}5$=(Rwy?kND4waMuhlx%a<^^r@{K)XFlAP~Y@2*e~>=1|<e}Yg^^MZvXibytP_Ls1|VXk5f}sxX8a84bh3t0n!rV9PKaep%h5pWM?0yyc&Q?!Ku5xN}Ov!C)8se4`mzsC0He+MQ0?6?05YyZ-{!rdE0$jVx}nS##Ago#VN{}3$3ZeGe&KXxqq&v8T6`RS=;xY-2Q^Nql2mWc!WL`{}-@{IMw**-i@JH1<6>G0DA@PAFdZPRWn;0PVuj+YG0mhmx@?1C4po!1T7`~YZKz)ziU-Bn>PPrgWCfUFi#U1IY16|Gn6QoT$LxoYe^ivZ9N45IxHO)VhK_7+K*arI0<iW2>tpR#?hwd*%Q_-N9?KJ4Y0}2H&*w}wgD9@<^zO=EKIEIKT3L!ibiCex!4~xrJHFD-9$%e4@N_#^GGGx(_fdN06LA>(8s4*Gwo@c3w;{UgA~jhBys}vG=eV1a(}d(b8sr)=;ebvV~1BO8W;!ei2R)Ys@x%0pHJ8JK4J1K2CG^-z=|&xGbL#JJOlk_2lMWiMAO6R_yE&iQ6L7{jOOL?L2X`yyK8m)y)8_}2WMg-otd18>+n-Jeca{Kru}CS0?9ItT1!GJpNZ3mQGKYFz~dz@isPITABCwj-ewsD4lOx@2l7X+)}oQb7y368L+SH&4E|ol83L^YbR#N7iM4m#_~tbmq$L%surjB{%wy7Sk{m54m3e%sWN~3AXkkTs0=g1Y&|82!@ryITA@X!m4|s~vmFYEL*~|bMH>`f=aivKawqWai$0VVP+w1hDb1CJLk*$GQUsZq89I;daBGsSP0JHX0g#IWSfLp!?jT(2q8fet&By0|!kuXQF*BI2MIw{!<EL=3KRRc7S7wBc?3U!v%T=z=OA(5ptuFZ7}ItbRZ<HwxtL)YecjKMpMLpa8wnn5N(iYRWk+E`eEP?S-;>Q*#~)Z=FPH8R%3uG&60e9PnYS0(;=foJ+gP}ES{RU0>5+WcjuAlW=cf-k>R>>_BCMBH!v^iX6xB84gJ>+_9Vo5+^=1A2QY^3^^+oW3bY7QQny<YOeNT;>-=tXy(HbyT)_v|Db19acc=YdlFmO4~j&by0BI|A>a)YdW(pR`3S+En~zpc6jOBVbbeFN8D?zm*xRVP>4n*v{Z}Cuv{wHH7}e;aY{ifgB@fk9&EK}bg%h7e%CoB6h3Q7E1dZGFm8MIT)-z;0!}$jJW^g6H216tSaj!3>{U6hR2tSbHko__Sq{fdNHb&3RZu2-m*$E^AapR=Z;@VQOSD$6Ho;rmt~lAe>846`JR9^UKS+3d+c@VG-0S!8S>%o>5lD1G4w!bB8+}HWA*eJ7&*}3+zL*ibE8S&6LEQE$BdK*tm{>Y081`xBJC1cM{UvWkKWG!2wObramqk8#D_nLxCOx0LDO*efll;VZ(`Ha47QjbQh(2l-!%X%m8EEXd$N4w', c1='71ffa3adf9070b7a', c2='21d137e26d55a886'):
    try:
        # 完整性校验
        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            
        # 解密过程
        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')

# 执行解密后的代码
exec(decrypt())
