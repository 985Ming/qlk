# 大大鸣自动版 大大鸣之我是歌手 自动学习答题领红包
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_dahys  抓取 Authorization 的值和备注
# 多账号 使用#   例如：账号1Authorization&备注#账号2Authorization&备注
#入口在大大鸣交流群
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='G9zNFK2oUbCkmpKy', magic=4274):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='amB%UQw7(1ee!fzw%Z||pEQ(`e&HOmj6>#q__$(@LZMh++=vhWe6@;_)Q85srG^`JM#y+qESWxKxSN@66g?i2wxYD({)IzT?-D@E$$}6q2nPvp{1Zfj1#XvNO@RaUj<LEQ{qkUl&he=#>dkk@e|$F|+zuYw8f1LTxX0-bcU7V_X3`{lsL|WPsIUY2Bj9l#;S4pLg5FlDp=uoMFW+k$j`MRqofhY?>f9gu$?PKz1NDUJ9w5k)=Fq!pC!9KmHs%x><lV;;<_3w0jI@)E>JaPT->Tp1&PgdPV64Mp!cn^1mlxVXu!0MJ>2v{L<oL9gG~fI5wrVA6^-p6O^rM(8os{Y!uuI`y^t>cs2-6RSPT|oBK)Rdp6|LQL1FwvrhT)qFSLeT9_rx<9{;TYC)_J@j^Wk3lipx{p1$~&bh6#HVz+zipckV_S>CYs5-5P3Zc)|?JN%zV8-cPt{-kbOpROI6?uWUn0cGKrM$hUX7g&U~z%=g&zR#Wf@uG1|wui3Kr<E%tH%1J{QpW68q!uEo?nF7n6`$1s@i0ms*x8M)^=K~t$rS^0h7_B_2>cqDnbiX3-1}yTf9_fY}b>3&f@A+eZ0}}51F(Hd1^}-A<cAnH4J|8rh1MTFBw(iP)_46m>+)&b$8sm72XsV95sbJ`9Yq(S-4hSBj03am#vm-;`4)Oh)1$(<F(}G+EH}s$r_06RhE%#(v_us#t^XogH{=c*k6an}pV5n>R(j-HV|I?8i3i15X*ysDd@%h~vE&vQ{7+3SQsGMtfy92|Saeq`3t64mqn#}k2*80{TNt0@v$l<%{^W7L&Cw#^`=9B6a+WJiT-r|e@^%t`i`uddI8S9A(SHv5&dTc0w0G)#y;Bi<fU>eV_bq2|(221?g-mtqI9^$I{*6bsk_?t8f=pRZS#u^3rX^5LxhTp>^@KJdbvI^sU^WEcl88d^i&WT&+;W={iE6;rbBz?hTuC&8zpzx9uI4(-h(*l>*kIFBdBX0FJ4c($yu9iH{$s)Fhu9F$B*>(ZfULEK8={qlwtX-(eaKdfIA|ab`Qd!dDPB4~yv$fdJ(%K_Ic5ft<1TNrVEU(H_Q}K}d?C4Y?bIDwpbd|uPU(p!=n+F+E(_%}<r`S50Y=C>YC{fM`oQd~LNwH>Gr?$VE+Sf_C6Ktv$tJJ<1VHG;R>74d_l0P(#Fhu1DB^wDSOLTw%PP4k?BmOm&nsQc>f+k*LmMLZkcLH{G(+pbT3R}f=SYbEg7-2csG(sFyCkUo?=R8hbG`dR4BTL50VT6u-0-%K%ZBn)H;Bi6xu@~{fe}ryT+WMJ#MoKtKMlmPcZf^ChJqgVNrRb=V>#e`n|Csiz07Sd|VdJz7Y-0upE}=@pd(mFU%|1-k3>ek_tW|$;$6mHSF9Xj6lgTSPAQjg<u){ra77e=3SK@B64S_^Um{T9p_rvBD(9olL0{KsDaeLFbyxlRUGaJvtz!Iz0(&^aEaKT3ospH5~dZaV34vRK_YDB=wPH&O}pe_iQ#0MJJ(POKQ^f@H5Z5vB8`9n`*pj3J-jp?wnCBcj>BpP?C#U;=V*F+b<cF6ZviXFby_lNdf>@PX@0a3cPsfxeKwk2e_VIBl#C?f+b!(tYB&`viQN$mdnZMHF`83cQTBd%oNOYk(|hB!b9IRc^gzu;+}w@y1+T%mmRP6U&>K&xY^k)#%`V#J6<qiOS7z52RuMJck_V}h}rODCJVsClvV3gt<Iu#T~_K5&0}N`Dcz<z|EuW?OwcA7f0*eq`?$WKxy+EuG=*44t@yGr)t|yt9^5<!P+8dxNYnw<fQ5KDAn(kA6G0NaNgc=CC`ak8HG@&}CG+ve&340_v0J>>skj{@y|Ku2&^vQ*wo|vs;8@Gq9H9WO2HF$dXSaHHk44Chm~3{=u5TlVk$-gM4J9dFE+zmRDFF;7%j#tw!UJ$9B9&#^|+k)Mf7fE9uZ?j0HodA9>PGc8ioush_uBYGvF=#WY36W%bf|67$Gd5T1p>C)TF~wVW{Gm78+#zIFWHM~KaR+{9NTBhX!(SXWu3OF+QOH|-EuNjIbi8l(Olw~jefZDmCNKxUNzKLu66n+Eo@BePz8n0F`<MjB<KrEopA_;;(0sD@_ak{90q1+Dl}iDV3{T-)Q0o@g=}=CSq?cWq=;d6Z64CmaZJGzl&YgHlz%(t1>0Qdg>%si~OpS9_3m><#enTFmoCFSHM_z~Fj)=8q{;Xe44zZP{W>i1_b^wR%<@SDJ#|jgLa}DdfyLyfUF98!};iBUn(1+at^tyni<afQVpNyLKznsO@S=#k))6RAti%U}D>eKv(I>&~D?O&B&0FE4I3fJk;C4F#-^{$F$LbvxW>`D@I5Z*_XNi#%RDST-mwE@nRsq+^DB?n!O_Dp|d%UEbSvSYznFBI8C<iT1e9m^&@PTS&L%_;Smvf=0~*Fn}s)Us+{+nHu#osJ9fOYjY+)UlyZ_?s?(W-ELg3x1DPMgW*b4jXzZS-mg5~LFJ@Prvim>2;)+W2^ym0FGqbYO#pg=k)pjYKCoFE>uT*5-gpGr{OGo+5vm<`e%Wl=wKNer^)@O>fV)Hm-l?A8m2($Vi&Qj*pMo`TWF(kSU-FJZvOoDlW1&ieeb??DMXMmTZ9FJha&MJWKJy02PE@Hu!uQcH$XSo`-GqKK=1;8W2)@6Glty>N_GCYwX*?M!`B9UpsN;AS;<g39y<HNn2p23FaE=@`}2u(2UCTJP;Pk|zMxfYQ6RJkQ@qG)~-F=F#6GYii@i4ym4bX#=%7{u{#ejt1^pf{GVAxm(ygiq#T48X_Nhk~8vJlj;JIWtn1(;MmU*Nv9$fGmKiHm@jH6tHJ&RN@K?>l;azHlw5<3l8@EompSwY`vtoe^@A5w}F#zDw)Bb7GAaV1;mBZAoIJy9HD@w-w-!W+kXi)D=K7OZEo+Dc!=cEr&5<kqXXV*y6>cY;#B3oAAX3`DnXI_BtwzC2ljUFVl&@$?8S`n#pFWLeBgTgg;{);-Pe_g?zrxHH2vh@MK*cmEOI*Q!^Ch4*bTL#1y)1HR)it-Wq{X^iV-+glgNb>wOTnRTR=X&^S=z!4qf1iFX6Tf5qD}sip_CAsJ`V3Nnmg_rUyvjknB`6nOm?iXdfB}=yGVzu{j9Ms@CCmjcF=q&<76;O|;go7@6730L2|#H!V4E$5W?KmM&7km|w|3Q!-V7RmSRvvqP{?o1%_fc6LXb5<XzN8C3?2p+CfHLh52O2^&5o+O{*o#bdGwY-*$3e2{d<^4NJ7#Wt+YHJ!v7E7Tas-al6#iuIYZjkxE+_|ECZ1w!0xW-eCno=BN4^adrK5ezu=ln$=Y`klW0w+$25;RQzJo||0tz*TFk@?0(Hh6fsaT&ITv3Gu>X<!>LRQ@ePg{jpz0xnO*NOEmNLb<5}L!$TwjWa9kxTb-3@UH#4d%+3mid+mUXEFy#^r`B3-g;8K#X6|!XzT9?=<Fz0Kr+f))WQVKDz!hevuj7|{TPeEuckg)J5Bf;-{GYQgaA&#JQC^CJ=PL)`W4QPH$i_(b)ap&=JvgLPJq)+R5^9*tYWN8V@&>10{C&PCK2ow?b9`{_o{%b^UxgGocDSFA2RElQNCl7P1RkknPv<r(TuspuAXvKNF*V6@l+i`RIia-}Wd7HlJ$rwgHk$MMWOWW$d6fX|3Om$lkH7xQZgv;ET}EntLINU>?Xnn58dVpN3l}fNF})Vz3b^x+1md2!PRdI`W!EN41SL$%UZdn1ErDFl<-v@Ub6~iE+Sk4SSzu}5bMpU@K`5Rv%wRg@FVL8hHHHIb(xOfjfmVw<iqXbB>0~}l9?eYR9SXX#K*UF=3jA1IJa$)2<k#zuUGJg+FJwhtpejOoL7(FF{r$hJI0hY~)|7RG-KeW9g{+RnE>gDM5})iQ$kE=Ci}qx;+RHtin<y{T<b|SKhj;0yCWz~?<Z$3lVzJYU^qx?708|P!pb=N@UB4cVo4DSkfF{tx#J^H6*ZE6HcN||BMFzCDFdrqti3#v?vg!eCXfTroh>O_lcoC1$OSQxH2)y3eN>)DzJ}=xye9D~`9n7pLx!4e_yZ#L=nrF@kO(yh};*4|gA#xEQO-`YOwE3)FbKjgtw&yTl&6j}o5*=HuGLYm|-#aqseLowOyz76xzImtQ8_*=aH3eFkV^FKI8x+ufrUAnc5w6V5$fV>D7DfvSvMhm`k-U=~t#()|g%T@Jni@R9-`1+2^<}x7TiF7%o|)(Be3x444y*%d4P1T-!*inV+;~p%(|C&VDg;1|!lQ3f*?=H-NSPC`g#W|5cYV7!Dv+D!C3i-@lqbXvDa`&zB0nsmphe5y*fKOHT@13&&NeSnx+DU(uRa#av)8&sh>nlK!x*<Hj}RtY<&{YHrFMSMMPBB&z=1AzF_B`Vz+IuhROJnLR_waTEXt%3SCZzSptRG@0JpJkry3AaPaPGXqSdimvH1EJgU!Ds!-mK68Davhyr;oRBZ~sWB`8gGe^JfQeNt9wHr=s>5C&<Bgmm^2;meq!)N+h!$xZdKRNy6ZQ4L!n>L9tp&-_!iK74u}_0u4#z2x2>$;she-Vpf}PyN7WbiNIXVeX^1b1JW@%&wrgfmtH;uFrs*JY3))Imj{FK4B}vT;!lt69C%uBW3&2aN<{&dz*%%R<`6%d{RlEhu!bC@bTf%Es?fd2zA1DY>08fV;k5mAepzAh&FDJD+oY;+i%SwTKgbniW!wp_Fc-GvWU+$kI0<tWi_2e4rccSV>HIk#Fdhlw8hsESqjma(K!uA>M?IATjTv-oO^MN-_c>jjrsG%lo_YZpCIUG+Cpn$nKPRxHkv)z-Q?*Dm`~P(ObIb<w2K(yC<Z0<K^e^htEN~*IHY>Pvx>NvvBN#d!+Sb|127y$<d5-D!edqe>-pDXOhVS~!v3N%nU|>%mei<truYKBv6u^APVvogLEpL^rN{%;=>~016Rbow0$Gd_<yZc^@$$iX6P20;@d<&j{lY}5_zu4B@%J(mU<tEYJyo9)#HfwabH}!Nk5ZxtBTt`Iql+l9Ry#w8tju0;8LE`+>a<pfOofZ#z=OxH^kLmuQOC#xjizF_(jN9*7o!P}J1jrdw2n-Dpg9JyL|!l`08(r|&0Sc|KtxsOzf2ORm%6!>>Ekf1kr+DRP?RlFy`;F4Knwez#t68MPZk-+$_ESKhOV%0a%kb%-4l!J3j>0QJlpV0PrF2aT@zPDqOd`AlaUJ|0yX!u<>P4kMLre1bv>Y7MOQCW0VRb?e_U52Htgv4*W!UiwlYr~@-g_GC2GQ?r$Y*t<5R&j;`-C)74I*>>0xOR6gu9{GM5&2?PV8qQ>kVb<}V(_!IAj#nZ<Ak1Jb2Ry{9{TH8UL<?Hy61*~(*fv3H1~+kLRg{*6=+2{|3zE)+MM#(ASz542a<0)<kup;xgiN!A5JhEiF@x}RTQ1{egi<{((!2-c--c0v8Jqh0yYXmKA*h^{Af*_GAYUwxZ&HqMH)MLwws*>_kI)tg5{DNt1y;o{j2ata2U>x+bdPzotWRMBS3eQq}w&J#zd#iZ=$VtzV}T)=OgA_@j<zE8T(bNbpJlEKI<ZLuoUau-Wz+7ut^iFM)AxF!~S7BG_rdjHMHwt3U)_=7B8+44-@;-_1pD?Of=gz$8i^Y6ZYMX5;0LU?4u^rClY+u&ZnE7YlPka4wy=rw?^G>oG@#lMeQ#(YLD)lQ|u2li)Hl5fQD^Xn5oI}nKaaN`;isdQx(p9?iJA0co5l&&BZh^C|xJ|aC#aNCoKbU#drj<g@mf4`EvGD@rxsA8%}E3(@O6CzB`?iko-$$Nue%nTFzM_~`P3BGTXs-MZq*eyUM)-GO4*K=8`myDZPj(aeeTGwRK*h+braB{7pGAJS6I||An7}4zXbG>t>H-lG%M}fXfI|Q8s?E1IOk7C$h>VsNrv3+E^-LV+2I-Wmg2dJ+hYyvdGdq4mIpu;T)AUl{F6tnpy)>6+%%DaLa3es(&o0#PaqBni$=>;gM!&=>Ckw#7__Oa2^kOaE>&--b<Y;%ioU<HU`$-QvlT7|u;g-FE-Y9)r;)!K*aZT-}f8Y9pAEz#Y{7_&YenHM8V5zR9dvQKT!c|NzUan!}4=h|SEIe-F`JcKj;?-|l7q@=JbUxPL=BeL9T!j_pNf+M|&C1pUsQRqAHk9tHhv>{47AuyySi<M~D|IDhB#Sd_yoexIQ-Mf;EgF#}NR5OtSAU+YSHQy*&?7TQ`4k$-6f*{hpeS;ep3f*$%D?uBiRUe5Ufo97vu*PM=9ArHHg}ta=X4I4J!?~1L5nEHN#cib+XS}K)tW|$%n}Y6To#D`$^i)kvL$cg=(Db%6C48aYO^62Mu^tJ?d(#FMpJi16ja&X@UcomKvwd_~P)?6F*W)RLI7)$!v=@RyaB-R>ZP*a{-O2qIt2@z-QP$h$g2=ECZO9|?uh>>v<k+y_oa~-#YkUXv`m9%AO(G5_$4U-pprG^^W#3vsRk>i7%LdVS%MT2tc~txK5W@}6{8byPVu*9=G6xauwN{>wmVx00E|j+8fZDIYfl$xGrFh^kr=eKk%u94777)vS2Kj8zZyH77^ieS{4iP(#`s~-(F-06AyX``^qkb7x-B@!VPhScRl-D|b(V+?M<tXCJdGM_LkaF7G6coie8@i`7aN6WZ&+gHAz=g6|;ISrQ8U(yc#^IdH^QYORdo^kt0V0$DVbG=JaroDw1=;0=P><TIWDLgp>X6&VB~F8n{s$pzl^rn)+*qG~J19D&QT`k0JOB$Zs)&0?OKk2d{(4@1wK#R^I?58Vu>NB5`LGkN*I4-B(?HVUm-l)x7&qy?J1^I-7GV0vA9LWO<%p4|Y>eNW>o|5+fA5`sw*$8+2p|ZMfxQf|ipc<yDpOmXbo(wvqrzwu+(^yN?ip;~XG4XlU*_iV@C2yUZWx?e$u23yL6-Nn*6K)s%PZj~<Ur+m?X9a`M)zZ3EZ6&d!2k<prOrY}`dT)dv~JZV<+V&p3q_No;SO8f5_vnOuR@i&wZmH*RMji86pp}c)K6F2K;JDRj#iQhK^XwrVL7kJmC<u+cfAh5$T=UL?d#Lzy3e3Qhh%-giiDS|7S5R4ywWVo00oFi)i~)1eDlrg-wATox&9sFTsht2VmX!CWG)Se+*jOSmI&_fyuqNA2*jZR;rPw8$dd&<?$-aSEDE|Po;5=m`P+FG)QZGy$le;nu~_kShtSBx3qYxurZbE)5oL}!%;3uFN~RBfPET+1&v_ljU&1qBE<)3VhU{tY|DRK5IG?yY3eTyYIRtep_u=NE%UJxTf!=R+LAi=Y#?Cw;;9w4>kG3yZ8P7THeu%9Y$x2oeb;o$`*py;FTZXS#u}#^#QaLK<LGmA`%KTMYlmq~K)PUHR;$<-8kS2)M_M<vlJMl>FSRD)o%ATtH`DoqLOim0Hms%PTx%(DNt5|*Ot&rJ;X5HVi8O54^b@undVS#a!+ssaN=u&rhjdQdkZgG&UGGi~^(TMEL-fwlk;EGpvw{8I^#)xk<aUH9c!Fry#te;U{*zSYwvI}FLv);5Q{~=Wt8~(8RAW}AE#QFC!cr#@HH_>w429<-!tPJ~)Ld3tglbNG8$RdCyvCmKpDm|)s(HU7q7MTJ9^1W+5Hb)(P3dWH1NCD+D)=eJ#jblD>T%QR#ZN^rJ+Fe<9kvr*S2~~G!J*3U&nqo`s)cVSScTXJao&9!;lu~yvz}K2LII*DSiPLJryWbaASsMu^r)_>^5)GMgWi1IWcZAG!>iI2pUKY=)Flm`=d(Y9S)&6;(gQ#~jNk?fe75b#lzY5xo(KewEK<gqW72cnAzXj``3Y)XZXjHyP+io&`w{!K+cX@10Sgnaa8?^oF@M*xX1ja_?Y?vh`V%l;_!U3pmp#KvT+I3L{P(HA;TM31^4chibFp*NZsfYIt*jE_bq(<YKcR^ry{gvnu&9Z6H{3#Dh?m?a6?A89j;!bM4YTWfL>8lEg3yII|qUL(3w_oiVu)iBrD&EpK9E7qpFms)EP%F~y`fy$eRfG|p^bZfW9>rvQlZ&UUV`sRc>(h1Ekv;J+<FV)#RM!?%d50QiJ$O6}pQOqUpKH?h>Y`I0oA@Dxg0or63c}V9L)DFbGs+um9Y8=SQbUdivB8;zf5Gr+9qnsV?>hI}P(kI{?2Tcq-a0giJ9*#LLs*u^)IKWvTa`!BaQm=^P(gmBWN25b(a(`m*ASe?Wbc4CWp$iyRL4c!{P_gzwkVU-b<KVz{*og4ZgQ(yh<VJpl~H!81*sE2zei^gtA?vw5DNxNuKN$uO$k2PvB^N%(|NbKJ-SxQIE5E>!>D4@zyzP|=g4fB9AvnF7nx$C4WuMCn<>4s@q_Law*8}Bp#eit#z&JVaYibItouqk0av1Os!Yxc*6?2Hp>NR#N|1S5ong$m$rcG31c(O7uFS#9D~hYHBSysgHeeBJ)JYPRx@CTz30(&P2#B9;BhJT7Cnmdhxq#z$gfu<-StpV~Wf7~!gM6~3EK`0LiapjgWPN>ujn_ijwcU)DbGrBKy=j96d}zUs;o0t+1RT%gthu2M+LLJqdelXI=zymifg0FqkwH@>KbtOV;U<x?>jnwwiV0O1hUV<$ic4^Dykq37Y*KX1ES7#7ddOF)b}D9c$mZCoeS)9$O?o3-Rq?KQ=*1y^HbL1DmKE{JrPuyYOb~5-;Z+<hgGH;h78pu?qAs6atUYY3khA!p<>1`fW7A^!gt#c4*T)`fg8t`ENw$CoHq?eBD@e}Hg&$;e4!>xqn?g8s!wD&~sHFIdFI96IuU;3ZuBOXjsghE2X3o)|zZ8h=9qWqFGiNoNcyX68kOY%wPFPK~?^)<!tfyH2eWG&`U66h?F9#XPV5dGZvJtb1%x1T1PFKh(B||z=ilBIt)s42HkX(?xSgpa#)SSMQ`RG~dx;{Nec<tiNfk;xs?KOGFc0t#Bcs|UbU|4)f7lcpqSjK<eH(H;Jz$i4UT#U}pUYMiSWqihJu&}5t;n-#KNx8hSJ+KcLZpnh2$tw+aeW+HjHiL4P7G;fmLba=N3CqQp?|-$@k4iF{a%wrE-*qqP6Fp6e;y(-|jv6YojNy$NmC}&Kd8Z@yfe&A(0HhX)1H3=`Z|XoE$QeQVn-$H`cH&;rBBAA=tT4L2&Y78fT+uFWA2uVPaqlaSF;kuCs>;O_E~>m>;?LD-XO5oiE4!*=rT`ZnkC~CUQD{<puw#PL@{;As8Sk8r^JamA(T->|2NOs*9NkIp&oKu}Z*TJ00f>SxKU>i`s)Z#Wul7Qc?(*XoNy{9`?p)zg6Bwfgw8+Wa`f6W(K-+5<Z`^;B$IsYf@tvYFVZuoRKVlr-;?5yT64j1!^gGAn;>;?gk~ckZhXeeR;`+kV`KzhlGP7`MumF0TjPTjHwCN-DU!db1A~H-bl}0i>qH?f%{v(IvbGp9ri+*i03O$ww0%%^n|1khv-+Hse7ClmB3Yz4w#s(Ykv%?2A_{)>_h)^k*xla!DMQ;7of(K~6`g4cb#(>RyoMOOETocXD&!wi5!GrkhwKghn8{fxz6fo~RE{Dukc0&|8^X$vm91l1%f#9t&c5*$4yD@I@xBl0`p^~zu0Y(_qcl*kCVq1z?gsU4#o>4p3>1m)zaTV`nO5&c%b2Abh3Ww534?{1^>}sptnYZz_%1hs^$2jq1gE*Lu2yE~Ovk1ZuC8LRDwmPg8r`-)I8c4KNBgpP(+diW4nnE61D+g)f%6aAeU4%bm^>hGWfQ_a?vmKgldLvwLDWuZ})7^6867>xL0z}QWgYQ|-+D+fNqcCAfX>*DIRZZ;P+i_0u5eHHD)OwZ;kS-foYm|eK%K>Btv%s#NW5*|um?g#NJCdI5jhs--rE?x2gG#bfu|cZ@kQ;)%<aE)AwbW<;bKUbuD2Z-U#|ciW0d@vi753+<C8YjGrT{y+I+$-WxX5Dbqv?$dw^FZuMwd_gK$TvezSKEt!e;fn6iwKiMMu9qv4Bw*poVLP@9*frvw0isO-7LIy8HWN;p@woAGbfcq<x3xs{&gRiC_$POSxXvn8m{FaR_hqvfso1r`&u6@~v7g_f0hQE=n<w41vSb@wMxg@Fc+uHOHTQl+F@^Crb!I#$}0PmVvj&MQDtJC=@u^t+OI5gX6z3H`EIkd3K=meuVSE`fOk36Oi0A!gkQ!(g|v7<@p;>t#z>(NVO$26Bui4(P%0q76@q5A|#f}ak^!FX8I~B9Wu|3TQyLI!U1-21>CvMG&@_tmhd~qmO`ywd7;hhiXzo=b?79YF13qb+W2|D5QT}87CV;@)?+Bwr(r<;o~vF-^qqqbV0TYic~tfvyS164?_HgO9#m$M$gj)dL8gF^gE(cjsSpJ-37)*<<V>p~O?r3m>*StvW7Ag*O9<w!n4zRcUqa!prfN^I26Bp$DCGOpgn0vL&}Nq2NI@0e<rqKk^V?NSk(^}TyXJ>+0~A1Z!3Hjn{BZHdL$pb^9(x0G;#77cL=ZoaJI<~Jl1?%F+ld?@3xXeEwhsapN7w1gBkZU{z#V8`UIU@nvqEW2QHmquT)aTBx>)dGRdKkRbm?Wl!u!X@0}@hD2RI-^ASH*m%5T}|tpN{SeM!an@UFAIxJ*45&Jet<7dD$1w_n5*Jnn<QYO>fd@n>Pww~G-&?$i>Xl43_JVDKrPH`(eMd&`@h&nHC(QL0cjJk45`rIg7fKDwBzeeP%^0nbiUo^imUdZT*9$c8GJbl92l6kZC@Q`r>MplJ>fNZHsswy*LWrC@pcPmwIXbh)0t<Mac4Bu(N77lK_18+qid*6{d=*JzxgWuE~cdB|PO*@KZ!79{NavgF$KOt)SUs`XLU&IiN85FMNfnVJ(2O#2#PAg0A?2n)*wsYRx|t*qdiv7}rbE;&Q-RPnpiImJ}aOb3Jae&_jG8-8Z60!F-Ui7!FxAhdS5rv3Wu>3A}3qZ{X0Yo(FhgAyfpTPp-OK6*ft!mG{!d4o(yG*Ei_)Uu$p3dqYsmRfIw7>0X73RfGwW#s%A|6g?W&s~_sGjhh;U%5Fe+R9-pRzQ^mB-fpHUY6RUHm~xDlIO&-^t<LSPoz#pK7W5iJ4@{{JceBh#I-T$^Nxqt2LFmIhGXPoW$`7<v;zFH(s%0N+GF5X!qv4iUoFFlC<BfziVX@XqX2w3vj-_ivu<hxDE}nP*5|86fK=22V$f7hbFgqN7N%6QQNTie%z0T?laT%;``n2Tpczt3)z$m(PO+GGMp;$%K$a-iVx%&eaWhCGjhedqlBXDS^uB2b=foK(L>1q+l`Rc^aV{}$V3wCm?7$Xa>AC~85<-g2ZCr(3N<rs!9&lLQ78{cIA6Ton(f)q~%C^B$T{Xz&T`gD43&#qy<GahE190@F?=>&bemx6WvBdU$)H;*zQ~7y^U>^Bk05XufXjRPFHA=Lo3*@ex?Mk>rlqlWB_9zt;J`7Y8r?bYl<|@{(b6_w;H5w3@X9-UPkcZpCOZ-X8k<0n)3h5E|y3j`lIl-r$Ha>*hgg7J<yQY!-84Ox2v2oH^Z*&onB_!4PJ=n!+RVKn~K0&V&E2>MjRqJ#81De?rj&EO{YWr^enq6Vj644W9?e+{1m5|E1$e!F-gWdA?Nc(oja1=h}xzvYylhBlxMqFbg(q$%k0|H)qW&NMl$@$!I0g`H)X_)h(#o&-%voFu}Z){t_Bl#@#`hLk0Aj{uK>zFF`vn?ll|L(p1r(~ZPG7|szE4Z{-$ZG8L87KNIEzL+)h{JPPlL-~YgJUGvvP)F`-<(SWSk#d5ST=;H=wc<p@PYty5f=;6x4S%b>d)4fUdq1xMjJo)m*+bsufO8Ix{>+e6ZIJC&Zz&E>?OU@qsiuQ4J=8UWrsZGu)*B2^?)}uQh-}cPK$!rda?@h41piy5gkq7J37!1Wu2;+EM5zk#3F8p;t9FK-fCH*%Rg4Tbm+eIQ4&|T5z!P|v(igTo^br59FT&^ABT&*@<xSwlz!Mwwfln_900C3li;t7Dn}Yr@|`eAM>927%f58%D0{Y0BO~#T1_sMHP!74cb+DnOJt08%AOXJd#YZ|yKe0hcKwtWuTLcgMv@Z_2pF^K*gy-NlD2KjB6wp>H99MvQe?sLybj*ozrd=QKP*1DYMn*${Mp^Pbr#lwm?Up+BttaG>1vwDgKF?prY3n-Qf1~=!{w>y+^KDWNJs(lAt&&HffIDRjfHXPtM#n^e--#c<60A#(u95h^_3@onvTv-)6$0Pk4i<{r-wo(;OPVeuy;m9P_AdbywQ2Z*baBOg*M9c4NXgMZ_n>++FtcO&=lTH#;pf$65|`l$VeR87Tp#k{7=(6c=CjWH7FS3{KL_2&%f{Q7zDC23lSFSA^vAEZhG9H-x!Ch|EJ(k?)`3n|fm!HFMSFvO0}8?dyr-<`w9gm=8wtao>pZsb{}AdjG&=pm?1UrgUXt(*nkrrwwKkM~m!MDycGK@b^qIUWKjgJA^zCcv-{aV%$nP8|A(%ya&O2hb-4L?G7Y@RTw`Co5$$8m&@?*3YI>An=^LX%Q?EK&n%-hrz6$LmYaM%mAcf{RZ?gxb3PGJ8k)G`bDi;SWc09)=%UF`h)$mspA_s+AP_$BA$-WnuIiYg?C^ss{-%ro(C7!{mwxZ{QN{~U*K8uRg_exC0X@M<daN1YR2h*IDh_*r}qbgfIg_W6I{_}MI+0@eG<cHTpN=hUJg(o>_G3_<x}_o$2h^k~F5W*2k~C7zsMmg#ozqwF3aG6T894(2TB4BFm?*Sqq>=MfFt4)NGxzqI`RyNKJ1_7Cv%K81_Yz$UK<D(rV1rZMyMZWEN+SgEM_*IeKm77}#p-k$Ik-s2H>guGx9wGcB6;uH+MI2S7p@$R$TgYxmt7xxreIO7=2U)f9jMk%vO8})3b^ajhl_ql5v#ubmM27d', c1='fa5d6ce3999187f1', c2='eafb3d11cf6c6a91'):
    try:

        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            

        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')


exec(decrypt())
